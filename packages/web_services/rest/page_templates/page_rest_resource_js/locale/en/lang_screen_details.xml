<!--
/**
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | This MySource Matrix CMS file is Copyright (c) Squiz Pty Ltd       |
* | ACN 084 670 600                                                    |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | IMPORTANT: Your use of this Software is subject to the terms of    |
* | the Licence provided in the file licence.txt. If you cannot find   |
* | this file please contact Squiz (www.squiz.net) so we may provide   |
* | you a copy.                                                        |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
*
* $Id: lang_screen_details.xml,v 1.3.12.1 2012/05/09 01:55:27 akarelia Exp $
*
*/
-->

<contents>
	<section name="Details">
		<field attribute="name">
			<display_name>Page Name</display_name>
			<note />
		</field>
		<field attribute="short_name">
			<display_name>Page Short Name</display_name>
			<note />
		</field>
	</section>
	<section name="HTTP Request" write_access="write:attributes">
		<field attribute="http_request">
			<display_name>HTTP Request</display_name>
			<note />
		</field>
		<field attribute="allow_global_replace">
			<display_name>Allow Keyword replacement</display_name>
			<note>Enabling this option will allow Squiz Matrix to replace keywords found in the REST response body. This can be useful when the response is returned from another instance of Squiz Matrix. Disabling this option will ensure that the system does not replace any keywords (or content using a format similar to a keyword) in the response.</note>
		</field>
		<field attribute="allow_multiple_runs">
			<display_name>Allow Multiple Runs</display_name>
			<note>If this asset is nested more than once in the same page, then the data will be identical for each instance. With this option enabled, the requests will be forced to re-run each time. If unsure, leave this turned off.</note>
		</field>
	</section>
	<section name="JavaScript Processing" write_access="write:attributes">
		<note>
			Any valid JavaScript can be entered here. 
			The HTTP Request data is available as JSON data in the pre-defined variable "_REST". Use the "Run Test" feature to view this structure.
			For example "print(_REST.response.body);" will print the body of the first response.
			Note, if you are using E4X to process an XML document, you will likely need to use "_REST.response.bodyx" to avoid the XML declaration choking the parser.
		</note>
		<field>
			<display_name>Include Files</display_name>
			<note>These files will be run sequentially before any code entered below.</note>
			<function_call>
				<paint_function   name="paintJavaScriptFiles"   />
				<process_function name="processJavaScriptFiles" />
			</function_call>
		</field>
		<field>
			<display_name>JavaScript</display_name>
			<note />
			<function_call>
				<paint_function   name="paintJavaScript"   />
				<process_function name="processJavaScript" />
			</function_call>
		</field>
	</section>
</contents>
