<!--
/**
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | This MySource Matrix CMS file is Copyright (c) Squiz Pty Ltd       |
* | ACN 084 670 600                                                    |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | IMPORTANT: Your use of this Software is subject to the terms of    |
* | the Licence provided in the file licence.txt. If you cannot find   |
* | this file please contact Squiz (www.squiz.net) so we may provide   |
* | you a copy.                                                        |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
*
* $Id: lang_screen_details.xml,v 1.16.2.1 2011/07/07 04:11:04 akarelia Exp $
*
*/
-->

<contents>
	<section name="Details">
        <field attribute="name">
            <display_name>Javascript API Name</display_name>
            <note />
        </field>
        <field attribute="short_name">
            <display_name>Javascript API Short Name</display_name>
            <note />
        </field>
	</section>
    <section name="Restrictions" write_access="write:attributes">
		<field>
			<display_name>Root Nodes</display_name>
			<note />
			<function_call>
				<paint_function   name="paintRootNode"  />
				<process_function name="processRootNode" />
			</function_call>
		</field>
		<field>
			<display_name>Asset Types to Create</display_name>
			<note>Asset type restrictions can be set to allow only the selected asset types to be created.</note>
			<function_call>
				<paint_function   name="paintAssetTypes"   />
				<process_function name="processAssetTypes" />
			</function_call>
		</field>
		<field>
			<display_name>Parent Types</display_name>
			<note>If set, these asset types will be checked when a parent asset is needed, such as creating, linking and moving.  If the parent types do not match, the function will fail.</note>
			<function_call>
				<paint_function   name="paintParentTypes"   />
				<process_function name="processParentTypes" />
			</function_call>
		</field>
        <field attribute="create_attributes">
            <display_name>Allow Attributes on Create</display_name>
            <note>If this option is set to yes, additional attributes can be added when the asset is created.  The attributes must be sent through the attributes parameter of the createAsset() function. Correct attribute names must be used, as well as serialization of data.</note>
        </field>
        <field attribute="allow_json">
            <display_name>Return JSON</display_name>
            <note>This option can be used to suppress the return of JSON.  Suppressing JSON can be useful to prevent users from knowing asset id's, attributes, etc. from certain functions.</note>
        </field>
        <field attribute="ignore_permissions">
            <display_name>Ignore Permissions</display_name>
            <note>If this option is set to yes, permissions will not be checked when creating assets.</note>
        </field>
		<field attribute="force_simple_edit">
			<display_name>Force Simple Edit</display_name>
			<note>If this option is set to yes, any of the URL generated by the JS API function calls will have Simple Edit reference.</note>
		</field>
		<field attribute="use_enhanced_js">
			<display_name>Use Enhanced JS API</display_name>
			<note>Selecting this option will enable the use of Enhanced API for better perfomance.&lt;br /&gt; &lt;b&gt;NOTE:&lt;/b&gt; The list of usable functions remains the same for any of the API type being used.</note>
		</field>
		<field attribute="batch_requests">
			<display_name>Allow Batching Requests</display_name>
			<note>Enables the &lt;i&gt;batchRequest&lt;/i&gt; function which can perform multiple function calls in one API call&lt;br /&gt; &lt;b&gt;NOTE:&lt;/b&gt; The returned result is just the output of the last performed function in the batched request</note>
		</field>

    </section>
    <section name="API Settings" write_access="write:attributes">
        <field>
            <display_name>API Key</display_name>
            <note />
			<function_call>
				<paint_function   name="paintApiKey"  />
				<process_function name="processApiKey" />
			</function_call>
        </field>
    </section>
    <section name="Core" write_access="write:attributes">
        <field attribute="create_asset">
            <display_name>Create Asset</display_name>
            <note />
        </field>
        <field attribute="get_general">
            <display_name>Get General Info</display_name>
            <note />
        </field>
        <field attribute="get_asset_types">
            <display_name>Get Asset Types</display_name>
            <note />
        </field>
        <field attribute="get_attributes">
            <display_name>Get Attributes</display_name>
            <note />
        </field>
        <field attribute="set_attribute">
            <display_name>Set Attribute</display_name>
            <note />
        </field>
		<field attribute="get_locks_info">
            <display_name>Get Lock Info</display_name>
            <note />
        </field>
        <field attribute="acquire_lock">
            <display_name>Acquire Lock</display_name>
            <note />
        </field>
        <field attribute="release_lock">
            <display_name>Release Lock</display_name>
            <note />
        </field>
        <field attribute="trash_asset">
            <display_name>Trash Asset</display_name>
            <note />
        </field>
		<field attribute="get_keywords_replacements">
            <display_name>Get Keywords Replacement</display_name>
            <note />
        </field>
		<field attribute="set_asset_status">
            <display_name>Set Asset Status</display_name>
            <note />
        </field>
		<field attribute="get_web_path">
            <display_name>Get Asset WebPath(s)</display_name>
            <note />
        </field>
		<field attribute="set_web_path">
            <display_name>Set Asset WebPath</display_name>
            <note />
        </field>
        <field attribute="get_roles">
            <display_name>Get Roles Information</display_name>
            <note />
        </field>
		<field attribute="set_file_content">
            <display_name>Set File Content</display_name>
            <note>Allows user to set content of Editable (CSS, JS, Text, XML, XSL) File type Assets</note>
        </field>
		<field attribute="import_assets">
            <display_name>Import Assets from XML</display_name>
            <note>Allows user to import assets under a particular root node from a structured XML file</note>
        </field>
		<field attribute="execute_html_tidy">
			<display_name>Execute HTML Tidy</display_name>
			<note>Allows user to execute HTML Tidy on passed string.</note>
		</field>
   </section>
    <section name="Linking" write_access="write:attributes">
        <field attribute="create_link">
            <display_name>Create Link</display_name>
            <note />
        </field>
        <field attribute="remove_link">
            <display_name>Remove Link</display_name>
            <note />
        </field>
        <field attribute="move_link">
            <display_name>Move Link</display_name>
            <note />
        </field>
        <field attribute="update_link">
            <display_name>Update Link</display_name>
            <note />
        </field>
        <field attribute="get_link_id">
            <display_name>Get Link Id</display_name>
            <note />
        </field>
    </section>
    <section name="Permissions" write_access="write:attributes">
        <field attribute="get_permissions">
            <display_name>Get Permissions</display_name>
            <note />
        </field>
    </section>
	<section name="Workflow" write_access="write:attributes">
		<field attribute="get_workflow_schema">
            <display_name>Get Workflow Schema</display_name>
            <note>Gets applied workflow schema for an asset (gets running and/or not running schema)</note>
        </field>
	</section>
    <section name="Traversing" write_access="write:attributes">
        <field attribute="get_parents">
            <display_name>Get Parents</display_name>
            <note />
        </field>
        <field attribute="get_children">
            <display_name>Get Children</display_name>
            <note />
        </field>
        <field attribute="get_asset_tree">
            <display_name>Get Asset Tree</display_name>
            <note />
        </field>
		<field attribute="get_lineage">
            <display_name>Get Lineage</display_name>
            <note />
        </field>
	</section>
    <section name="Metadata" write_access="write:attributes">
        <field attribute="get_metadata">
            <display_name>Get Metadata</display_name>
            <note />
        </field>
        <field attribute="set_metadata">
            <display_name>Set Metadata</display_name>
            <note />
        </field>
    </section>
</contents>
