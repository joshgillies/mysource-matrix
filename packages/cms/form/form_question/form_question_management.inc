<?php
/**
* +--------------------------------------------------------------------+
* | Squiz.net Commercial Module Licence                                |
* +--------------------------------------------------------------------+
* | Copyright (c) Squiz Pty Ltd (ACN 084 670 600).                     |
* +--------------------------------------------------------------------+
* | This source file is not open source or freely usable and may be    |
* | used subject to, and only in accordance with, the Squiz Commercial |
* | Module Licence.                                                    |
* | Please refer to http://www.squiz.net/licence for more information. |
* +--------------------------------------------------------------------+
*
* $Id: form_question_management.inc,v 1.17.2.2 2005/12/13 05:57:17 tbarrett Exp $
*
*/


require_once SQ_INCLUDE_PATH.'/asset_management.inc';

/**
* Form_Question_Management
*
* @see Asset_Management
*
* @author  Marc McIntyre <mmcintyre@squiz.net>
* @version $Revision: 1.17.2.2 $
* @package MySource_Matrix_Packages
* @subpackage cms
*/
class Form_Question_Management extends Asset_Management
{


	/**
	* Constructor
	*
	*/
	function Form_Question_Management(&$pm)
	{
		$this->Asset_Management($pm);

		$this->vars = Array(
						'name'					=> Array(
													'added'		=> '0.0.1',
													'type'		=> 'text',
													'default'	=> '',
												   ),
						'note'					=> Array(
													'added'		=> '0.0.1',
													'type'		=> 'text',
													'default'	=> '',
												   ),
						'rules'					=> Array(
													'added'		=> '0.0.1',
													'type'		=> 'serialise',
													'default'	=> Array(),
												   ),
						'is_required'			=> Array(
													'added'		=> '0.3',
													'type'		=> 'boolean',
													'default'	=> '0',
												   ),
						'cust_required_error'	=> Array(
													'added'		=> '0.4',
													'type'		=> 'text',
													'default'	=> '',
												   ),
					  );

	}//end constructor


	/**
	* Upgrade
	*
	* @param string	$current_version	the version of the asset that is currenly installed
	*
	* @return boolean
	* @access public
	*/
	function _upgrade($current_version)
	{
		// first do things as normal
		$res = parent::_upgrade($current_version);

		
		if (version_compare($current_version, '0.4.1', '<')) {
			bam('UPGRADING FORM QUESTION FROM v < 0.4.1');
			// Upgrade the 'is_required' attr.  This didn't work in the 0.2 - 0.3 upgrade
			// so we need to do some trickiness here to fix failed upgrades where appropriate,
			// or do a first-time upgrade otherwise
			if (version_compare($current_version, '0.3', '<')) {
				// Simple case - just copy values from the old 'required' attrs to the new 'is_required' attr
				$fixing_upgrade = false;
			} else {
				// complex case - need to preserve non-default values of the 'is_required' attr
				$fixing_upgrade = true;
			}

			// get all question assets
			$form_ids = $GLOBALS['SQ_SYSTEM']->am->getTypeAssetids('form', false, true);
			$question_assets = Array();
			foreach ($form_ids as $form_id => $type) {
				$form =& $GLOBALS['SQ_SYSTEM']->am->getAsset($form_id, $type);
				$question_assets += $form->getChildren($form->id, 'form_question', false);
			}
			$section_ids = $GLOBALS['SQ_SYSTEM']->am->getTypeAssetids('form_section', false, true);
			foreach ($section_ids as $section_id => $type) {
				$section =& $GLOBALS['SQ_SYSTEM']->am->getAsset($section_id, $type);
				$question_assets += $section->getChildren($section->id, 'form_question', false);
			}

			// update them
			$irrelevant_types = Array(); // these don't have a required attr
			foreach ($question_assets as $id => $type) {
				if (!isset($irrelevant_types[$type])) {
					$q =& $GLOBALS['SQ_SYSTEM']->am->getAsset($id, $type);
					if (!isset($q->vars['required'])) {
						$irrelevant_types[$type] = 1;
						continue;
					}
					if ((!$fixing_upgrade) || ($q->attr('is_required') == false)) {
						// either we are doing a first-time upgrade, or we are fixing and 
						// the new attr's value is still the default
						// therefore we'll copy the value from the old attr to the new
						$q->setAttrValue('is_required', $q->attr('required'));
						$q->saveAttributes();
					}
				}
			}
		}
		return true;

	}//end _upgrade()



}//end class
?>
