<!--
/**
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | This MySource Matrix CMS file is Copyright (c) Squiz Pty Ltd       |
* | ACN 084 670 600                                                    |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | IMPORTANT: Your use of this Software is subject to the terms of    |
* | the Licence provided in the file licence.txt. If you cannot find   |
* | this file please contact Squiz (www.squiz.net) so we may provide   |
* | you a copy.                                                        |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
*
* $Id: edit_interface_screen_contents.xml,v 1.43 2013/08/19 04:32:27 cupreti Exp $
*
*/
-->

<contents>
	<section name="Questions (not attached to a section)" limbo_access="1">
		<field write_access="write:menu">
			<display_name>Current Questions</display_name>
			<note>If you reorder or delete questions, you must commit the changes before they will take effect.</note>
			<function_call>
				<paint_function   name="paintQuestionLinks"   />
				<process_function name="processQuestionLinks" />
			</function_call>
		</field>
		<field read_access="write:menu" write_access="write:menu">
			<display_name>Add Questions</display_name>
			<note>Select the question type and the number of questions to add.</note>
			<function_call>
				<paint_function   name="paintAddQuestions"   />
				<process_function name="processAddQuestions" />
			</function_call>
		</field>
	</section>
	<section name="Sections" limbo_access="1">
		<field>
			<display_name>Current Sections</display_name>
			<note>Click on a section's name to display that section.</note>
			<function_call>
				<paint_function   name="paintSectionLinks"   />
				<process_function name="processSectionLinks" />
			</function_call>
		</field>
		<field read_access="write:menu" write_access="write:menu">
			<display_name>Add Sections</display_name>
			<note>Enter names for new sections you want to add.</note>
			<function_call>
				<paint_function   name="paintAddSections"   />
				<process_function name="processAddSections" />
			</function_call>
		</field>
	</section>
	<section name="Formatting" limbo_access="1">
        <field>
			<display_name>Accessible Format</display_name>
			<note>Enable this option to output WCAG 2.0 accessible HTML content on the form, rather than the standard tabular format.</note>
			<function_call>
				<paint_function   name="paintUseAccessibleFormat"   />
				<process_function name="processUseAccessibleFormat" />
			</function_call>
		</field>
		<field attribute="required_field_mark">
			<display_name>Required field mark</display_name>
			<note>HTML included in label to indicate the question is required.</note>
			<text width="120" height="1" />
		</field>
		<field attribute="required_field_note">
			<display_name>Required field note</display_name>
			<note>The meaning of required field mark is defined at the start of form.</note>
			<text width="120" height="1" />
		</field>
		<field attribute="use_confirmation_page">
			<display_name>Use Confirmation Page?</display_name>
			<note>If "Yes", a confirmation page will appear after the form (or the last page) is completed, but before the form as a whole is fully submitted. This will allow the form's users to confirm that they have filled all parts of the form correctly, before they submit the form.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field>
			<display_name>Use Bodycopy?</display_name>
			<note>When bodycopy is not used, a default style will be used.</note>
			<function_call>
				<paint_function   name="paintUseBodycopy"   />
				<process_function name="processUseBodycopy" />
			</function_call>
		</field>
		<field attribute="submit_button">
			<display_name>Submit Button Text</display_name>
			<note>This button text is used for the "submit button" keyword on the last page of the form. If no custom text is entered here, &quot;Submit&quot; will be used.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="reset_button">
			<display_name>Reset Button Text</display_name>
			<note>If no custom text is entered here, &quot;Reset&quot; will be used.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="note_size">
			<display_name>Note Text Size</display_name>
			<note>Question notes (if any) will be displayed at this size.</note>
			<text width="4" height="1" />
		</field>
		<field attribute="form_extra_attribute">
			<display_name>Form Extra Attribute</display_name>
			<note>Adding extra attributes to the Form HTML Tag.e.g autocomplete="off".</note>
			<text width="80" height="4" />
		</field>
	</section>
	<section name="Validation" limbo_access="1">
		<field attribute="use_client_side">
			<display_name>Client-Side Validation</display_name>
			<note>Server-side validation is always used to trap invalid input, after the form is submitted. Turn on client-side validation to provide an extra layer of validation that is executed at the browser level, before the form is submitted. Note that most but not all browsers support client-side validation.</note>
			<boolean true_text="On" false_text="Off" />
		</field>
		<field attribute="submission_errors_msg">
			<display_name>Error Message Format</display_name>
			<note>The %form_errors_message% keyword will be replaced with this text if there are submission errors.</note>
			<wysiwyg height="40" />
		</field>
	</section>
	<section name="Submissions Limit" limbo_access="1">
		<field write_access="write:menu">
			<display_name>No. of Submission allowed</display_name>
			<note>If set only this many submissions will be allowed. Once the number of submissions is reached, the 'submissions_exhausted' bodycopy will be displayed. Default value is 0 this disables the feature and limit is imposed on the number of submissions.</note>
			<function_call>
				<paint_function   name="paintSubmissionLimit"   />
				<process_function name="processSubmissionLimit" />
			</function_call>
		</field>
		<field attribute="submission_limit_reached_text">
			<display_name>Error Text</display_name>
			<note>This text will be used by Matrix to show error when the submission limit has been reached while the form was still being filled in by user.</note>
			<text width="100" />
		</field>
	</section>
	<section name="Submission Access" write_access="admin:attributes" limbo_access="1">
		<field attribute="restricted_submission_access">
			<display_name>Restrict Submission Access</display_name>
			<note>If set to "Yes", Form Submission assets created by this form will only be accessible by users with admin permissions. Read and Write permission settings will be ignored and users with those permissions will not be able to view or edit the Form Submission assets.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
	</section>
	<section name="CAPTCHA" limbo_access="1">
		<field attribute="require_captcha">
			<display_name>Require CAPTCHA</display_name>
			<note>CAPTCHA attempts to assert that the form has been submitted by a human, not an automated agent. If require CAPTCHA is set to 'yes' and the default bodycopy is not used, the %form_captcha% keyword or %form_captcha_image% plus %form_captcha_field% keywords must be included on one page for form submissions to be accepted. If no bodycopies are customised, it will appear on the last page of the form.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="provide_accessible_captcha">
			<display_name>Provide Accessible CAPTCHA</display_name>
			<note>If this option is enabled, an interface will be provided for an accessible CAPTCHA which requires the input of an email address to provide a validation email.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="captcha_length">
			<display_name>CAPTCHA Key Length</display_name>
			<note>Number of characters in the CAPTCHA key.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_zoom">
			<display_name>CAPTCHA Character Zoom</display_name>
			<note>Easier reading with zoomed text.</note>
			<float width="5" />
		</field>
		<field attribute="captcha_link_text">
			<display_name>CAPTCHA Regen Link Text</display_name>
			<note>This text will appear when the %form_captcha_link% keyword is used.</note>
			<text width="50" />
		</field>
		<field attribute="captcha_use_colours">
			<display_name>Use CAPTCHA Colours</display_name>
			<note>If this option is enabled, the CAPTCHA Background, Text and Border colours specified below will be used when rendering the CAPTCHA element.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="captcha_bgcolour">
			<display_name>CAPTCHA Background Colour</display_name>
			<note>This background colour is only used when the contents bodycopy is customised with captcha keywords.</note>
			<colour />
		</field>
		<field attribute="captcha_textcolour">
			<display_name>CAPTCHA Text Colour</display_name>
			<note>This text colour is only used when the contents bodycopy is customised with captcha keywords.</note>
			<colour />
		</field>
		<field attribute="captcha_bordercolour">
			<display_name>CAPTCHA Border Colour</display_name>
			<note>This border colour is only used when the contents bodycopy is customised with captcha keywords.</note>
			<colour />
		</field>
		<field attribute="captcha_usefont">
			<display_name>Use CAPTCHA Font</display_name>
			<note>If this option is set to yes the CAPTCHA will use the true type font specified below rather than the default GD font. Using a CAPTCHA font gives you complete control over your CAPTCHA image.  This means that you must control the height and width of your CAPTCHA image as well as letter spacing.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field>
			<display_name>CAPTCHA Font</display_name>
			<note>Choose a font file on your current system to be used as the captcha font.</note>
			<function_call>
				<paint_function   name="paintCaptchaFontField" />
				<process_function name="processCaptchaFontField" />
			</function_call>
		</field>
		<field attribute="captcha_font_size">
			<display_name>CAPTCHA Font Size</display_name>
			<note>This will be used in place of the zoom option when using true type fonts.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_width">
			<display_name>CAPTCHA Width</display_name>
			<note>The width of the CAPTCHA image.  Be sure to account for character angle, x-start and character spacing.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_height">
			<display_name>CAPTCHA Height</display_name>
			<note>The height of the CAPTCHA image.  This value to be slightly higher than your font size.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_min_angle">
			<display_name>CAPTCHA Min Angle</display_name>
			<note>The minimum angle that will be used for the CAPTCHA text.  This can also be a negative value.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_max_angle">
			<display_name>CAPTCHA Max Angle</display_name>
			<note>The maximum angle that will be used for the CAPTCHA text.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_x_start">
			<display_name>CAPTCHA X Start</display_name>
			<note>The x-position on the image where letters will begin to be drawn.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_min_distance">
			<display_name>CAPTCHA Min Distance</display_name>
			<note>The minimum distance between each character.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_max_distance">
			<display_name>CAPTCHA Max Distance</display_name>
			<note>The maximum distance between each character.</note>
			<int width="5" />
		</field>
		<field attribute="captcha_arc">
			<display_name>Use CAPTCHA Arc</display_name>
			<note>If this option is set to yes the CAPTCHA will generate arced lines across text, adding an additional security measure. Please note that this item is available only when a &quot;CAPTCHA Font&quot; is specified.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="captcha_arc_colour">
			<display_name>CAPTCHA Arc Colour</display_name>
			<note>This value will change the CAPTCHA arc colour. Please note that this item is available only when a &quot;CAPTCHA Font&quot; is specified.</note>
			<colour />
		</field>
		<field attribute="captcha_include_uppercase">
			<display_name>Include Uppercase Letters in CAPTCHA Text</display_name>
			<note>If this option is enabled, the generated CAPTCHA will contain at least one uppercase letter.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="captcha_include_numbers">
		    <display_name>Include Numbers in CAPTCHA Text</display_name>
			<note>If this option is enabled, the generated CAPTCHA will contain at least one number.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="captcha_invalid_error_message">
			<display_name>Captcha Invalid Error Message</display_name>
			<note>Custom error message if CAPTCHA entered at current page is incorrect.</note>
			<text width="50" height="1" />
		</field>
		<field attribute="captcha_form_invalid_error_message">
			<display_name>Captcha Required Form Error Message</display_name>
			<note>Custom error message if valid CAPTCHA is not found for entire form submission.</note>
			<text width="50" height="1" />
		</field>
		<field attribute="captcha_label_text">
			<display_name>Captcha Label Text</display_name>
			<note>Custom the text of label for CAPTCHA input field.</note>
			<text width="50" height="1" />
		</field>
	</section>
	<section name="Multiple Page Form Options" limbo_access="1">
		<field attribute="multi_page">
			<display_name>Multi-Page?</display_name>
			<note>If "Yes", then each section directly linked underneath this form will become one page, ordered by how they are ordered in the Asset Map. Unattached questions, if any, will be placed on one additional page before any sections are displayed. If "No", all questions will appear on one page.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
		<field attribute="next_button">
			<display_name>Next Page Button Text</display_name>
			<note>If either <![CDATA[<strong>Multi-Page?</strong>]]> or <![CDATA[<strong>Use Confirmation Page?</strong>]]> are set to "Yes", the Submit Button keyword will be replaced with the Next Page Button on pages other than the last. If left empty, "Next Page" will be used as the text for this button.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="previous_button">
			<display_name>Previous Page Button Text</display_name>
			<note>If either <![CDATA[<strong>Multi-Page?</strong>]]> or <![CDATA[<strong>Use Confirmation Page?</strong>]]> are set to "Yes", a Previous Page Button with this text will be made available as a keyword. On the first page of a form, or if settings are both set to "No", the Previous Page Button keyword instead will be blank. If left empty, "Previous Page" will be used as the text for this button.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="save_button">
			<display_name>Save Button Text</display_name>
			<note>This button saves the data on the current page, but remains on the same page for further editing. If no custom text is entered here, &quot;Save&quot; will be used.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="save_and_exit_button">
			<display_name>Save and Exit Button Text</display_name>
			<note>This button only appears when the "Exit Page Contents" bodycopy is customised, thereby enabling the "Save and Exit" feature. If no custom text is entered here, &quot;Save and Exit&quot; will be used.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="page_list_format">
			<display_name>Page List Entry Format</display_name>
			<note><![CDATA[This setting allows you to customise how each page is displayed in the page list. The following keywords are allowed:
			<ul><li><strong>%page_name%</strong> - The name of the page in the entry - either the asset name of the Form Section that represents the page, or the Unattached Questions or Confirmation page name, as applicable. Note that any HTML entities in page names will be escaped.</li>
			<li><strong>%page_number%</strong> - The number of the page.</li>
			<li><strong>%total_pages%</strong> - Total number of pages in the form, including Unattached Questions and Confirmation pages.</li></ul>]]></note>
			<text width="30" height="1" />
		</field>
		<field attribute="unattached_page_name">
			<display_name>&quot;Unattached Questions&quot; Page Name</display_name>
			<note>The name that &quot;page name&quot; keywords return for the &quot;Unattached Questions&quot; page (if any questions have been created directly on this form).</note>
		    <text width="30" height="1" />
		</field>
		<field attribute="confirmation_page_name">
		    <display_name>Confirmation Page Name</display_name>
			<note>The name that &quot;page name&quot; keywords return for the Confirmation page, if enabled.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="save_confirmation_message">
			<display_name>Save Confirmation Text</display_name>
			<note>This text is accessible through the %save_confirmation% keyword, to be used on a Page Contents or page format bodycopy when a user clicks on the "Save" button. If omitted, a default message ("Your progress has been saved") will be used.</note>
			<text width="30" height="1" />
		</field>
	</section>
	<section name="Public User Incomplete Submission" limbo_access="1">
		<field attribute="public_incomplete_submission">
			<display_name>Allow Public Incomplete Submission</display_name>
			<note>Whether to allow Public User to save their form submission progress. Useful in the multi-page form.</note>
			<boolean true_text="Yes" false_text="No"/>
		</field>
		<field attribute="public_auth_email_q">
			<display_name>Public User Email Question</display_name>
			<note>The address entered in response to this question will regarded as the Public User's authorised email. If not set, no email notification/reminder will be sent to the Public User.</note>
			<assetid type_codes="form_question_type_email_address:D" />
		</field>
		<field attribute="public_email_notification_format">
			<display_name>Submission Retrieval Email Format</display_name>
			<note><![CDATA[<p>This email will be sent to the Public User after they save the submission. The following keywords are available:</p>
				<ul>
					<li><strong>%form_submission_password%</strong> - Password required to access the submission saved by the <em>Public User</em>.</li>
					<li><strong>%form_total_pages%</strong> - The total number of pages in the form.</li>
					<li><strong>%return_to_form_url_current%</strong> - The URL that will return the user to the form, on the <em>Current Page</em>.</li>
					<li><strong>%return_to_form_url_latest%</strong> - The URL that will return the user to the form, on the <em>Latest Page</em>.</li>
				</ul>
				<p>In addition, the following keyword wildcards are available (where "*" is any valid keyword for the appropriate asset):</p>
				<ul>
					<li><strong>%user_asset_*%</strong> - Replaced with the value of the %asset_*% keyword for the user that owns the incomplete submission.</li>
					<li><strong>%form_asset_*%</strong> - Replaced with the value of the %asset_*% keyword for the form's parent page.</li>
					<li><strong>%submission_asset_*%</strong> - Replaced with the value of the %asset_*% keyword for the incomplete submission.</li>
				</ul>]]></note>
			<email_format with_asset_finder="1" />
		</field>
		<field attribute="public_auth_info_format">
			<display_name>Submission Retrieval Message Format</display_name>
			<note><![CDATA[Text format to display the form submission retrieval information. This text is accessible through the %submission_access_info% keyword, to be used on a Page Contents or Page Format bodycopy when a user clicks on the "Save" button. Keywords available are same as in "Submission Retrieval Email Format".
			]]></note>
			<wysiwyg height="120" />
		</field>
		<field attribute="public_auth_form_format">
			<display_name>Password Verification Form Format</display_name>
			<note><![CDATA[<p>This form will be presented to the public user, when trying retrive the previously saved incomplete submission. Additional to the "Public User Email Question" keywords, following keywords are available:</p>
			<ul>
				<li><strong>%public_form_error_message%</strong> - Invalid password error message</li>
				<li><strong>%public_form_password_input%</strong> - Input text box to enter the submission's password</li>
				<li><strong>%public_form_submit_button%</strong> - Submit button to submit the password verification form</li>
			</ul>]]></note>
			<wysiwyg height="120" />
		</field>
		<field attribute="public_auth_submit_button_text">
			<display_name>Submit Button Text</display_name>
			<note>Submit button text in the Public User password verification form. If no custom text is entered here, "Submit" will be used.</note>
			<text width="30" height="1" />
		</field>
		<field attribute="public_auth_error_message">
			<display_name>Incorrect Password Message</display_name>
			<note>Error message to display when the password entered by the Public User is incorrect. If empty "Invalid password" will be used.</note>
			<text width="60" height="1" />
		</field>
	</section>
	<section name="Simple Formatting" limbo_access="1">
		<note>The width options apply only if you use the 'Form Contents' <![CDATA[(<b>%form_contents%</b>)]]> keyword in your Page Contents bodycopy, or you do not have a Page Contents bodycopy set.</note>
		<field attribute="form_width">
			<display_name>Form Width</display_name>
			<note>The whole form will be this width when printed on the frontend. This can be a number of pixels or a percentage.</note>
			<html_width />
		</field>
		<field attribute="question_col_width">
			<display_name>Question Width</display_name>
			<note>The width of the column for question names. This can be a number of pixels or a percentage of the form width.</note>
			<html_width />
		</field>
		<field attribute="answer_col_width">
			<display_name>Answer Width</display_name>
			<note>The width of the column for the question answer fields. This can be a number of pixels or a percentage of the form width.</note>
			<html_width />
		</field>
		<field attribute="submit_button_extras">
			<display_name>Submit Button Extras</display_name>
			<note>Allows you to add extra HTML attributes to the Submit button, such as JavaScript code or custom CSS classes. Note that if a custom class is specified (eg. <![CDATA[<em>class="css-class-name"</em>]]>), it will override any default styling for form fields.</note>
		<text width="30" height="1" />
		</field>
		<field attribute="reset_button_extras">
			<display_name>Reset Button Extras</display_name>
			<note>Allows you to add extra HTML attributes to the Reset button, such as JavaScript code or custom CSS classes. Note that if a custom class is specified (eg. <![CDATA[<em>class="css-class-name"</em>]]>), it will override any default styling for form fields.</note>
			<text width="30" height="1" />
		</field>
	</section>
	<section name="Complex Formatting" limbo_access="1">
		<field>
			<display_name>Keywords</display_name>
			<note />
			<function_call>
				<paint_function	name="paintComplexFormatting" />
				<process_function name="processComplexFormatting" />
			</function_call>
		</field>
	</section>
	<section name="Mollom Spam Check" write_access="write:attributes" limbo_access="1">
		<field attribute="use_mollom">
			<display_name>Use Mollom Spam Check</display_name>
			<note>Mollom is an external tool which can filter out the submission made by an automated agent. If it is unsure it will use CAPTACHA to verify the legit submission. If this option is set to 'yes', %form_mollom_captcha% or %form_mollom_captcha_image% plus %form_mollom_captcha_field% and %form_mollom_captcha_regen_link% keywords must be included for form submissions to be accepted. API keys can be set in External Tools Configuration.</note>
			<boolean true_text="Yes" false_text="No"/>
		</field>
		<field>
			<display_name>Questions To Check</display_name>
			<note>Select the question to check for spam.</note>
			<function_call>
				<paint_function   name="paintMollomQuestionToCheck" />
				<process_function name="processMollomQuestionToCheck" />
			</function_call>
		</field>
		<field attribute="mollom_unsure_submission_text">
			<display_name>Unsure Error Message</display_name>
			<note>Error message to display when Mollom is unsure whether a submission is spam and asks user to verify the submission's legitimacy by entering the CAPTCHA value.</note>
			<text width="50" />
		</field>
		<field attribute="mollom_spam_submission_text">
			<display_name>Spam Error Message</display_name>
			<note>Error message to dispay when Mollom identifies a submission as spam.</note>
			<text width="50" />
		</field>
		<field attribute="mollom_captcha_incorrect_text">
			<display_name>CAPTCHA Incorrect Text</display_name>
			<note>Error message to dispay when user enters incorrect CAPTCHA value.</note>
			<text width="50" />
		</field>
		<field attribute="mollom_captcha_regen_link_text">
			<display_name>CAPTCHA Regen Link Text</display_name>
			<note>This text will appear when the %form_mollom_captcha_regen_link% keyword is used.</note>
			<text width="50" />
		</field>
		<field attribute="mollom_captcha_label_text">
			<display_name>CAPTCHA Label Text</display_name>
			<note>This text will appear as a label for CAPTCHA input box.</note>
			<text width="50" />
		</field>
	</section>
	<section name="Security Enhancement" limbo_access="1">
		<field attribute="disable_keyword_replacements">
			<display_name>Disable Keyword Replacements</display_name>
			<note>If set to Yes, Form will not replace the keywords that might be used in the user input on the frontend.</note>
			<boolean true_text="Yes" false_text="No" />
		</field>
	</section>
	<section name="Advanced Settings" write_access="write:attributes" limbo_access="1">
		<field attribute="submit_to_page_url">
		    <display_name>Form Submission URL</display_name>
			<boolean true_text="This page's own URL" false_text="The current URL" />
		</field>
	</section>
	<section name="Google reCAPTCHA" write_access="write:attributes" limbo_access="1">
		<field attribute="use_recaptcha">
    		<display_name>Use reCAPTCHA</display_name>
			<note>If this option is set to 'yes', %form_recaptcha% keyword must be included in form content. API keys needs to be set in External Tools Configuration.</note>
			<boolean true_text="Yes" false_text="No"/>
		</field>
		<field attribute="recaptcha_theme">
			<display_name>Theme</display_name>
			<note>Standard theme to use for printing the reCAPTCHA box.</note>
			<selection style="list" />
		</field>
		<field attribute="recaptcha_error_message">
			<display_name>Error Message</display_name>
			<note>Error message to dispay if reCAPTCHA validation fails.</note>
			<text width="50" />
		</field>
	</section>
	<section name="Spam Prevention: Honeypot Question" write_access="write:attributes" limbo_access="1">
		<field attribute="honeypot_name">
			<display_name>Field Name</display_name>
			<note>Honeypot input field name. %form_honeypot_field% keyword needs to be included in form content to include the Honeypot question in the output.</note>
			<text width="20" />
		</field>
		<field attribute="honeypot_id">
			<display_name>Field Id</display_name>
			<note>Honeypot input field id.</note>
			<text width="20" />
		</field>
		<field attribute="honeypot_class">
			<display_name>Field Class</display_name>
			<note>Honeypot input field CSS class name.</note>
			<text width="20" />
		</field>
		<field attribute="honeypot_error_message">
			<display_name>Error Message</display_name>
			<note>Error message to display if the Honeypot validation fails.</note>
			<text width="50" />
		</field>
	</section>
	<section name="Spam Prevention: Submission Time Threshold" write_access="write:attributes" limbo_access="1">
		<field attribute="time_requirement">
		<display_name>Time Period</display_name>
			<note>Estimated minimum time (in seconds) required by a user to complete the form. If the form gets submitted before the submission time threshold, the submission will not be accepted. If empty or set to '0', the submission time check will be ignored.</note>
			<text width="10" />
		</field>
		<field attribute="time_requirement_error_message">
			<display_name>Error Message</display_name>
			<note>Error message to display if the time requirement check fails.</note>
			<text width="50" />
		</field>
	</section>
</contents>
