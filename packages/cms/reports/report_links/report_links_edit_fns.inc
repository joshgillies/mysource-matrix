<?php
/**
* +--------------------------------------------------------------------+
* | Squiz.net Commercial Module Licence                                |
* +--------------------------------------------------------------------+
* | Copyright (c) Squiz Pty Ltd (ACN 084 670 600).                     |
* +--------------------------------------------------------------------+
* | This source file is not open source or freely usable and may be    |
* | used subject to, and only in accordance with, the Squiz Commercial |
* | Module Licence.                                                    |
* | Please refer to http://www.squiz.net/licence for more information. |
* +--------------------------------------------------------------------+
*
* $Id: report_links_edit_fns.inc,v 1.5.2.1 2006/04/06 06:40:37 arailean Exp $
*
*/


require_once SQ_CORE_PACKAGE_PATH.'/report/report_edit_fns.inc';

/**
* Report_Links_Edit_Fns
*
* Purpose
*	Generate a report of links
*
* @author  Greg Sherwood <greg@squiz.net>
* @version $Revision: 1.5.2.1 $
* @package MySource_Matrix_Packages
* @subpackage cms
*/
class Report_Links_Edit_Fns extends Report_Edit_Fns
{


	/**
	* Constructor
	*
	*/
	function Report_Links_Edit_Fns()
	{
		$this->Report_Edit_Fns();

	}//end constructor


	/**
	* Generate this report until complete
	*
	* @param object HIPO_Job	&$job		a reference to the array of information about
	* @param array				&$step_data	a reference to the array of information about
	*										the current step of the HIPO job that is running this report
	* @param string				$prefix		prefix for form vars
	*
	* @return boolean
	* @access public
	*/
	function generateReport(&$job, &$step_data, $prefix)
	{
		require_once SQ_FUDGE_PATH.'/general/text.inc';
		require_once SQ_FUDGE_PATH.'/general/file_system.inc';
		$owner = &$GLOBALS['SQ_SYSTEM']->am->getAsset($job->_running_vars['assetid'], 'report_links');

		if (!isset($job->_running_vars['results'])) {
			$job->_running_vars['todo'] = $GLOBALS['SQ_SYSTEM']->am->getChildren($this->getRootAssetid($owner), 'content_type', false);
			$job->_running_vars['done'] = Array();
			$job->_running_vars['results'] = Array();

			if (!is_dir($owner->data_path)) {
				if (!create_directory($owner->data_path)) {
					trigger_localised_error('CMS0005', E_USER_WARNING);
					return false;
				}
			}
			$temp_file = fopen($owner->data_path.'/report.tmp', 'w');
			if ($temp_file === false) {
				trigger_localised_error('CMS0006', E_USER_WARNING);
				return false;
			}
			fwrite($temp_file, "<links>\n");
		} else {
			$temp_file = fopen($owner->data_path.'/report.tmp', 'a');
			if ($temp_file === false) {
				trigger_localised_error('CMS0006', E_USER_WARNING);
				return false;
			}
		}

		if (!empty($job->_running_vars['todo'])) {

			$assetid = array_shift(array_keys($job->_running_vars['todo']));
			$asset_type = $job->_running_vars['todo'][$assetid];
			unset($job->_running_vars['todo'][$assetid]);
			if ($asset_type == 'content_type_nest_content') {
				$step_data['message'] = translate('cms_report_links_skipping_nest_content', $assetid);
			} else {
				$asset = &$GLOBALS['SQ_SYSTEM']->am->getAsset($assetid, $asset_type);

				if (!is_null($asset)) {
					$step_data['message'] = translate('cms_report_links_generating');

					$content = '';
					$wysiwyg_html = $asset->attr('html');

					$master_matches = Array();
					preg_match_all('%(href|src)=[\'"]([^\'\s"]*)%', $wysiwyg_html, $master_matches);
					$matches = $master_matches[2];

					foreach ($matches as $match) {
						// skip keywords
						$keywords = retrieve_keywords_replacements($match);
						if (count($keywords) == 1 && $match == '%'.$keywords[0].'%') continue;

						if (!$match) continue;
						$link_valid = '0';
						$link_description = '';
						$link_type = '';

						$results = Array();
						preg_match('|^\./\?a=([0-9]+)#?([^$]*)?|',$match, $results);
						$validated_results = false;
						if (!empty($results)) {
							$link_type = 'internal';
							$validated_results = $this->validateInternalLink($results);
						} else {
							if (strpos(strtolower($match), 'mailto') === 0) {
								$link_type = 'mailto';
								$match = preg_replace('/mailto:/i','',$match);
								list($match) = explode('?',$match);
								$match = trim($match);
								$validated_results = $this->validateEmailLink($match);
							} else {
								$link_type = 'external';
								$validated_results = $this->validateExternalLink($match);
							}
						}

						if ($validated_results === false) continue;

						$content .= "\t\t".'<link type="'.$link_type.'" valid="'.$validated_results['valid'].'">'."\n";
						$content .= "\t\t\t".'<html><![CDATA['.$match.']]></html>'."\n";
						$content .= "\t\t\t".'<description><![CDATA['.$validated_results['description'].']]></description>'."\n";
						$content .= "\t\t".'</link>'."\n";
					}//end foreach

					if (!empty($content)) {
						$content = "\t".'<asset assetid="'.$asset->id.'" name="'.$asset->name.'" short_name="'.$asset->short_name.'" type_code="'.$asset->type().'" status="'.$asset->status.'">'."\n".$content."\t".'</asset>'."\n";
						fwrite($temp_file, $content);
					}

					$GLOBALS['SQ_SYSTEM']->am->forgetAsset($asset);
					unset($asset);

				} else {
					$step_data['message'] = translate('cms_report_links_skipping_asset', $assetid);
					$job->_addError(translate('cms_report_links_asset_not_exist', $assetid));
				}

			}//end if nest content cell

			// add this assetid to the done array so we dont do it again
			$job->_running_vars['done'][] = $assetid;
		}

		if (empty($job->_running_vars['todo'])) {
			$step_data['percent_done'] = 100;
			$step_data['complete']     = true;

			// move the temp file to become the real report XML file
			fwrite($temp_file, '</links>');
			if (!copy($owner->data_path.'/report.tmp', $owner->data_path.'/report.xml')) {
				trigger_localised_error('CMS0007', E_USER_WARNING);
				return false;
			}
			if (!unlink($owner->data_path.'/report.tmp')) {
				trigger_localised_error('CMS0008', E_USER_WARNING);
			}
		} else {
			$total = count($job->_running_vars['todo']) + count($job->_running_vars['done']);
			$step_data['percent_done'] = (count($job->_running_vars['done']) / $total) * 100;
			$step_data['complete']     = false;
		}

		fclose($temp_file);
		return true;

	}//end generateReport()


	/**
	* Check the validity of an internal link
	*
	* @param Array	$link	the internal link in the format:
	*
	*							Array
	*							(
	*								[0] => ./?a=123#anchor_name
	*								[1] => 142
	*								[2] => anchor_name
	*							)
	*
	* @return array
	* @access public
	*/
	function validateInternalLink($link)
	{
		$asset = null;
		$assetid = $link[1];
		if ($assetid) $asset = &$GLOBALS['SQ_SYSTEM']->am->getAsset($assetid, '', true);

		if (is_null($asset)) {
			// the asset was invalid
			$description = translate('cms_report_links_point_invalid_assetid');
			$valid = '0';
		} else if ($GLOBALS['SQ_SYSTEM']->am->assetInTrash($assetid, true)) {
			// the asset is in the trash
			$description = translate('cms_report_links_point_to_trash');
			$valid = '0';
		} else if (!empty($link[2])) {
			$contents = $GLOBALS['SQ_SYSTEM']->am->getEditableContents($assetid);
			$anchorExists = false;
			foreach ($contents as $content) {
				if (preg_match('/<a name="'.$link[2].'">/', $content, $matches)) {
					$anchorExists = true;
					break;
				}
			}
			if (!$anchorExists) {
				$valid = '0';
				$description = translate('cms_report_links_anchor_not_exist', $link[2]);
			} else {
				$valid = '1';
				$description = '';
			}
		} else {
			$valid = '1';
			$description = '';
		}
		if (!is_null($asset)) $GLOBALS['SQ_SYSTEM']->am->forgetAsset($asset);

		return Array('valid' => $valid, 'description' => $description);

	}//end validateInternalLink()


	/**
	* Check the validity of an external link
	*
	* @param string	$url	the url being validated
	*
	* @return array
	* @access public
	*/
	function validateExternalLink($url)
	{
		// ignore bookmarks
		if (substr($url, 0, 1) == '#') return false;

		$url_parts = @parse_url($url);
		if (empty($url_parts['scheme'])) {
			$description = translate('cms_report_links_missing_protocol');
			$valid = '0';
		} else if (empty($url_parts['host'])) {
			$description = translate('cms_report_links_missing_hostname');
			$valid = '0';
		} else if ($url_parts['scheme'] != 'http') {
			$description = translate('cms_report_links_cannot_test_protocol');
			$valid = '1';
		} else {
			if (empty($url_parts['path'])) $url_parts['path'] = '/';
			if (empty($url_parts['port'])) $url_parts['port'] = '80';

			$url_path = $url_parts['path'];
			if (!empty($url_parts['query'])) $url_path .= '?'.$url_parts['query'];

			$socket = @fsockopen($url_parts['host'], $url_parts['port'], $errno, $errstr, 15);
			if (!$socket) {
				$description = translate('cms_report_links_invalid_url');
				$valid = '1';
			} else {
				fwrite ($socket, "HEAD ".$url_path." HTTP/1.0\r\nHost: ".$url_parts['host']."\r\n\r\n");
				stream_set_timeout($socket, 5);
				$response = fread($socket, 128);
				$headers = fread($socket, 2000);
				$info = stream_get_meta_data($socket);

				if (preg_match('|200 ok|i', $response)) {
					$description = '';
					$valid = '1';
				} else if (preg_match('|302 found|i', $response)) {
					$description = '';
					$valid = '1';
				} else if (preg_match('|304 not modified|i', $response)) {
					$description = '';
					$valid = '1';
				} else if (preg_match('|404 not found|i', $response)) {
					$description = translate('cms_report_links_404');
					$valid = '0';
				} else if (preg_match('|301 moved|i', $response)) {
					$valid = '1';
					preg_match('|Location:\s*(.+)\r|i', $headers, $matches);
					if (isset($matches[1])) {
						$description = translate('cms_report_links_301_with_new_link', $matches[1]);
					} else {
						$description = translate('cms_report_links_301');
					}
				} else if (preg_match('|302 moved|i', $response)) {
					// should this
					$valid = '1';
					preg_match('|Location:\s*(.+)\r|i', $headers, $matches);
					if (isset($matches[1])) {
						$description = translate('cms_report_links_302_with_new_link', $matches[1]);
					} else {
						$description = translate('cms_report_links_302');
					}
				} else if ($info['timed_out']) {
					$description = translate('cms_report_links_server_timeout');
					$valid = '0';
				} else {
					$description = translate('cms_report_links_unknown_response', $response);
					$valid = '0';
				}
				fclose($socket);
			}
		}

		return Array('valid' => $valid, 'description' => $description);

	}//end validateExternalLink()


	/**
	* Check the validity of an mailto
	*
	* @param string	$url	the mailto being validated
	*
	* @return array
	* @access public
	*/
	function validateEmailLink($mailto)
	{
		require_once SQ_FUDGE_PATH.'/general/www.inc';
		if (!valid_email($mailto)) {
			$description = translate('cms_report_links_invalid_email');
			$valid = '0';
		} else {
			$description = '';
			$valid = '1';
		}

		return Array('valid' => $valid, 'description' => $description);

	}//end validateEmailLink()


	/**
	* Paint the interface for viewing a report
	*
	* @param object Report				$owner	the asset whose interface we are painting
	* @param object	Backend_Outputter	$o		the outputter class
	* @param string						$prefix	prefix for the form element
	*
	* @return boolean
	* @access public
	*/
	function paintReport(&$asset, &$o, $prefix)
	{
		require_once 'XML/Tree.php';
		require_once SQ_INCLUDE_PATH.'/general_occasional.inc';
		require_once SQ_FUDGE_PATH.'/general/general.inc';

		$report_path = $asset->data_path.'/report.xml';
		if (!is_file($report_path)) {
			echo translate('report_not_generated');
			return;
		}

		$input = new XML_Tree($report_path);
		$root  = &$input->getTreeFromFile();
		if (PEAR::isError($root)) {
			trigger_localised_error('CMS0009', E_USER_WARNING, $report_path, $root->getMessage(), $root->getUserInfo());
			return;
		}

		$reported_links = Array(
							'internal'	=> Array(),
							'external'	=> Array(),
							'mailto'	=> Array(),
						  );


		foreach ($root->children as $asset_element) {
			if ($asset_element->name != 'asset') continue;
			foreach ($asset_element->children as $link) {
				if ($link->name != 'link') continue;
				assert_isset_array_index($reported_links, $link->attributes['type'], 'Unknown link type "'.$link->attributes['type'].'"');

				$new_link = Array();
				foreach ($link->children as $link_child) {
					switch ($link_child->name) {
						case 'html' :
							$new_link['html'] = $link_child->content;

							// get the assetid from the html link
							if ($link->attributes['type'] == 'internal') {
								$to_assetid = preg_replace('|\./\?a=([0-9]+).*|', '\\1', $link_child->content);
								$new_link['data'] = $to_assetid;
							} else {
								$new_link['data'] = $link_child->content;
							}
						break;
						case 'description' :
							$new_link['description'] = $link_child->content;
						break;
					}
				}//end foreach

				$new_link['valid'] = $link->attributes['valid'];
				$reported_links[$link->attributes['type']][$asset_element->attributes['assetid']][] = $new_link;
			}
		}//end foreach

		//TODO: this translation has a 'note' prefix that is supposed to look like
		//      a field header... could this be set up as a field?
		echo translate('cms_report_links_current');
		$o->closeSection();


		$o->openSection('Internal Links');
			$o->openField('');
				if (empty($reported_links['internal'])) {
					echo 'No internal links were found';
				} else {
					?>
					<table class="sq-backend-table" style="border: 1px solid #DDDDDD;" border="0">
						<tr>
							<td colspan="3" class="sq-backend-table-header" style="width: 226px;"><?php echo translate('found_in') ?></td>
							<td colspan="2" class="sq-backend-table-header" style="width: 226px;"><?php echo translate('linking_to') ?></td>
							<td class="sq-backend-table-header"><?php echo translate('comments'); ?></td>
						</tr>
					<?php
					foreach ($reported_links['internal'] as $assetid => $links) {
						foreach ($links as $link) {
							$from_info = $this->_getAssetReportInfo($assetid);

							$to = null;
							if ($link['data']) {
								$to = &$GLOBALS['SQ_SYSTEM']->am->getAsset($link['data'], '', true);
							}
							if (is_null($to)) {
								$to_type = '';
								$to_string = translate('unknown_asset_id', $link['data']);
								$to_bg = 'FFF';
								$to_status = '';
							} else {
								$to_type = $to->type();
								$to_string = '<span title="'.$to->name.'">'.ellipsisize($to->name, 40).' [#'.$to->id.']</span>';
								$to_bg = get_status_colour($to->status);
								$to_status = get_status_description($to->status);
							}

							?>
							<tr>
								<td class="sq-backend-table-cell" style="width: 10px; padding-right: 1px; text-align: right;">
									<a href="<?php echo $from_info['backend_url']; ?>" title="<?php echo translate('edit_this_asset'); ?>">#<?php echo (int) $from_info['assetid']; ?></a>
								</td>
								<td class="sq-backend-table-cell" style="width: 16px; padding-right: 0px; padding-left: 0px;">
									<?php
									if (!empty($from_info['type'])) {
										?>
										<span title="<?php echo ucwords(str_replace('_', ' ', $from_info['type'])); ?>">
											<script type="text/javascript">sq_print_icon("<?php echo $GLOBALS['SQ_SYSTEM']->am->getAssetIconURL($from_info['type']); ?>", "16", "16", "");</script>
										</span>
										<?php
									}
									?>
								</td>
								<td class="sq-backend-table-cell" style="width: 190px; padding-left: 0px;">
									<span style="border: solid 1px #CCC; padding: 0 1ex;background: #<?php echo $from_info['bg']; ?>"><?php echo $from_info['string']; ?></span>
								</td>
								<td class="sq-backend-table-cell" style="width: 16px; padding-right: 0px; padding-left: 0px;">
									<?php
									if (!empty($to_type)) {
										?>
										<span title="<?php echo ucwords(str_replace('_', ' ', $to_type)); ?>">
											<script type="text/javascript">sq_print_icon("<?php echo $GLOBALS['SQ_SYSTEM']->am->getAssetIconURL($to_type); ?>", "16", "16", "");</script>
										</span>
										<?php
									}
									?>
								</td>
								<td class="sq-backend-table-cell" style="width: 190px; padding-left: 0px;">
									<span style="border: solid 1px #CCC; padding: 0 1ex;background: #<?php echo $to_bg; ?>"><?php echo $to_string; ?></span>
								</td>
								<td class="sq-backend-table-cell">
									<?php
									if (!$link['valid']) echo '<span style="color: #007EFA;"><b>';
									echo $link['description'];
									if (!$link['valid']) echo '</b></span>';
									?>
								</td>
							</tr>
							<?php
						}//end foreach link
					}//end foreach asset links
					?>
					</table>
					<?php
				}//end if
			$o->closeField();
		$o->closeSection();


		$o->openSection(translate('external_links'));
			$o->openField('');
				if (empty($reported_links['external'])) {
					echo translate('cms_report_links_no_external_links');
				} else {
					?>
					<table class="sq-backend-table">
						<tr>
							<td colspan="3" class="sq-backend-table-header" style="width: 226px;"><?php echo translate('found_in'); ?></td>
							<td class="sq-backend-table-header" style="width: 226px;"><?php echo translate('url'); ?></td>
							<td class="sq-backend-table-header"><?php echo translate('comments'); ?></td>
						</tr>
					<?php
					foreach ($reported_links['external'] as $assetid => $links) {
						foreach ($links as $link) {
							$from_info = $this->_getAssetReportInfo($assetid);

							$to_string = '<a href="'.$link['data'].'" target="_blank" title="'.$link['data'].'">'.ellipsisize($link['data'], 50).'</a>';
							?>
							<tr>
								<td class="sq-backend-table-cell" style="width: 10px; padding-right: 1px; text-align: right;">
									<a href="<?php echo $from_info['backend_url']; ?>" title="<?php echo translate('edit_this_asset') ?>">#<?php echo (int) $from_info['assetid']; ?></a>
								</td>
								<td class="sq-backend-table-cell" style="width: 16px; padding-right: 0px; padding-left: 0px;">
									<?php
									if (!empty($from_info['type'])) {
										?>
										<span title="<?php echo ucwords(str_replace('_', ' ', $from_info['type'])); ?>">
											<script type="text/javascript">sq_print_icon("<?php echo $GLOBALS['SQ_SYSTEM']->am->getAssetIconURL($from_info['type']); ?>", "16", "16", "");</script>
										</span>
										<?php
									}
									?>
								</td>
								<td class="sq-backend-table-cell" style="width: 190px; padding-left: 0px">
									<span style="border: solid 1px #CCC; padding: 0 1ex;background: #<?php echo $from_info['bg']; ?>"><?php echo $from_info['string']; ?></span>
								</td>
								<td class="sq-backend-table-cell" style="width: 226px;">
									<?php echo $to_string; ?>
								</td>
								<td class="sq-backend-table-cell">
									<?php
									if (!$link['valid']) echo '<span style="color: #007EFA;"><b>';
									echo $link['description'];
									if (!$link['valid']) echo '</b></span>';
									?>
								</td>
							</tr>
							<?php
						}//end foreach link
					}//end foreach asset links
					?>
					</table>
					<?php
				}//end if
			$o->closeField();
		$o->closeSection();


		$o->openSection(translate('cms_report_links_email_links'));
			$o->openField('');
				if (empty($reported_links['mailto'])) {
					echo translate('cms_report_links_no_email_links');
				} else {
					?>
					<table class="sq-backend-table">
						<tr>
							<td colspan="3" class="sq-backend-table-header" style="width: 226px;"><?php echo translate('found_in'); ?></td>
							<td class="sq-backend-table-header" style="width: 274px;"><?php echo translate('email'); ?></td>
							<td class="sq-backend-table-header"><?php echo translate('comments'); ?></td>
						</tr>
					<?php
					foreach ($reported_links['mailto'] as $assetid => $links) {
						foreach ($links as $link) {
							$from_info = $this->_getAssetReportInfo($assetid);
							$to_string = $link['data'];
							?>
							<tr>
								<td class="sq-backend-table-cell" style="width: 10px; padding-right: 1px; text-align: right;">
									<a href="<?php echo $from_info['backend_url']; ?>" title="<?php echo translate('edit_this_asset'); ?>">#<?php echo (int) $from_info['assetid']; ?></a>
								</td>
								<td class="sq-backend-table-cell" style="width: 16px; padding-right: 0px; padding-left: 0px;">
									<?php
									if (!empty($from_info['type'])) {
										?>
										<span title="<?php echo ucwords(str_replace('_', ' ', $from_info['type'])); ?>">
											<script type="text/javascript">sq_print_icon("<?php echo $GLOBALS['SQ_SYSTEM']->am->getAssetIconURL($from_info['type']); ?>", "16", "16", "");</script>
										</span>
										<?php
									}
									?>
								</td>
								<td class="sq-backend-table-cell" style="width: 190px; padding-left: 0px;">
									<span style="border: solid 1px #CCC; padding: 0 1ex;background: #<?php echo $from_info['bg']; ?>"><?php echo $from_info['string']; ?></span>
								</td>
								<td class="sq-backend-table-cell" style="width: 274px;">
									<?php echo $to_string; ?>
								</td>
								<td class="sq-backend-table-cell">
									<?php
									if (!$link['valid']) echo '<span style="color: #007EFA;"><b>';
									echo $link['description'];
									if (!$link['valid']) echo '</b></span>';
									?>
								</td>
							</tr>
							<?php
						}//end foreach link
					}//end foreach asset links
					?>
					</table>
					<?php
				}//end if
			$o->closeField();
		$o->closeSection();

	}//end paintReport()


	/**
	* Get reporting information about an asset
	*
	* @param string	$assetid	the id of the asset we are getting reporting info for
	*
	* @return array('assetid', 'type', 'string', 'bg')
	* @access private
	*/
	function _getAssetReportInfo($assetid)
	{
		$asset = null;
		if ($assetid) {
			$asset = &$GLOBALS['SQ_SYSTEM']->am->getAsset($assetid, '', true);
		}
		if (is_null($asset)) {
			$asset_type = '';
			$asset_string = 'Unkown asset #'.$assetid;
			$asset_bg = 'FFFFFF';
		} else {
			$dependants = $GLOBALS['SQ_SYSTEM']->am->getDependantParents($asset->id);
			$parent = &$GLOBALS['SQ_SYSTEM']->am->getAsset(array_pop($dependants));
			if (!is_null($parent)) {
				$asset_type = $parent->type();
				$asset_name = $parent->name;
				$asset_bg = get_status_colour($parent->status);
				$asset_status = get_status_description($parent->status);
				$assetid = $parent->id;
				$asset_url = $parent->getBackendHref();
				$asset_preview_url = $parent->getURL();
			} else {
				$asset_type = $asset->type();
				$asset_name = $asset->name;
				$asset_bg = get_status_colour($asset->status);
				$asset_status = get_status_description($asset->status);
				$asset_url = $asset->getBackendHref();
				$asset_preview_url = $asset->getURL();
			}

			include_once SQ_FUDGE_PATH.'/general/general.inc';
			$asset_string = ellipsisize($asset_name, 40);

			$asset_string = '
				<a href="'.$asset_preview_url.'" target="_blank" title="'.$asset_name.'">'.$asset_string.'</a>';
		}

		return Array(
				'assetid'		=> $assetid,
				'type'			=> $asset_type,
				'string'		=> $asset_string,
				'bg'			=> $asset_bg,
				'status'		=> $asset_status,
				'backend_url'	=> $asset_url,
			   );

	}//end _getAssetReportInfo()


}//end class

?>
