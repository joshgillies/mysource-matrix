<?php
/**
* +--------------------------------------------------------------------+
* | This MySource Matrix CMS file is Copyright (c) Squiz Pty Ltd       |
* | ACN 084 670 600                                                    |
* +--------------------------------------------------------------------+
* | IMPORTANT: Your use of this Software is subject to the terms of    |
* | the Licence provided in the file licence.txt. If you cannot find   |
* | this file please contact Squiz (www.squiz.net) so we may provide   |
* | you a copy.                                                        |
* +--------------------------------------------------------------------+
*
* $Id: paypal_order_edit_fns.inc,v 1.1 2009/03/30 18:08:57 ata Exp $
*
*/


require_once SQ_INCLUDE_PATH.'/asset_edit/asset_edit_fns.inc';

/**
* Paypal_Order_Edit_Fns
*
* Purpose
*
*
* @author  Anh Ta <ata@squiz.co.uk>
* @version $Revision: 1.1 $
* @package MySource_Matrix_Packages
* @subpackage ecommerce
*/
class Paypal_Order_Edit_Fns extends Asset_Edit_Fns
{


	/**
	* Constructor
	*
	*/
	function __construct()
	{
		parent::__construct();

	}//end constructor
	
	
	/**
	* Paint the unique transaction ID generated by Paypal
	*
	* @param object	&$asset	the asset whose interface we are painting
	* @param object	&$o		the outputter class
	* @param string	$prefix	prefix for the form elements
	*
	* @return boolean
	* @access public
	*/
	function paintTransactionID(&$asset, &$o, $prefix)
	{
		echo '<b>'.$asset->attr('txn_id').'</b>';
		
		return TRUE;
		
	}//end paintTransactionID()
	

	/**
	* Paint the payment status of the transaction/order
	*
	* @param object	&$asset	the asset whose interface we are painting
	* @param object	&$o		the outputter class
	* @param string	$prefix	prefix for the form elements
	*
	* @return boolean
	* @access public
	*/
	function paintPaymentStatus(&$asset, &$o, $prefix)
	{
		echo '<i>'.$asset->attr('payment_status').'</i>';
		
		return TRUE;
		
	}//end paintPaymentStatus()
	
	
	/**
	* Paint the incomplete reason message for the transaction/order
	*
	* @param object	&$asset	the asset whose interface we are painting
	* @param object	&$o		the outputter class
	* @param string	$prefix	prefix for the form elements
	*
	* @return boolean
	* @access public
	*/
	function paintIncompleteReason(&$asset, &$o, $prefix)
	{
		echo $asset->attr('incomplete_reason');
		
		return TRUE;
		
	}//end paintIncompleteReason()
	
	
	/**
	* Paint the total amount of money of the payment
	*
	* @param object	&$asset	the asset whose interface we are painting
	* @param object	&$o		the outputter class
	* @param string	$prefix	prefix for the form elements
	*
	* @return boolean
	* @access public
	*/
	function paintTotalAmount(&$asset, &$o, $prefix)
	{
		echo $asset->attr('total_amount').'&nbsp;'.$asset->attr('currency');
		
		return TRUE;
		
	}//end paintTotalAmount()
	
	
	/**
	* Paint summary of the products purchased in the transaction/order
	*
	* @param object	&$asset	the asset whose interface we are painting
	* @param object	&$o		the outputter class
	* @param string	$prefix	prefix for the form elements
	*
	* @return boolean
	* @access public
	*/
	function paintSummary(&$asset, &$o, $prefix)
	{
		echo 'Order ID: '.$asset->id.'<br /><br />';
		echo $asset->getProductSummary();
		
		return TRUE;
		
	}//end paintSummary()
	
	
	/**
	* Paint the custom information for the transaction/order
	*
	* @param object	&$asset	the asset whose interface we are painting
	* @param object	&$o		the outputter class
	* @param string	$prefix	prefix for the form elements
	*
	* @return boolean
	* @access public
	*/
	function paintCustomInfo(&$asset, &$o, $prefix)
	{
		echo '<pre>'.htmlspecialchars($asset->attr('custom_info')).'</pre>';
		
		return TRUE;
		
	}//end paintCustomInfo()
	
	
}//end class
?>