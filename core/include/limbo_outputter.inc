<?php
/**
* +--------------------------------------------------------------------+
* | Squiz.net Open Source Licence                                      |
* +--------------------------------------------------------------------+
* | Copyright (c), 2003 Squiz Pty Ltd (ABN 77 084 670 600).            |
* +--------------------------------------------------------------------+
* | This source file may be used subject to, and only in accordance    |
* | with, the Squiz Open Source Licence Agreement found at             |
* | http://www.squiz.net/licence.                                      |
* | Make sure you have read and accept the terms of that licence,      |
* | including its limitations of liability and disclaimers, before     |
* | using this software in any way. Your use of this software is       |
* | deemed to constitute agreement to be bound by that licence. If you |
* | modify, adapt or enhance this software, you agree to assign your   |
* | intellectual property rights in the modification, adaptation and   |
* | enhancement to Squiz Pty Ltd for use and distribution under that   |
* | licence.                                                           |
* +--------------------------------------------------------------------+
*
* $Id: limbo_outputter.inc,v 1.20.2.3 2005/11/23 22:20:06 dmckee Exp $
*
*/

require_once SQ_INCLUDE_PATH.'/backend_outputter.inc';

/**
* Limbo_Outputter
*
* Purpose
*
*
* @author  Greg Sherwood <greg@squiz.net>
* @version $Revision: 1.20.2.3 $
* @package MySource_Matrix
*/
class Limbo_Outputter extends Backend_Outputter
{


	/**
	* Constructor
	*
	* @access public
	*/
	function Limbo_Outputter()
	{
		$this->Backend_Outputter();

	}//end constructor


	/**
	* Allows you to add get vars to the action section of the form
	*
	* In limbo we dont want get vars though, so we will post all these
	*
	* @param string		$name		the name of the var
	* @param string		$value		the value of the var
	* @param boolean	$persistant	ignored
	*
	* @return void
	* @access public
	*/
	function addFormActionGetVar($name, $value, $persistant=false)
	{
		if ($persistant) {
			return parent::addFormActionGetVar($name, $value, true);
		}
		return $this->addHiddenField($name, $value);

	}//end addFormActionGetVar()


	/**
	* Paint the cached limbo interface
	*
	* @return void
	* @access public
	*/
	function paint()
	{
		if ($this->_raw_opened) $this->closeRaw();
		// close all sections
		while (!empty($this->_section_stack)) {
			$this->closeSection();
		}
		$this->_paintBodyHeader();
		?><div id="sq_backend_sections"><?php
		if (!$this->_redirect) $this->paintSections();
		?></div><?php

		$this->_paintBodyFooter();

	}//end paint()


	/**
	* Paint the sections within out contents
	*
	* @return void
	* @access public
	*/
	function paintSections()
	{
		for ($i = 0; $i < count($this->_contents); $i++) {
			$this->_paintSection($this->_contents[$i]);
		}

	}//end paintSections()


	/**
	* Paint the header of the page as it should appear in the <head> of the document
	*
	* @access private
	*/
	function _paintHeader()
	{
		// Charset header
		if (!headers_sent()) {
			if ($this->_charset) {
				header("Content-type: text/html; charset=$this->_charset");
			} else {
				header("Content-type: text/html; charset=".SQ_CONF_DEFAULT_CHARACTER_SET);
			}
		}

		// CSS includes
		$this->addCssInclude($this->filesPath('css/edit.css'));
		foreach ($this->_css_includes as $file) {
			$this->_paintCssInclude($file);
		}

		// first add the js translation files
		foreach ($GLOBALS['SQ_SYSTEM']->lm->getJavascriptIncludes() as $js_include) {
			$this->addJsInclude($js_include);
		}

		// JS includes, including some defaults
		$this->addJsInclude(sq_web_path('lib').'/html_form/html_form.js');
		$this->addJsInclude(sq_web_path('lib').'/js/general.js');
		$this->addJsInclude(sq_web_path('lib').'/js/debug.js');
		$this->addJsInclude(sq_web_path('lib').'/js/edit.js');
		$this->addJsInclude(sq_web_path('lib').'/js/translation.js');

		foreach ($this->_js_includes as $file) {
			$this->_paintJsInclude($file);
		}

		// Event handlers
		$this->_paintEventHandlers();

		// Preloaded images
		foreach ($this->_preload_imgs as $file) {
			echo "\t\tpreload_image('".$file."');\n";
		}

	}//end _paintHeader()


	/**
	* Paint the header as it would appear if the contents of this ouputter were being printed in the <body> of a document
	*
	* @access public
	* @return void
	*/
	function _paintInlineHeader()
	{
		// CSS includes, inline style
		?>
		<style type="text/css">
			<?php
			foreach ($this->_css_includes as $file) {
				echo "\t\t@import url($file)\n";
			}
			?>
		</style>
		<?php

		// JS includes, including some defaults
		$this->addJsInclude(sq_web_path('lib').'/html_form/html_form.js');
		$this->addJsInclude(sq_web_path('lib').'/js/general.js');
		$this->addJsInclude(sq_web_path('lib').'/js/debug.js');
		$this->addJsInclude(sq_web_path('lib').'/js/edit.js');
		$this->addJsInclude(sq_web_path('lib').'/js/translation.js');
		foreach ($this->_js_includes as $file) {
			$this->_paintJsInclude($file);
		}

		// Event handlers
		$this->_paintEventHandlers();

		// Hidden Fields
		$this->_paintHiddenFields();

		// Preload images
		foreach ($this->_preload_imgs as $file) {
			echo "\t\tpreload_image('".$file."');\n";
		}

	}//end _paintInlineHeader()


	/**
	* Print the JS that attaches the specified onload and onsubmit handlers
	*
	* @access public
	* @return void
	*/
	function _paintEventHandlers()
	{
		?>
		<script type="text/javascript"><!--
		//<![CDATA[

			// slip our own onLoad function into the onLoad event of the window
			if (window.onload) {
				var sqOtherOnLoad = window.onload;
				window.onload = function() { sqOtherOnLoad(); page_on_load(); }
			} else {
				window.onload = function() { page_on_load(); }
			}

			var SQ_DOCUMENT_LOADED = false;

			function page_on_load()
			{
				<?php
				foreach ($this->_on_load_calls as $call) {
					echo "\t\t$call;\n";
				}//end foreach
				?>

				// let everyone know the document is loaded
				SQ_DOCUMENT_LOADED = true;

			}// end page_on_load()

			var SQ_FORM_SUBMITTED = false;

			function form_on_submit()
			{
				if (SQ_FORM_SUBMITTED) {
					alert(js_translate('form_already_submitted'));
					return;
				}

				<?php
					foreach ($this->_on_submit_calls as $call) {
						echo "\t\t$call;\n";
					}
				?>

				// basically if they get this far then we can submit
				SQ_FORM_SUBMITTED = true;
				return true;

			}//end form_on_submit()

		//]]> -->
		</script>
		<?php

	}//end _paintEventHandlers()


	/**
	* Print a field without buffering (nb == non-buffering)
	*
	* @param string $name		label of the field
	* @param string $format		format 'new_line' | 'blank' | 'commit' | ''
	* @param string $note		a note to place with the field
	*
	* @return boolean
	* @access private
	*/
	function _nbOpenField($name, $format='', $note='', $hidden=false)
	{
		if ($this->_is_open_field) $this->closeField();
		$this->_is_open_field = true;

		// store the format and note of the current field for future reference
		$this->_current_field_type = $format;
		$this->_current_field_note = $note;

		switch ($format) {
			case 'new_line' :
				?>
					<tr <?php if ($hidden) echo 'style="display: none"'; ?>>
						<td nowrap valign="top" class="sq-limbo-field" colspan="3">
							<a name="field_<?php echo $this->_field_count; ?>"></a>
							<?php echo $name;?>
						</td>
					</tr>
					<tr <?php if ($hidden) echo 'style="display: none"'; ?>>
						<td valign="top" class="sq-backend-data" colspan="3">
							<table cellpadding="0" cellspacing="0" border="0">
								<tr>
									<td><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="5" height="1"/></td>
									<td width="100%" valign="top" class="sq-backend-data">
				<?php
			break;

			case 'commit' :
				?>
				<tr>
					<td width="100%" valign="top" class="sq-backend-data" style="text-align: right; border" colspan="3">
				<?php
			break;

			case 'blank' :
				// a blank field to be used just for formatting
			break;

			default :
			?>
				<tr <?php if ($hidden) echo 'style="display: none"'; ?>>
					<td nowrap valign="top" class="sq-limbo-field">
						<a name="field_<?php echo $this->_field_count; ?>"></a>
						<?php echo $name;?>
					</td>
					<td width="10"><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="10" height="1" /></td>
					<td width="100%" valign="top" class="sq-backend-data">
			<?php
		}//end switch

	}//end _nbOpenField()


	/**
	* Opens a section without buffering
	*
	* @param Array		$section	some initialising data
	*
	* @return void
	* @access private
	*/
	function _nbOpenSection($section)
	{
		$this->_nb_section_count++;
		?>
			<a name="section_<?php echo $this->_nb_section_count; ?>"></a>
			<table cellpadding="0" cellspacing="1" border="0">
			<?php
			if ($section['heading']) {
				if ($this->_is_open_section) {
					// printing a nested section - needs to look a little different
					?>
					<tr>
						<td class="sq-limbo-section-subheading" colspan="3"><?php echo $section['heading'];?></td>
					</tr>
					<?php
				} else {
					$this->_is_open_section = true;
					// printing a top level section
					?>
					<tr>
						<td class="sq-limbo-section-heading" colspan="3" style="border-bottom: 1px solid #000000"><?php echo $section['heading'];?></td>
					</tr>
					<?php
				}
			}//end if

			// print the section seperator
			?>
			<tr>
				<td colspan="3"><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="1" height="10" /></td>
			</tr>
			<tr>
				<td><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="10" height="1" /></td>
				<td width="100%">
					<table cellspacing="0" cellpadding="0" border="0" width="100%">
						<tr>
							<td width="100%" valign="top" colspan="3">
			<?php

	}//end _nbOpenSection()


	/**
	* Paint the passed section onto the page
	*
	* @access private
	*/
	function _paintSection($section, $depth=0)
	{
		if ($section['type'] == 'raw') {
			echo $section['contents'];
		} else {

		?>
			<a name="section_<?php echo $section['section_count']; ?>"></a>
			<table cellpadding="0" cellspacing="1" border="0">
			<?php
			if ($section['heading']) {
				if ($depth > 0) {
					// printing a nested section - needs to look a little different
					?>
					<tr>
						<td class="sq-limbo-section-subheading" colspan="3"><?php echo $section['heading'];?></td>
					</tr>
					<?php
				} else {
					// printing a top level section
					?>
					<tr>
						<td class="sq-limbo-section-heading" colspan="3" style="border-bottom: 1px solid #000000"><?php echo $section['heading'];?></td>
					</tr>
					<?php
				}
			}//end if

			// print the section seperator
			?>
			<tr>
				<td colspan="3"><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="1" height="10" /></td>
			</tr>
			<tr>
				<td><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="10" height="1" /></td>
				<td width="100%">
					<table cellspacing="0" cellpadding="0" border="0" width="100%">
			<?php

			for ($j = 0; $j < count($section['areas']); $j++) {
				switch ($section['areas'][$j]['area_type']) {
					case 'section' :
						?>
							<tr>
								<td width="100%" valign="top" colspan="3">
								<?php
									$this->_paintSection($section['areas'][$j], $depth + 1);
								?>
								</td>
							</tr>
						<?php

						break;

					case 'field' :
						$field = &$section['areas'][$j];
						switch ($field['format']) {
							case 'new_line' :
								?>
									<tr <?php if ($field['hidden']) echo 'style="display: none"'; ?>>
										<td nowrap valign="top" class="sq-limbo-field" colspan="3">
											<a name="field_<?php echo $field['field_count']; ?>"></a>
											<?php echo $field['name'];?>
										</td>
									</tr>
									<tr <?php if ($field['hidden']) echo 'style="display: none"'; ?>>
										<td valign="top" class="sq-backend-data" colspan="3">
											<table cellpadding="0" cellspacing="0" border="0">
												<tr>
													<td><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="5" height="1"/></td>
													<td width="100%" valign="top" class="sq-backend-data">
													<?php
														echo $field['contents'];
														if ($field['note']) $this->note($field['note']);
													?>
													</td>
												</tr>
											</table>
										</td>
									</tr>
								<?php
							break;

							case 'commit' :
								?>
								<tr <?php if ($field['hidden']) echo 'style="display: none"'; ?>>
									<td width="100%" valign="top" class="sq-backend-data" style="text-align: right; border" colspan="3">
									<?php
										echo $field['contents'];
										if ($field['note']) $this->note($field['note']);
									?>
									</td>
								</tr>
								<?php
							break;

							case 'blank' :
								// a blank field to be used just for formatting
							break;

							default :
							?>
								<tr <?php if ($field['hidden']) echo 'style="display: none"'; ?>>
									<td nowrap valign="top" class="sq-limbo-field">
										<a name="field_<?php echo $field['field_count']; ?>"></a>
										<?php echo $field['name'];?>
									</td>
									<td width="10"><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="10" height="1" /></td>
									<td width="100%" valign="top" class="sq-backend-data">
									<?php
										echo $field['contents'];
										if ($field['note']) $this->note($field['note']);
									?>
									</td>
								</tr>
								<tr <?php if ($field['hidden']) echo 'style="display: none"'; ?>>
									<td colspan="3"><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="1" height="10" /></td>
								</tr>
							<?php
						}//end switch

						break;

					default :
						trigger_localised_error('SYS0257', E_USER_ERROR, $section['areas'][$j]['area_type']);

				}// end switch area type

			}//end for

			?>
					</table>
				</td>
				<td><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="10" height="1" /></td>
			</tr>
			</table>
			<table cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><img src="<?php echo $this->filesPath('images/blank.gif');?>" width="1" height="10" /></td></tr></table>
			<?php

		}//end if section type == raw

	}//end _paintSection()


	/**
	* Paint the footer of the page
	*
	* @access private
	*/
	function _paintBodyHeader()
	{
		// if a redirect has been set - add an onLoad call so we redirect as normal
		if ($this->_redirect) {
			?>
			<script type="text/javascript">
				<?php echo $this->_redirect_target; ?>.location = "<?php echo addslashes($this->_redirect); ?>";
			</script>
			<?php
		}
		?>

		<!--
			some special styles we need in limbo that dont get
			overwritten by other stylsheets - thus the reason why we define
			then within the source instead of in the backend css
		-->
		<style type="text/css">
			#sq_backend_sections td {
				border:			0px;
				margin:			0px;
				padding:		0px;
				text-align:		left;
				vertical-align:	top;
			}
		</style>

		<form action="<?php echo $this->_action.$this->_anchor;?>" id="main_form" name="main_form" method="post" enctype="multipart/form-data" onsubmit="return form_on_submit();">

		<?php
		hidden_field('process_form', '1');
		$this->_paintHiddenFields();

	}//end _paintBodyHeader()


	/**
	* Paint the buffered hidden fields
	*
	* @access public
	* @return void
	*/
	function _paintHiddenFields()
	{
		foreach ($this->_hidden_fields as $name => $value) {
			hidden_field($name, $value);
		}

	}//end _paintHiddenFields()


	/**
	* Paint the footer of the page
	*
	* @access private
	*/
	function _paintBodyFooter()
	{
		?>
		</form>
		<?php

	}//end _paintBodyFooter()


}//end class

?>