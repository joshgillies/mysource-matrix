<?php
/**
* +--------------------------------------------------------------------+
* | This MySource Matrix CMS file is Copyright (c) Squiz Pty Ltd       |
* | ACN 084 670 600                                                    |
* +--------------------------------------------------------------------+
* | IMPORTANT: Your use of this Software is subject to the terms of    |
* | the Licence provided in the file licence.txt. If you cannot find   |
* | this file please contact Squiz (www.squiz.net) so we may provide   |
* | you a copy.                                                        |
* +--------------------------------------------------------------------+
*
* $Id: form_question_rule_type_ends_with_edit_fns.inc,v 1.4 2007/12/11 03:29:57 rong Exp $
*
*/


require_once dirname(__FILE__).'/../../form_question_rule/form_question_rule_edit_fns.inc';

/**
* Form_Question_Rule_Type_Ends_With_Edit_Fns
*
* Purpose
*
*
* @author  Luke Wright <lwright@squiz.net>
* @version $Revision: 1.4 $
* @package MySource_Matrix_Packages
* @subpackage __core__
*/
class Form_Question_Rule_Type_Ends_With_Edit_Fns extends Form_Question_Rule_Edit_Fns
{


	/**
	* Constructor
	*
	*/
	function Form_Question_Rule_Type_Ends_With_Edit_Fns()
	{
		$this->Form_Question_Rule_Edit_Fns();

	}//end constructor


	function paintRule(&$asset, &$o, $prefix, $rule_data, $write_access)
	{
		$operator_list = $asset->getOperators();

		if (!$write_access) {
			$o->openField(translate('core_form_rule_details'));
			if (($cq_id = array_get_index($rule_data, 'comparison_question_id', 0)) != 0) {
				$q_asset = $GLOBALS['SQ_SYSTEM']->am->getAsset($cq_id);
				$value = $q_asset->name;
			} else {
				$value = array_get_index($rule_data, 'value', '');
			}

			echo translate('core_form_rule_ends_with_edit_'.(array_get_index($rule_data, 'operator', 1) ? 'true' : 'false').($cq_id ? '_q' : ''), $value);
			$o->closeField();

		} else {

			$o->openField(translate('operator'));
			// list of operators
			combo_box($prefix.'[operator]', $operator_list, false, array_get_index($rule_data, 'operator', 1));
			$o->closeField();

			$o->openField(translate('core_form_rule_static_value'));
			// give a text box to write the comparison value in
			text_box($prefix.'[value]', array_get_index($rule_data, 'value', ''), 30);
			$o->closeField();

			$o->openField(translate('core_form_rule_or_value_of_question'));
			// give a text box to write the comparison value in
			asset_finder($prefix.'[asset]', array_get_index($rule_data, 'comparison_question_id', '0'), Array('form_question' => 'D'));
			$o->closeField();

			$o->openField(translate('core_form_case_sensitive_question'));
			// give a text box to write the comparison value in
			check_box($prefix.'[case]', 1, array_get_index($rule_data, 'case_sensitive', 1));
			$o->closeField();

			$o->sectionNote(translate('core_form_rule_static_or_question_note'));
		}

		return $write_access;

	}//end paintRule()


	/**
	* Process the rule's interface
	*
	* @return boolean
	* @access public
	*/
	function processRule(&$asset, &$o, $prefix, &$rule_data)
	{
		if (!isset($_POST[$prefix])) return false;

		$operator = array_get_index($_POST[$prefix], 'operator', 1);
		$comparison = array_get_index($_POST[$prefix], 'value', null);
		$comp_asset = array_get_index($_POST[$prefix], 'asset', null);
		$case = array_get_index($_POST[$prefix], 'case', 0);

		$rule_data['operator'] = $operator;
		$rule_data['case_sensitive'] = $case;
		if (is_null($comp_asset) || ($comp_asset['assetid'] == '0')) {
			$rule_data['value'] = $comparison;
			$rule_data['comparison_question_id'] = '0';
		} else {
			$rule_data['comparison_question_id'] = $comp_asset['assetid'];
			$rule_data['value'] = null;
		}

		return true;

	}//end processRule()


}//end class
?>
