<?php
/**
* +--------------------------------------------------------------------+
* | Squiz.net Open Source Licence                                      |
* +--------------------------------------------------------------------+
* | Copyright (c), 2003 Squiz Pty Ltd (ABN 77 084 670 600).            |
* +--------------------------------------------------------------------+
* | This source file may be used subject to, and only in accordance    |
* | with, the Squiz Open Source Licence Agreement found at             |
* | http://www.squiz.net/licence.                                      |
* | Make sure you have read and accept the terms of that licence,      |
* | including its limitations of liability and disclaimers, before     |
* | using this software in any way. Your use of this software is       |
* | deemed to constitute agreement to be bound by that licence. If you |
* | modify, adapt or enhance this software, you agree to assign your   |
* | intellectual property rights in the modification, adaptation and   |
* | enhancement to Squiz Pty Ltd for use and distribution under that   |
* | licence.                                                           |
* +--------------------------------------------------------------------+
*
* $Id: image_management.inc,v 1.14.2.1 2005/09/22 05:32:10 amiller Exp $
*
*/


require_once SQ_INCLUDE_PATH.'/asset_management.inc';

/**
* Image_Management
*
* @see Asset_Management
*
* @author  Greg Sherwood <greg@squiz.net>
* @version $Revision: 1.14.2.1 $
* @package MySource_Matrix_Packages
* @subpackage __core__
*/
class Image_Management extends Asset_Management
{


	/**
	* Constructor
	*
	*/
	function Image_Management(&$pm)
	{
		$this->Asset_Management($pm);

		$this->vars = Array(
						'alt'			=> Array(
											'added'			=> '0.2',
											'type'			=> 'text',
											'default'		=> '',
											'description'	=> 'The text to be used in the Alt attribute of the IMG tag',
										   ),
						'caption'		=> Array(
											'added'			=> '0.2',
											'type'			=> 'text',
											'default'		=> '',
											'description'	=> 'Some text to be associated with the image and can be accessed and printed out separately if required',
										   ),
						'width'			=> Array(
											'added'			=> '0.2',
											'type'			=> 'int',
											'default'		=> 0,
											'description'	=> 'Width of the image (generated from the image file)',
										   ),
						'height'		=> Array(
											'added'			=> '0.2',
											'type'			=> 'int',
											'default'		=> 0,
											'description'	=> 'Height of the image (generated from the image file)',
										   ),
						'size'			=> Array(
											'added'			=> '0.2',
											'type'			=> 'int',
											'default'		=> 0,
											'description'	=> 'Size (in bytes) of the image (generated from the image file)',
										   ),
						'varieties'		=> Array(
											'added'		=> '0.3',
											'type'		=> 'serialise',
											'default'	=> Array(),
										   ),
						'variety_count'	=> Array(
											'added'		=> '0.3',
											'type'		=> 'int',
											'default'	=> 1,
										   ),
					  );


	}//end constructor


	/**
	* Upgrade
	*
	* @param string	$current_version	the version of the asset that is currenly installed
	*
	* @return boolean
	* @access public
	*/
	function _upgrade($current_version)
	{
		if (!parent::_upgrade($current_version)) return false;

		$asset_name = strtoupper($this->_pm->getTypeInfo($this->getAssetType(), 'name'));

		if (version_compare($current_version, '0.2', '<')) {
			// version 0.1 -> 0.2
			// Added the attributes of which alt, title, width, height, size need to be set
			bam('STARTING '.$asset_name.' UPGRADE - FROM VERSION 0.1');
			$images = $GLOBALS['SQ_SYSTEM']->am->getTypeAssetids($this->getAssetType(), false, true);
			$total_images = count($images);
			$i = 1;
			foreach ($images as $assetid => $type_code) {
				$asset = &$GLOBALS['SQ_SYSTEM']->am->getAsset($assetid, $type_code);
				if (is_null($asset)) continue;

				bam('Processing: '.$asset->name.' (#'.$asset->id.') -- Image '.$i.' of '.$total_images);

				if (!$asset->setAttrValue('alt',   $asset->name) || !$asset->setAttrValue('title', $asset->name)) {
					echo 'Asset #', $asset->id, ' (', $asset->name,') Unable to set alt and/or title', "\n";
					continue;
				}

				$info = $asset->getExistingFile();
				if (!empty($info)) {
					if (!$asset->setAttrValue('width',  $info['width']) || !$asset->setAttrValue('height', $info['height']) || !$asset->setAttrValue('size',   $info['size'])) {
						echo 'Asset #', $asset->id, ' (', $asset->name,') Unable to set width, height and/or size', "\n";
						continue;
					}
				}//end if

				if (!$asset->saveAttributes()) {
					echo 'Asset #', $asset->id, ' (', $asset->name,') Unable to save attributes', "\n";
					continue;
				}

				$GLOBALS['SQ_SYSTEM']->am->forgetAsset($asset);
				unset($asset);

				$i++;

			}//end foreach
			bam($asset_name.' UPGRADE COMPLETE - FROM VERSION 0.1');

		}//end version 0.1 upgrade

		return true;

	}//end _upgrade()


}//end class
?>
