<?php
/**
* +--------------------------------------------------------------------+
* | Squiz.net Open Source Licence                                      |
* +--------------------------------------------------------------------+
* | Copyright (c), 2003 Squiz Pty Ltd (ABN 77 084 670 600).            |
* +--------------------------------------------------------------------+
* | This source file may be used subject to, and only in accordance    |
* | with, the Squiz Open Source Licence Agreement found at             |
* | http://www.squiz.net/licence.                                      |
* | Make sure you have read and accept the terms of that licence,      |
* | including its limitations of liability and disclaimers, before     |
* | using this software in any way. Your use of this software is       |
* | deemed to constitute agreement to be bound by that licence. If you |
* | modify, adapt or enhance this software, you agree to assign your   |
* | intellectual property rights in the modification, adaptation and   |
* | enhancement to Squiz Pty Ltd for use and distribution under that   |
* | licence.                                                           |
* +--------------------------------------------------------------------+
*
* $Id: design_area_body.inc,v 1.15.2.1 2005/01/11 04:35:57 gsherwood Exp $
* $Name: not supported by cvs2svn $
*/


require_once SQ_CORE_PACKAGE_PATH.'/designs/design_area/design_area.inc';

/**
* Design_Area_Body
*
* Purpose
*
*
* @author  Blair Robertson <blair@squiz.net>
* @version $Version$ - 1.0
* @package MySource_Matrix_Packages
* @subpackage __core__
*/
class Design_Area_Body extends Design_Area
{


	/*
	* Outputs either the straight HTML or PHP code that is needed for this design area to be represented
	*
	* @param object Design	$design the design for which we are currently printing
	*
	* @return boolean
	* @access public
	*/
	function printArea(&$design)
	{
		$format = $this->attr('format');

		echo '
		<','?php
		if (SQ_IN_LIMBO) {
			$ASSET->printLimbo();
		} else {
			$body = \'\';
			if ($ASSET->_is_cacheable) {
				$cm = &$GLOBALS[\'SQ_SYSTEM\']->am->getSystemAsset(\'cache_manager\');
				$body = $cm->loadFromCache($ASSET);
			}
			if (empty($body)) {
				ob_start();
					$ASSET->printBody();
					$body = ob_get_contents();
				ob_end_clean();
			}
		';

		switch ($format) {
			case 'text':
			case 'low_bandwidth':
				// text only design - strip images, embeds and objects
				echo '
					$body = preg_replace(\'|\<img([^\>]*)\>|Ui\',\'\',$body);
					$body = preg_replace(\'|\\<embed(.*)\>(.*)</embed>|i\',\'\',$body);
					$body = preg_replace(\'|\\<object(.*)\>(.*)</object>|i\',\'\',$body);
					';
				if ($format == 'low_bandwidth') {
					// low bandwidth design - strip images, embeds, objects, and additional whitespace
					echo '
						$body = preg_replace(\'|\s+|\', \' \', $body);
						$body = str_replace(\'<br />\', \'<br/>\', $body);
						$body = str_replace(\'<br/>\', "\n", $body);
						$body = preg_replace(\'|\n\s+|\', "\n", $body);
						$body = preg_replace(\'|[\n]+|\', "\n", $body);
						$body = str_replace("\n", \'<br/>\', $body);
						';
				}
			break;
		}

		echo '
			echo $body;
		}';
		echo '
		?','>';
		return true;

	}//end printArea()


}//end class

?>
