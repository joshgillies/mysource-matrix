SQUIZ MATRIX CHANGELOG

VERSION 4.4.6

Featured Changes
===================================


Metadata Select Field: Upload Options from CSV File [ Feature Request #5489 ]
-----------------------------------------------------

The Select question type, used on a Custom Form, allows you to specify a CSV file from your computer to automatically input the options for the select question. This is useful for batch uploading a number of options or if you are importing an existing question's options.

Previously, this functionality was not available on the Metadata Select Field. This feature introduces this addition, allowing you to specify a CSV file when configuring the Metadata Select Field's options.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5462: Paint Layout: Conditional Keywords Performance Enhancement.
Minor Enhancement #5477: E-Com Default Delivery Method: New Keyword to Print Transaction Ref ID.

Core

Fixed Bug #5460: New DIVs created in Safe Edit showing on front end before going Live.
Fixed Bug #5468: remove_form_submission.php corrupts sq_ast_lnk_tree.
Fixed Bug #5469: remove_form_submission.php doesn't clean up metadata on file system.
Fixed Bug #5470: Rollback view throw errors if the rollback date is older than the user currently logged.
Fixed Bug #5471: Mollom CAPTCHA throws fatal error when checking metadata fields value in Asset Builder.
Fixed Bug #5476: Missing file causes empty array to be returned from getExistingFile.
Fixed Bug #5478: Inserting Youtube video in wysiwyg using "Embed Youtube video" plugin does not resize properly in IE7/8.
Fixed Bug #5480: AssetID attribute doesn't work with multiple type codes.
Fixed Bug #5492: Form Select Question option list can not be reordered.

CMS

Fixed Bug #5420: Online Quiz pagination does not work.

E-Commerce

Fixed Bug #5474: E-commerce form input names keywords.

Data

Fixed Bug #5465: Execute DB Query Form Submission Action creating too many bind vars.

Web Services

Fixed Bug #5472: Non-UTF8 characters in response from JS API can break the output.



VERSION 4.4.5

Featured Changes
===================================

Keyword Modifiers Available on Page Contents Bodycopies [ Feature Request #5138 ]
-----------------------------------------------------

Keyword replacements within Squiz Matrix can be modified using a variety of keyword modifiers to further configure the returned values. For example, the keyword %asset_contents^maxwords:10% uses the maxwords modifier to display the first ten words of the body of the asset.

Previously, keyword modifiers were not available for use on the Page Contents and Page Contents (No Results) bodycopies of Asset Listing and Search Page assets.

This feature allows keyword modifiers to be used on these bodycopies, enabling the further configuration of your Asset Listings and Search pages.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5423: Calendar Page Performance Enhancement Printing JavaScript.
Minor Enhancement #5432: Import Assets From XML Ignores Non-Existent Asset IDs.
Minor Enhancement #5433: Related Asset Metadata Performance Enhancement.
Minor Enhancement #5446: New Asset Type Icon URL Keyword Replacement.
Minor Enhancement #5448: New Online Poll Option ID Keyword Replacement. 

Core

Fixed Bug #5366: Error handler does not correctly filter out Locale Manager.
Fixed Bug #5412: Replace modifier changes scope on %asset_name% in Asset Listing Type Format Bodycopy.
Fixed Bug #5421: Using Design asset's Styles option can break the HTML validation in the frontend.
Fixed Bug #5430: export_to_xml.php complains about assetid passed not being valid.
Fixed Bug #5437: Email trigger action on workflow events.
Fixed Bug #5449: Custom form - "Provide Accessible CAPTCHA" is not accessible under WCAG.
Fixed Bug #5457: Current asset parameters failing on set metadata value trigger action.
Fixed Bug #5455: Escaped LDAP DNs break top-bar in Admin interface.
Fixed Bug #5439: Send email trigger not sending to recipients in LDAP group.


CMS

Fixed Bug #5431: Redirect page and safe editing issue.

Search

Fixed Bug #5445: Global Search and Replace Tool returns errors. 

LDAP

Fixed Bug #5439: Send email trigger not sending to recipients in LDAP group.  

Import Tools

Fixed Bug #5410: Import Assets from XML Tool running out of memory. 

E-Commerce

Fixed Bug #5394: UTransact payment gateway invalid expiry date. 

Web Services

Fixed Bug #5444: SOAP Server design bug.

Funnelback Search

Fixed Bug #5411: check_requirements should describe xsl/xml better.
Fixed Bug #5413: funnelback_reindex.php breaking backward compatibility.



VERSION 4.4.4

Featured Changes
===================================


Script to Export Form Submissions to CSV [ Feature Request #5337 ]
-----------------------------------------------------

A new script has been added to allow users to export form submissions to CSV. This script can be set to run automatically at regular intervals and is useful for integrating submissions into other systems.

The export_form_submission_logs.php script takes the following arguments:

- The asset ID of the form to export the submissions of.
- A date range of submissions to export.
- The path of the CSV file to export submissions to.

An example of its usage is shown below:

php scripts/export_form_submission_logs.php $PWD 1234 "yesterday 00:00:00" "yesterday 23:59:59" >~/submissions-export.csv


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5359: Calendar Package Keyword Replacement Enhancements - iCal End Date.
Minor Enhancement #5361: New Simple Edit Keywords for Recurring Event Modifications.
Minor Enhancement #5369: Warning When Applying a Paint Layout on an Asset Without a Design.
Minor Enhancement #5398: Remote URL Keyword Replacement for Remote Content.
Minor Enhancement #5400: IRC Calendar MIME Type.


Core

Fixed Bug #5265: Replace text tool list inconsistencies.
Fixed Bug #5345: WYSIWYG Insert Link problem.
Fixed Bug #5349: Deja Vu and Safe Editing.
Fixed Bug #5351: Listing page with A-Z style; In single page mode, the group title of non A-Z pages printed as @.
Fixed Bug #5353: Special chars in assetid causing problem in Asset Map when moving the asset.
Fixed Bug #5358: Keyword Modifiers don't work with event keywords.
Fixed Bug #5372: Online Quiz question spacing changes when using HTML.
Fixed Bug #5373: Filter Front End User Input should disable in CLI mode.
Fixed Bug #5374: Matrix throws strict errors even when configured not to.
Fixed Bug #5378: Import asset from XML script/tool shows blank content for nested content type after import.
Fixed Bug #5386: JS API getKeywordsReplacements un-terminated string literal.
Fixed Bug #5388: Import/Export script issues with Design_Css asset.
Fixed Bug #5391: Print IMG tag with Design Area nest content does not escape ALT and TITLE attributes.
Fixed Bug #5395: Trigger Action Set Future Status complains for index not defined.
Fixed Bug #5396: Proxy fails when using authentication.
Fixed Bug #5403: Second level Design_Customisation issue with import/export script.
Fixed Bug #5404: Double byte characters issue with import/export script.

CMS

Fixed Bug #5355: Custom Form Email - Time keyword not replaced.
Fixed Bug #5380: %asset_metadata_<fieldname>_value% keyword doesn't work.

LDAP

Fixed Bug #5352: LDAP User Sorting under LDAP Groups not working.

Calendar

Fixed Bug #5332: Recurring Calendar Events don't show if they have a child modification.
Fixed Bug #5360: iCal date keyword prints incorrect over a certain time period.

Data

Fixed Bug #5340: Invalid XML breaks XML Data Source asset.

Google Maps

Fixed Bug #5379: Google Maps doesn't respect proxies configured.



VERSION 4.4.3

Minor Enhancements and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5304: system_integrity_recover_file_versions.php Now Works for Image Varieties.
Minor Enhancement #5308: Metadata Field's Friendly Name Attribute Available as Keyword Replacement.
Minor Enhancement #5312: Custom Form Date field link issue.
Minor Enhancement #5313: Performance Improvement to createAssetLink() Function.
Minor Enhancement #5316: Remap Manager: Never Delete Mass Select / Deselect.
Minor Enhancement #5321: Alternative Proxy Config Allows Matches to Exclude Going Through Proxy
Minor Enhancement #5325: http_request Obeys Alternative Proxy Settings.

Core

Fixed Bug #5299: Cron job added are of time stamp in past.
Fixed Bug #5300: Keyword modifiers not working properly on site map.
Fixed Bug #5301: Metadata date field not disabled when "Use default" selected.
Fixed Bug #5303: Trigger action set standard date, updates not search re-indexed.
Fixed Bug #5306: Asset map complains about the empty XML on PHP 5.3.
Fixed Bug #5307: Trigger condition "Status changes to" throws PHP notice.
Fixed Bug #5309: Manual asset id input processing and trimming.
Fixed Bug #5311: Show Diff preview incomplete highlights.
Fixed Bug #5314: Short form shadow asset links.
Fixed Bug #5326: Trying to add an Alternative Proxy spits out PHP warnings.
Fixed Bug #5334: Workflow escalation custom message are have wrong subject.
Fixed Bug #5341: Filter Front End User Input - set to 'Filter input' breaking front end layout after parse file commit.
Fixed Bug #5342: PHP 5.3 E_DEPRECATED warning in installation scripts.
Fixed Bug #5327: Linking to image varieties requires a dollar $ sign to work.

Search

Fixed Bug #5319: Search Manager Asset Tree and Global Weights screen error. 
Fixed Bug #5324: Metadata Weightings in Search Manager Asset Tree Weights screen does not work. 

LDAP

Fixed Bug #5305: LDAP authentication ignores bridge asset-map position.
Fixed Bug #5347: LDAP Bridge not expanding for some User/User Groups LDAP entries

Web Services

Fixed Bug #5318: JS API causing syntax error if the ajax response is "undefined" or "null". 
Fixed Bug #5328: JS API setAttribute will show success even on error. 



VERSION 4.4.2

Featured Changes
===================================


New Workflow Custom Messages [ Feature Request #5181 ]
-----------------------------------------------------

New customisable messages have been added to Squiz Matrix's Workflow Schema package to allow you to configure the messages sent when an asset is Up For Review. Previously, these messages were not customisable.

The Workflow Up for Review Invitation and Workflow Up for Review Rejection messages can be configured on the Custom Messages screen of a workflow step. If these messages are not customised, a generic message will be used instead.

Also now customisable, is the system's Notify on Live message, sent to users when an asset in workflow is approved and made live.

The Notify on Live message can be configured on a new Custom Messages screen on the workflow schema asset. If this message is not customised, a generic message will be used instead.

Additionally, all available asset keywords are now available for use on workflow custom messages. This includes all attribute and metadata keywords of the asset currently in workflow.

This feature has been added to allow greater customisation of the messages sent when an asset is in workflow. 

New Keyword Modifier to Apply XSLT to XML Content [ Feature Request #5183 ]
-----------------------------------------------------

Keyword Modifiers allow you to modify keyword replacements to further configure their returned values. This feature adds a new keyword modifier to apply XSLT (Extensible Stylesheet Language Transformations) to XML content returned on the keyword.

The format for this keyword modifier is as follows.

%keyword^xslt:<assetid>%
 
%asset_contents_raw^xslt:343% 

This modifier will take the XSLT of a file asset (specified by asset ID), apply it to XML returned on the asset and output the result.

This feature has been added to allow users to transform the XML of assets, providing greater control over the content of their sites. 

Keywords Supported as Attributes Values on the Create Asset Trigger Action [ Feature Request #5249 ]
-----------------------------------------------------

The Create Asset trigger action will create a new asset on the system. When configuring this action, you can specify values to set the attribute values of the asset to be created.

Previously, this trigger action did not support the use of keyword replacements in these attribute value fields.

This feature modifies this trigger action to allow keyword replacements to be used when setting the attribute values of the asset to be created. This allows you to use the values of the firing asset as the attribute values of the created asset. 

Bulkmail User Recipients on Send Email Trigger Action [ Feature Request #5256 ]
-----------------------------------------------------

The Send Email trigger action will send an email to user or group when an event occurs. Previously, however, this trigger action could only send emails to users with the ability to log in to the system, which did not include bulkmail users.

This feature enables the use of bulkmail user accounts to be selected as recipients on the Send Email trigger action. Any bulkmail users located under a selected user group asset will also be included as a recipient on the email.

This feature has been added to allow users to create trigger configurations where public users would only need to supply their name and email address in order to subscribe to email updates on a site. 

New Trigger Condition: Keyword Value [ Feature Request #5257 ]
-----------------------------------------------------

A new trigger condition has been added that will check against a keyword value on the firing asset.

The Keyword Value condition, allows you to input a keyword and a replacement value, specifying whether this value should be an exact, partial or regular expression match of the firing asset's keyword value.

For example, if you set this condition to check the asset_name keyword as a Partial Match with the value News, the condition will be met if the asset name of the firing asset contains the value News (e.g. Latest News or Newspaper).

This trigger condition has been added to allow users to further configure their trigger configurations.

New HIPO Job to Regenerate a Design [ Feature Request #5259 ]
-----------------------------------------------------

When editing the parse file of a design, a design will need to regenerate in order to display the changes you have made. Previously, this regeneration was handled by a single request, however, on more complex designs (e.g. multiple customisations) this could be quite a lengthy process and could potentially timeout.

This feature introduces the Regenerate Design HIPO Job to manage the regeneration process. This job will respond multiple times while regenerating the design, preventing any timeout issues that may have occurred.

This feature has been added to improve the performance of Squiz Matrix and provide a more reliability on larger, complex systems.

Custom Design and Paint Layout Options for Site's Not Found Page [ Feature Request #5260 ]
-----------------------------------------------------

When you create a Site asset in your system, you can specify a Not Found Page, an asset to be displayed when the user enters a URL that does not exist (404 page error).

By default, the design and layout of this Not Found Page is determined by the asset URL closest to the given non-existent URL.

This feature introduces additional options for the Not Found Page to specify an override design and/or paint layout to use instead of the default.

The Override Design and Override Paint Layout settings are set on a new Not Found Page Options section on the Details screen of a Site asset. If these settings are customised, the Not Found Page will use the selected design and paint layout instead of using the design of the closest URL. 

JS API: New Function to Clone an Asset [ Feature Request #5278 ]
-----------------------------------------------------

A new cloneAsset() operation has been added to the JavaScript API to clone an asset under a specified parent, allowing you to specify the number of clones to create and their link type.

This operation is enabled on the Details screen of the JS API on a new Clone Asset field. 
The getLineage() operation takes the following parameters:

    asset_id: the asset ID of the asset to clone.
    new_parent: the asset ID of the parent to clone under.
    clone_num: the number of clones to create under the new parent.
    new_position: the position to place newly cloned assets under the parent.
    link_type: the link type of the cloned asset.
    link_value: the link value of the cloned asset.
    dataCallback: the custom callback function. 

An example usage of this operation is as follows (enhanced JS API): 

  js_api.cloneAsset({asset_id : 100, new_parent : 240, clone_num : 2, new_position : 1, link_type: 'SQ_LINK_TYPE_2', link_value : 'new value', dataCallback : customDataCallbackFunc})

JS API: New Function to Compare the Content of Assets [ Feature Request #5285 ]
-----------------------------------------------------

A new showDifference() operation has been added to the JavaScript API to compare the content of two different assets. This works in a similar manner to the Preview screen's Show Diff tool for Safe Edit assets and highlights the differences between two specified assets.

This operation also allows you to apply paint layouts to the content to be compare. It is enabled on the Details screen of the JS API on a new Show content difference field.

The showDifference() operation takes the following parameters:

    assetid_1: the asset ID of the first asset to compare.
    assetid_2: the asset ID of the second asset to compare.
    paint_layout_1: the asset ID of the Paint Layout to apply to asset 1.
    paint_layout_2: the asset ID of the Paint Layout to apply to asset 2.
    dataCallback: the custom callback function. 

An example usage of this operation is as follows (enhanced JS API):   

  js_api.showDifference({assetid_1 : 100, assetid_2 : 200, paint_layout_1 : 340, paint_layout_2 : 350, dataCallback : customDataCallbackFunc}) 

Performance Mode: View as Public User [ Feature Request #5297 ]
-----------------------------------------------------

This new feature to Squiz Matrix's Performance Mode allows users to view the performance of assets as a public user. An option is available on the Performance Mode interface to switch between viewing as both a public and logged in user.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5240: Better Handling for JSON Encoding on the Javascript API.
Minor Enhancement #5247: Ecommerce Form Honour with ID code now Approved.
Minor Enhancement #5252: Twitter Update Status Trigger Action Respects Matrix Proxy.
Minor Enhancement #5254: Quick Search Performance Improvement.
Minor Enhancement #5261: Asset ID Format Validation in Asset Builder's Create Location Field.
Minor Enhancement #5276: Bulk File Import Tool Description Improved.

Core

Fixed Bug #5184: Regenerate Metadata on schema doesn't reindex metadata fields with default metadata value.
Fixed Bug #5190: WYSIWYG Insert Link Title adds backslashs before apostrophes.
Fixed Bug #5208: Expired workflow cron job sends workflow escalation email for every dependant assets.
Fixed Bug #5231: Keyword modifiers don't work on custom form answers.
Fixed Bug #5244: Can not disable automatic remaps for File assets.
Fixed Bug #5245: Design Customisation Table Misaligned and Awkward.
Fixed Bug #5251: Layout lookup values remain for removed site URL.
Fixed Bug #5263: Bulkmail job setting mem_limit to unlimited triggers suhosin.
Fixed Bug #5269: WYSIWYG in Chrome: Heading 2 style for last paragraph will stop user from creating new paragraph.
Fixed Bug #5272: JS API typo Undefined variable: update_user in error log.
Fixed Bug #5275: Nesting more than one AL using same DB Data Source and diff dynamic vars doesn't refresh results.
Fixed Bug #5280: Client side form validation doesn't work with %section_contents_XXXX% keyword.
Fixed Bug #5282: TO_CHAR on CLOB (Oracle DB) causing workflow escalation to fail.
Fixed Bug #5284: In PHP 5.3.1+, Details screen of Show If design area with User IP condition throws error.
Fixed Bug #5289: Matrix licence statement not printed in HTML source code if EES design is used on the design file.
Fixed Bug #5291: general.inc:mime_type_content() throwing undefined variable error. 
Fixed Bug #5293: Nested Content in Cloned Assets.
Fixed Bug #5327: Linking to image varieties requires a dollar $ sign to work.

CMS

Fixed Bug #5281: Online Quiz select box question reported empty by client side validation. 
Fixed Bug #5283: Online Quiz alerts all questions unanswered when using Custom Grouping.    

Search

Fixed Bug #5279: Search Page form's submit onClick action not executing in Internet Explorer. 
Fixed Bug #5295: Deja Vu caching old metadata as Search Manager re-indexes old metadata.

LDAP

Fixed Bug #5248: LDAP users not being recognised as step of workflow.  
Fixed Bug #5296: LDAP Groups not expanding in Active Directory.

Funnelback

Fixed Bug #5290: Funnelback search page returning non-live asset result to non-publishing user.




VERSION 4.4.1

Featured Changes
===================================


Squiz Matrix Performance Mode [ Feature Request #5182 ]


Squiz Matrix Performance Mode [ Feature Request #5182 ]
-----------------------------------------------------

Squiz Matrix's new Performance Mode analyses the load times of assets within a system and presents this information to users through an in-depth timeline chart. This allows users to monitor the performance of their assets and pinpoint problem areas that may be causing excessive loading.

Performance mode is accessed by appending _performance to the URL of an asset, like so:

http://www.example.com/site/_performance

Performance results are displayed at the bottom of the user's browser and will regenerate as a user navigates through the assets of their site.

The performance results presented to users will include the total load time of the URL and the assets that have been loaded, identifying the worst performing assets. Certain assets, such as an Asset Listing Page, also allow users to break down their load times into individual steps; this allows you to single out at which stage an asset may be under-performing.

Asset Listing: Option to Return No Results if Dynamic Parameters Not Found [ Feature Request #5196 ]
-----------------------------------------------------

On an asset listing page, dynamic parameters are available to source alternate root nodes and asset selections for the listing.

Previously, if the dynamic parameter that was configured could not be found (ie. no root node/selection returned), the asset listing would fall back to its static root node settings - either a configured root node or the asset listing, itself. This could potentially cause  performance issues, for example, if the static root node was pointing to a top level asset with many children.

This feature adds new options, allowing you to prevent your asset listing from reverting to its default root node settings. 

The If dynamic root not found and If asset selection not specified fields allow you to specify whether to revert back to the static root node when the dynamic root/selection is not returned or to instead return an empty result on the listing.

These options have been added to give users greater control over the results of their listings.

New Trigger Action to Remove Future Lineage Cron Jobs [ Feature Request #5209 ]
-----------------------------------------------------

When you create a future linking job on the Linking screen of an asset (to either create or delete a link), Squiz Matrix will create a one off future lineage cron job to perform this task.

This feature adds a new trigger action to remove any of these future lineage cron jobs on an asset, effectively cancelling the future link.

This trigger action allows you to specify whether to remove future lineage cron jobs of type Create, Delete or both. With these options, you can select whether to remove future jobs only when a link is being either created or deleted or to remove all future link job regardless of their type.

New Javascript API Function to Return the Asset Lineage of a URL [ Feature Request #5211 ]
-----------------------------------------------------

The getLineage() operation has been added to Matrix's JS API to return the asset lineage of an asset ID or URL. The operation takes the following parameters:

asset_url: the URL or asset ID of the asset to get the lineage of.
signficant_link_only: whether or not to return significant links only (TYPE 1 and TYPE 2 links).
dataCallback: the custom callback function.

An example usage of this operation is as follows: 

getLineage ("http://www.example.com/site", 1, customDataCallbackFunc);  

getLineage ("100", 0, customDataCallbackFunc); 

New JavaScript API Function to Batch Requests [ Feature Request #5212 ]
-----------------------------------------------------

The batchRequests operation allows you to group multiple functions on the JS API into a single batched request. The response of this operation will include all the data returned from each executed function. 

The output of functions on this operation can be used as the input for subsequent functions using the following keyword replacement format:

%results_0_<param>%

For example, the keyword replacement %results_0_1_name% would print the value of the name parameter returned on the second element of the first array of the response.

A blocking parameter is available for use on each operation to stop the execution of subsequent operations if an error is returned.

An example usage of this operation is as follows: 

batchRequest({
   '0': {
      function : 'getChildren',
      args : {
         asset_id : 100,
          levels : 1,
         type_codes : 'page_standard',
         get_attributes : 0
       },
    blocking : 1 
   },
   '1':  {
       function : 'setAttribute',
      args : {
         id : '%results_0_0_id%',
         attr_name : 'short_name',
         attr_val : 'new short name'
      },
   blocking : 1,
   },
},customDataCallbackFunc); 

Enhanced JavaScript for the JS API [ Feature Request #5218 ]
-----------------------------------------------------

Previously, the JavaScript API had no defined NameSpace, meaning that it could possibly interfere with or be interfered with by other JavaScript in the global namespace.

This feature introduces scope based Javascript for the API which is more efficient in handling errors and more flexible. It also has basic 'reflection' so you can call it without arguments and it tells you what is required and what is default.

To ensure older API calls are still supported, there is a switch on the Details screen of the JS API, allowing you to toggle between the Enhanced and Standard JS of the API.

Also on the new and Improved form of this asset if an operation is not activated, it will not be included in the asset's JavaScipt file which can reduce the size of the file considerably if only a few operations are activated.

The return value of the JS API's operations will remain the same.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #4583: Menu Design Area Cacheable
Minor Enhancement #5193: Changes to DPS Payment Gateway Asset.
Minor Enhancement #5194: Permissions Inherited on Imported File Bridge Assets.
Minor Enhancement #5199: Snippet Content Type Does Not Replace Keywords.
Minor Enhancement #5214: Performance Enhancement to the regen_metadata_schemas.php Script.
Minor Enhancement #5215: JS API: getChildren and getParents Functions Return Regular Index Arrays.
Minor Enhancement #5216: JS API: acquireLock Function Updates Locks if Already Acquired.
Minor Enhancement #5225: Form Error Handling For Uploaded File Asset Creation Failure.
Minor Enhancement #5226: DB Data Source: SQL Queries to Oracle Databases.
Minor Enhancement #5228: Asset ID Keyword Now Available on Rejection Workflow Message.
Minor Enhancement #5230: Email Format Error Handling for Invalid Asset ID.
Minor Enhancement #5238: Minifying Matrix JS Files.
Minor Enhancement #5239: Form SOAP action not working for SOAP functions return simple element.
Minor Enhancement #5242: Asset Map XML doesnt return is_dependant flag.

Core

Fixed Bug #5185: Workflow stale messages not sending and subject can't be customised.
Fixed Bug #5186: Can't start an alternate workflow stream by placing Up for Review.
Fixed Bug #5187: TRIM Saved Search Uncaught SoapFault exceptions.
Fixed Bug #5195: REST resource asset authentication type Pass Matrix session through doesn't work.
Fixed Bug #5201: PHP Fatal error on cron_job_manage_pending_accounts.
Fixed Bug #5205: SEI keywords list for Multi-Date Calendar Event.
Fixed Bug #5208: Expired workflow cron job sends workflow escalation email for every dependant assets.
Fixed Bug #5223: Asset Manager Get Link Lineages skips some notice links on Oracle.
Fixed Bug #5220: Custom form gives errors if submission logging is set to No.
Fixed Bug #5229: Custom form text field with height > 1 giving JavaScript error.
Fixed Bug #5232: Status Changed event broadcasts too early.
Fixed Bug #5246: Export to XML script shouldn't export shadow links.

Calendar

Fixed Bug #5192: Calendar event asset detail screen, Occurs on check box has minor js error.

IPB

Fixed Bug #5221: IPB authentication broken.

Web Services

Fixed Bug #5213: getPermissions() JS API function provides incomplete results.
Fixed Bug #5219: SOAP API metadata service GetSchemasOnAsset API throws error Object hasn't 'Granted' property.
Fixed Bug #5236: Squiz Suite will not register with older Suite products.
Fixed Bug #5237: Cannot de-register a registered system on Suite manager.


VERSION 4.4.0

Featured Changes
===================================


New Trigger Action to Make a SOAP Call [ Feature Request #5139 ]
-----------------------------------------------------

A new trigger action has been added to Squiz Matrix, allowing you to make a SOAP call. The Make SOAP Call trigger action works in a similar manner to the Make SOAP Call submission action on a Custom Form or Ecommerce Form Page, allowing you to send a message to a remote SOAP server when the trigger is fired.

This trigger action retains all the features of the existing Make SOAP Call form submission action, allowing you to specify the parameters of the SOAP request message, test the content of the request, and configure data validation and error messages.

This feature has been developed to further extend support for web services within Squiz Matrix.

Asset Status Being Changed To Trigger Condition [ Feature Request #5155 ]
-----------------------------------------------------

A new trigger condition has been added to evaluates the status that an asset is being changed to. The Asset Status Being Changed To trigger condition allows you to specify one or more asset statuses (Live, Under Construction etc.) and will be matched if the firing asset's status is being changed to one of these statuses.

This condition can be used in conjunction with the Before Status Changed and Status Changed trigger events, for example, you could use this condition to prevent users from changing an asset to a particular asset status (using the Fail trigger action).

Before Status Changed Trigger Event [ Feature Request #5156 ]
-----------------------------------------------------

Currently, Squiz Matrix's trigger system includes the Status Changed trigger event, which will fire a trigger when the status of an asset has been changed. This feature introduces a new trigger event that will fire a trigger when the status of an asset is to be changed but before the status is actually altered.

Make SOAP Call Submission Action: Check Response Rules [ Feature Request #5166 ]
-----------------------------------------------------

This month's Matrix releases introduced data validation on the SOAP response of the Custom Form's Make SOAP Call form submission action. This feature adds the ability to configure data validation rules to further customise how Matrix evaluates whether or not data returned on the SOAP response is valid

You can now select from a variety of rule types (e.g. must contain, must NOT contain etc.), stipulating a value to create a rule that must be met for a SOAP response to be valid.

For example, if you set the validation rule as Must NOT contain Fail, the response will only be deemed valid if the response does not contain the value Fail. If it does contain this value, the returned data will be evaluated as invalid and the error configured in the Error Message field will be displayed.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5130: TRIM Saved Search: Configure the Download Limit of Record Attachments.
Minor Enhancement #5142: Enhancements to the System Integrity Incomplete Attachments Script.
Minor Enhancement #5147: Support for Global Keywords in the SOAP request of the Make SOAP Call Form Submission Action.
Minor Enhancement #5152: Bulkmail Subscribe Page Envelope Sender Address.
Minor Enhancement #5153: New Metadata Date Field Option.
Minor Enhancement #5154: Error Message Options on the Set Future Status Trigger Action.
Minor Enhancement #5160: Listing Engine Bodycopy Keywords Caching Performance Enhancement.
Minor Enhancement #5164: Revised Bulkmail Verification Emails.
Minor Enhancement #5177: Cascading Tags gets TYPE 3 linked asset and tags them.
Minor Enhancement #5178: getChildren() in Matrix doesn't let you filter by link_type.
Minor Enhancement: Rollback Performance Enhancement.

Core

Fixed Bug #5121: Extras field on Details screen of a Date form field does not work.
Fixed Bug #5134: Unable to Accept/Reject workflow via EES from emails.
Fixed Bug #5144: HTTPS links in RSS feeds while viewing in HTTP.
Fixed Bug #5150: Cancelling Safe Edit results in errors and loss of notice links.
Fixed Bug #5151: Incomplete attachment submission directories left on file system.
Fixed Bug #5157: Cannot create image varieties with some GIF files.
Fixed Bug #5158: Insert Link WYSIWYG bug for shadow assets.
Fixed Bug #5162: Asset Builder missing Keywords for Product assets.
Fixed Bug #5165: Internal Message failed to send to LDAP user group.
Fixed Bug #5169: Typo in the permission change script.
Fixed Bug #5170: Changes to export script in Matrix for better structured import.
Fixed Bug #5172: Remap Manager's 'never delete' option doesn't respond to changes.

CMS

Fixed Bug #5141: Keywords in Remote Content Layout do not work.
Fixed Bug #5145: Global keyword replacements with keyword modifier not working in Form.
Fixed Bug #5176: Form step action executes even when pressing 'previous' button in multi-page form.

Search

Fixed Bug #5163: Search Log Report overwriting the existing entries in Current search report.

Google Maps

Fixed Bug #5081: Enabling root toggling in details screen of Google Map gives fatal error.

Web Services

Fixed Bug #5129: getMetadata() when no metadata schemas are applied returns nothing, causing a javascript error.
Fixed Bug #5159: In SOAP form/step action, value '0' in SOAP request is ignored.
Fixed Bug #5167: SOAP Web Service UpdateLink function's LinkID param variables not matching up.



VERSION 4.4.0 RC1

Featured Changes
===================================


Logout Due to IP Change Logged in System Logs [ Feature Request #4604 ]
-----------------------------------------------------

Previously, when a user was logged out of Squiz Matrix because their IP changed and SQ_CONF_ALLOW_IP_CHANGE was set to true, neither an error or a system.security.* message would be sent. This meant that the only way to figure out why users were intermittently losing their session was to have prior knowledge of this setting.

This feature had been added so that Matrix will log logouts due to IP changing in the system logs. For example:

[2011-05-23 15:11:23][12:Root User][1024:mysource notice][ ] [system.security.logout.ip_change - remote_addr:192.168.1.1;sessionid:;] (User Automatically Logged Out) - User "Root User" was logged out since their IP address changed from 192.168.2.1 to 192.168.1.1.

Enhancements to the import_files_from_bridge.php Script [ Feature Request #5033 ]
-----------------------------------------------------

Squiz Matrix's import_files_from_bridge.php script imports files exposed through a File Bridge asset into Matrix. Previously, this script would import these files as File type assets; however, files will now be imported as corresponding Matrix file assets, when available. For example, an image will now be imported as an Image type asset. 

This feature also introduces the option of importing folders containing an index.html file as a Standard Page asset with the content of the index file. This option can be enabled by setting a parameter on the script.

The new usage of the import_files_from_bridge.php script is as follows:

php import_files_from_bridge.php <MATRIX_ROOT> <BRIDGE_ROOT_NODE_ASSETID> <PARENT_ASSETID> <RECURSIVE> <HANDLE_INDEX_FILE>
 
php import_files_from_bridge.php path/to/matrix 100 150 y y

Make SOAP Call Step Action For Multi-Page Forms [ Feature Request #5089 ]
-----------------------------------------------------

Currently, Squiz Matrix's Custom Form asset allows you to make a SOAP call on submission. This new feature extends the functionality of submission actions to the individual steps (or pages) of a multi-page Custom Form, allowing your form to make a SOAP call on each page submission.

Step actions can be configured on the new Step Actions screen for form sections.

The set up of the Make SOAP Call step action is similar to the Make SOAP Call submission action, allowing you to specify the connection to the SOAP server and specify the request message.

On the front end of the form, when a user clicks the Next Page button, Squiz Matrix will make the SOAP call, as configured on the Step Actions screen for that step.

The Make SOAP Call step action also utilises the new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

SharePoint CMIS Bridge [ Feature Request #5090 ]
-----------------------------------------------------

This new feature introduces the CMIS Bridge asset, a connection bridge for retrieving files from a CMIS enabled SharePoint repository (currently supports Microsoft SharePoint 2010).

This asset retrieves SharePoint documents in a similar manner to the SharePoint Saved Search; however, files imported over the CMIS Bridge will be imported as fully functional system assets within Squiz Matrix (such as Images, Text Files etc.). These assets can be edited, linked and moved around the system just like any other asset, allowing you greater control over your SharePoint repositories within Matrix. 

Files are stored under the CMIS Bridge asset in the asset map when initially synchronised with the connected CMIS enabled SharePoint repository. Further synchronisation will update these files, trashing any old files, modifying files that have been altered and creating new assets for new files on the repository.

Synchronisation is also controlled via a new Sync CMIS Bridges Cron Job. This cron job is set to run daily - its run time and frequency can be configured on its Details screen.

CMIS properties (e.g. Author, Objectid, Modified, Created) can be mapped to the metadata fields of a schema applied to the CMIS Bridge. Additional custom fields created for the document library will dynamically be made available for metadata mapping.

The addition of this asset enhances the SharePoint package within Squiz Matrix, allowing you to manage your SharePoint documents within Matrix with more control than ever before.

Search Page: Specify Data Sources on Exclude Fields [ Feature Request #5094 ]
-----------------------------------------------------

Previously, Matrix's Search Page only allowed you to configure data sources for search fields. The data sources allowed you to specify which fields on an asset to search. This feature extends this functionality to exclude fields, allowing you to specify which fields to exclude on.

Like a search field, exclude fields allow the following data source types:

Include All: searches all standard fields, attribute fields and metadata fields of assets.
Standard Asset Field: searches a specified standard asset field (e.g. the name of a page or its asset ID).
Asset Attribute: searches a specified attribute field (e.g. the title of a file of a MS Word Document asset).
Asset Metadata Field: searches a specified metadata field.

You can select multiple data sources to search for each exclude field that you add, specifying the word logic to use for your data sources (all words or any word).

Please note that existing exclude fields will default to the Include All data source type, returning the same results as they would previously had.

On the Search Page, the exclude field will only search the fields specified in its data sources. For example, say you configure the exclude field to search the Keywords metadata field of assets - if a user searches for the query News in the exclude field, the Search Page will exclude assets contain the query News in their Keywords metadata from the search results.

This enhancement to the Search Page's exclude fields allows you to tweak your Search Page, allowing your users to return more accurate results, specific to their searching queries.

Specifiying the Cron Deadlock Email Notification Receivers [ Feature Request #5103 ]
-----------------------------------------------------

Squiz Matrix's Cron Manager handles the cron process within a system, managing and running the cron jobs that have been scheduled. Occasionally, a cron job may stall, causing the Cron Manager to deadlock. When this occurs, Matrix will send out email notifications, informing users of these errors.

Previously, Matrix would send these deadlock email notifications to all users under the System Administrators Folder, as well as the email addresses configured in the system's main.inc file. These automated email notifications would be resent to these users each subsequent run of the Cron Manager, until the issue was resolved. This could cause large numbers of emails sent to many users, potentially causing inconvenience and even spam filtering issues with users' mail clients.

This feature adds a new option to the Cron Manager, allowing you to specify the users that will receive cron deadlock emails. This option is configured via a new Emailing Options section on the Options screen of the Cron Manager.

The Cron Deadlock Email Receivers field allows you to select users, user groups and roles to specify which users should receive email notifications from the Cron Manager. By default, the system's Root User and the email addresses configured in the system's main.inc file will automatically also receive these emails.

By allowing you to specify the users to receive cron deadlock emails, this feature allows you to more efficiently identify and manage any potential issues with the Cron Manager in your system.

A-Z Listing: Defining the Layout of Individual Letters on the Navigation List [ Feature Request #5124 ]
-----------------------------------------------------

On a multiple page A-Z asset listing, the navigation character list displays links to the different alphabetised pages on the listing. This feature adds the ability to format the individual letters on this list.

This feature utilises the asset listing's existing Page Link and Current Link formats, which were not previously used on an A-Z asset listing.

On an A-Z listing, the Page Link Format will now define the layout of each individual letter on the linked character list, while the Current Page Format will define the layout of letters that contain no results.

These formats use the existing %page_link% and %page_number% keyword replacements. For example, you could format the letters on the list so that letters with results will be in bold, while letters with no results will be struck out.

The feature gives users greater control over the layout of their A-Z listings, in line with the options available on a regular asset listing.

Make SOAP Call on Submit Submission Action: Array Data in SOAP Response [ Feature Request #5127 ]
-----------------------------------------------------

Previously, the Custom Form's Make SOAP Call on Submit form submission action could not handle array data in the SOAP response. This feature adds support for array data in the SOAP response, populating array data into global keywords using index numbers.

For example:

%globals_session_[FOMR_ASSETID]_array_field0_value%, %globals_session_[FOMR_ASSETID]_array_field2_value%, %globals_session_[FOMR_ASSETID]_array_field3_value%

This feature also adds a TEST SOAP option to printout the sample SOAP request and response in the backend, for testing purposes.

Make SOAP Call on Submit Submission Action: Check SOAP Response [ Feature Request #5128 ]
-----------------------------------------------------

This features introduces data validation on the SOAP request of the Make SOAP Call on Submit form submission action of a Custom Form. If incorrect data is found in the request, Matrix will respond with a suggestion of specific error message, while if no incorrect data is found, will process the request, as normal.  

This feature is implemented through a new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

JSON Data Source
-----------------------------------------------------

This new JSON Data Source asset is an alternative to the existing XML Data Source, facilitating server-side data exchange with web applications.

Clean Old Shadow Links Script
-----------------------------------------------------

A new script has been added to the Matrix database to clean links to shadow assets that are no longer valid. This is usually because the assets have since been removed from the data source, e.g. An LDAP backend user is linked under the System Administrators folder but is later removed from the LDAP Directory.

Additional reasons a shadow link may no longer be valid is if the connection between Matrix and the data source goes down or if the configuration of the connection bridge is altered for testing purposes. Because of these reasons, when the clean_old_shadow_links.php script is first run, it will only return a list of shadow links for review. You can then decided whether or not to delete the shadow links in the system.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5041: Enhancement: Matrix clear expired cache query sometime is too large for oracle
Minor Enhancement #5044: Performance Enhancement: When Send Cacheable header, and Matrix responds 304 Not Modified, there is a useless call to printFrontEnd() 
Minor Enhancement #5045: Add a favicon to the Admin interface.
Minor Enhancement #5078: Error message on eSec Payment Gateway when Matrix is unable to connect to the service.
Minor Enhancement #5079: Support vertical resizing for the asset map.  
Minor Enhancement #5082: eSec Payment Gateway respects the proxy settings in Matrix's system configuration.
Minor Enhancement #5087: Add logging for pdftohtml failures.
Minor Enhancement #5096: Improved performance when dealing with large sq_internal_messages table.
Minor Enhancement #5109: Video File Asset: Add webm format.
Minor Enhancement #5116: Clear cache cron job enhancement (default storage).
Minor Enhancement #5122: Issue with PHP function mime_type_content().
Minor Enhancement #5123: Metadata Manager default value functions performance enhancement.

Core

Fixed Bug #5050: LDAP Users not getting correct permissions if the user is under a subgroup.
Fixed Bug #5055: Nested content DIVs don't save properly across contexts.
Fixed Bug #5061: Fatal error when viewing the Details screen of a form submission when a section of the form has been deleted.
Fixed Bug #5064: HIPO pop-up windows lose focus in Internet Explorer.
Fixed Bug #5069: Hierarchy metadata field default value displays incorrectly.
Fixed Bug #5072: Trashed file assets still accessible via public data URL.
Fixed Bug #5080: condition user agent can not use regular expression operator '|'.
Fixed Bug #5083: Metadata Fields Inaccessible.
Fixed Bug #5084: Changed file name in Safe Edit causes multiple issues.
Fixed Bug #5085: IE 8 and IE 9 wont let user commit changes on WYSIWYG screen.
Fixed Bug #5086: Error when editing image varieties after cancelling Safe Edit.
Fixed Bug #5092: Asset Builder's insert link via WYSIWYG tool removes the dot (.) before  /?a= .
Fixed Bug #5093: Customised classes not appearing in EES WYSIWYG.
Fixed Bug #5097: Shadow links (shadow assets linked under a real asset) always appear red-crossed in Asset Map for non-admin users.
Fixed Bug #5099: [cron_job] Metadata triggers causing Cron deadlock.
Fixed Bug #5104: Triggering asset intermittently getting lost when using the send email trigger action.
Fixed Bug #5106: Contains keyword modifier fails on string with a slash (/).
Fixed Bug #5108: Selectable create location link type bug with account manager page.
Fixed Bug #5114: PHP 5.3 remote content page complaining "Assigning the return value of new by reference is deprecated".
Fixed Bug #5117: Dependants only will not check in Set permission trigger action.
Fixed Bug #5118: Role screen doesn't not validates role and user asset IDs.
Fixed Bug #5119: Asset listing grouping by parent results in mysource warnings when the parent asset is a user asset.
Fixed Bug #5120: System config screen, Enable HTTP Authentication option has cosmetic problem when lock is acquired.

CMS

Fixed Bug #5098: [cron_job] manage_pending_accounts causing Cron deadlock.
Fixed Bug #5102: Matrix will throw warnings is the nested asset is deleted.
Fixed Bug #5125: Forms answers getting unnecessarily encoded in Submission Logs screen. 

Search

Fixed Bug #5105: PHP Notices on Search Fields screen (Undefined Asset Type).

Web Services

Fixed Bug #4934: Committing from "approved to go live" causes attributes on REST assets to be cleared.




VERSION 4.2.0 RC1

Featured Changes
===================================


Version numbers in __data URLs [ Feature Request #4808 ]
-----------------------------------------------------

It's difficult to manage cache expiration of statically served content, since this content is served blind by apache.

That is, you can edit a file, or CSS asset for example, but until the browser forces the request of a new version (further compounded by reverse proxies), the old version will continue to be served.

A common pattern for dealing with this is to add version numbers to the URL for the static file. Often, this is simply added as a query string for simplicity.

The effect being, when the file is updated and you bust the cache on the page, the URL for the file is different (since it's versioned), and so the browser gets the fresh version of the asset.

This can be a huge boost in caching strategies, allowing people to be more aggressive with their cache policy and empowering them to bust the 'perceived' cache on static files more easily.

TRIM Feature Request for Cron Job [ Feature Request #4875 ]
-----------------------------------------------------

Added ability to modify the (when) attribute of the saved search cron job through the details interface.

Also added a custom field in saved search to allow the result set to contain a text version of a records container called (Container Title)

	Remap Manager: Never Delete Enhancements [ Feature Request #4890 ]
	-----------------------------------------------------

	The Remap Manager's Never Delete option allows you to lock specific remaps from being deleted. This new feature improves this existing functionality by adding a variety of enhancements.

	A new option has been added to the Remap Manager to purge all remaps in the system except those marked as Never Delete. This option is enabled through a new field on the Details screen of the Remap Manager.

	Setting this field to Yes and clicking Commit will purge all remaps in the system that are not marked as Never Delete.

	The Web Paths screen of an asset would previously list its remaps but would provide no indication of whether the remap was marked as Never Delete or not. A new column has now been added for remaps on the Web Paths screen to display whether the remap is marked as Never Delete.

	Previously, delete fields were available to all remaps listed in the Remap Manager or on the Web Paths screens of assets. These fields were ineffective when used on remaps marked as Never Delete, however they were still accessible. These delete fields will now only be enabled for use on remaps not marked as Never Delete. The delete field will be disabled on remaps marked as Never Delete, as shown in the figure above.

	The Remap Manager's Never Delete Added Remaps? field will now be disabled by default, meaning that users must manually enable this option. This field was previously enabled by default; Existing installations using the previous default will retain their settings when being updating.

	Slight performance improvement in rebuilding cache [ Feature Request #4925 ]
	-----------------------------------------------------

	A slight performance improvement can be achieved by testing if the asset has no urls first up and finishing, since a url is needed to be indexed by funnelback.

	Improved permissions in Squiz Search [ Feature Request #4926 ]
	-----------------------------------------------------

	Improved permissions in Squiz Search will be handled by adding the systemid to all but the public key when retrieving the sitemap.


	Additional Changes and Bug Fixes
	=================================== 

	Minor Enhancements
	Minor Enhancement #4894: Asset::readAccess Makes Unnecessary Calls to the Workflow Manager.
	Minor Enhancement #4895: Don't Add Remap Option on the Add Web Path Trigger Action.
	Minor Enhancement #4912: Improved Performance of the Workflow Screen.
	Minor Enhancement #4913: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4916: System Asset Links Locked by Default.
	Minor Enhancement #4923: Enhancement: When Painting 404 not found Page and Sending Cacheable Header is Enabled, Expiry header is Not Set.

	Core
	Fixed Bug #4856: Replace Text 'selected text only' not working in IE7+8.
	Fixed Bug #4881: Date/Time form output.
	Fixed Bug #4885: Daily cron jobs run twice.
	Fixed Bug #4886: "Update lookups" HIPO Job in File::saveAttributes() creating issue.
	Fixed Bug #4889: Incorrect default when attribute on Sync Product cron job.
	Fixed Bug #4896: Trigger action "Set Metadata Value" fails when using parameter map.
	Fixed Bug #4903: Online Quiz List Format field description lists unavailable formats.
	Fixed Bug #4904: Typo on design_area_asset_lineage screen.
	Fixed Bug #4905: Quotation button in WYSIWYG view, unquote results in escaped html.
	Fixed Bug #4906: 'AssetStatusUpdate' event broadcasted but onAssetStatusUpdate() never executed.
	Fixed Bug #4907: Error when changing content type in a non default context.
	Fixed Bug #4910: When an asset is linked to a big number of parents, you will easily get Oracle error ORA-01795: maximum number of expressions in a list is 1000.
	Fixed Bug #4915: Metadata value trigger condition does not consider keywords.
	Fixed Bug #4924: DB error when a design asset is notice linked to too many assets.
	Fixed Bug #4930: Global Search and Replace doesn't replace metadata.

	CMS
	Fixed Bug #4878: ORA-01795 on Site Map asset.
	Fixed Bug #4880: Insert image doesn't remember location of last image variety uploaded.
	Fixed Bug #4892: Small typos in Remote Content asset Details screen.
	Fixed Bug #4901: Using a nested asset in simple edit layout which has an arbitrary paint layout set, will throw PHP notices.

	Calendar
	Fixed Bug #4899: Recurring calendar event instance date keyword bugs.

	Web Services
	Fixed Bug #4877: JS API Fails on https only domains.
	Fixed Bug #4909: JS API setAssetStatus permission denied for user with write permissions.
	Fixed Bug #4920: JS API not escaping metadata correctly.
	Fixed Bug #4922: JS API returns invalid JSON.

	Funnelback Package
	Fixed Bug #4911: Contextual Navigation links not working with Funnelback Server Search.
	Fixed Bug #4921: The Sitemap XML generated by Matrix is not escaping nbsp chars.

