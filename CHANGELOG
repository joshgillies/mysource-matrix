SQUIZ MATRIX CHANGELOG


VERSION 4.18.4

Featured Changes
===================================

New Regular Expression Asset and Keyword Modifiers [ Feature Request #6812 ]
-----------------------------------------------------

This feature introduces the brand new Regular Expression asset to Squiz Matrix. The Regular Expression asset can be used to define a regular expression and replacement string pair, and can be used in conjunction with new regex keyword modifiers. 

The Details screen of the Regular Expression asset allows you to set the regular expression. If you want to create a replacement, this screen allow allows you to set a replacement string pair and a replacement limit. 

The Regular Expression asset can be used in conjunction with the following new keyword modifiers:

* preg_replace: replaces the regular expression value with the replacement set on the Regular Expression asset. This is the same functionality as the preg_replace() PHP function.

%asset_contents^preg_replace:[REGEX_ASSETID]%

* preg_match: returns a success/failure value if the regular expression matches the returned keyword value. This is the same functionality as the preg_match_all() PHP function.

%asset_contents^preg_match:[REGEX_ASSETID]%

In the above example, this keyword will return 0 if no match is found in the contents of the asset. If a match is found, this keyword will return the number of matches, e.g. 2 for two matches.

%asset_contents^preg_match:[REGEX_ASSETID]:Yes:No%

In this example, the keyword will return No if no match is found, and Yes if any number of matches are found.

* preg_match_result: returns regular expression matches on the returned keyword value as an array. This is the same functionality as the preg_match_all() PHP function, and should be used in conjunction with the array keyword modifiers. 

%asset_contents^preg_match_result:[REGEX_ASSETID]^as_json%

The above example will return the matches array in the json format. 


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6796: JS File Folder and CSS File Folder Enhancements.
Minor Enhancement #6800: New sort_options Parameter for Select Drop-Down Lists in Admin Interface.
Minor Enhancement #6802: TRIM Saved Search: New Update on Empty Response Field.
Minor Enhancement #6816: E-Commerce Order XML: Gateway and Merchant Reference Strings. 
Minor Enhancement #6823: JS API: editMetadataSchema() and getMetadataSchema() Enhancements. 
Minor Enhancement #6845: New Login Form Keywords on the Asset Builder and Account Manager Assets.
Minor Enhancement #6846: New Input Field ID Keywords on the Simple Edit Layout. 
Minor Enhancement #6857: Performance Enhancement to the Custom Form Page Asset. 

Core

Fixed Bug #6781: Some conflicting preferences revert to default.
Fixed Bug #6788: Simple edit can't open the modern asset map. 
Fixed Bug #6801: %asset_thumbnail% breaking events search page. 
Fixed Bug #6803: Search in search button keyword javascript output error. 
Fixed Bug #6807: Cannot modify header information - headers already sent by. 
Fixed Bug #6822: Accessing metadata schema screen in the rollback mode throws fatal db error. 
Fixed Bug #6824: Image variety keyword replacement does not escape double-quotes in alt or title text. 
Fixed Bug #6826: Paint Layout: Condition Logical always evaluates to true. 
Fixed Bug #6832: Wyswiyg plugins Format Heading and Apply Styles not working in IE11. 
Fixed Bug #6833: Tickbox Table form question outputs invalid HTML. 
Fixed Bug #6834: add_remove_url.php script doesn't copy user defined layout. 
Fixed Bug #6836: Safe edit interface generating some invalid HTML markups. 
Fixed Bug #6839: Simple Edit User doesnt get workflow approved emails.
Fixed Bug #6843: Show diff feature for preview can miss the changes made. 
Fixed Bug #6850: Trigger action Set Future Status does not takes metadata date field's offset into account. 
Fixed Bug #6852: Asset_Manager::assetExists() throws fatal db error in Oracle if supplied assetids are more than 1000. 

Web Services

Fixed Bug #6848: JS API batchRequest cleans params of the createAsset function which breaks creating with attributes. 

Modern Asset Map

Fixed Bug #6754: IE8 not responding to double-clicks in JS Asset Map.
Fixed Bug #6760: Insert image popup doesn't retain asset map location. 
Fixed Bug #6761: 'Binoculars' doesn't break out of teleported root. 
Fixed Bug #6780: Collapse all button applies to both asset trees. 
Fixed Bug #6785: Tree Two does not allow drag to select assets.



VERSION 4.18.3

Featured Changes
===================================

New Global Keyword to Print Post Data in JSON, XML and CSV [ Feature Request #6517 ]
-----------------------------------------------------

A new Global Keyword Replacement has been added to handle array data, i.e. the replacement containing the array data (e.g. _GET, _POST, Matrix sandbox session var) can be accessed using the global keywords with keyword modifiers. Two new keywords globals_get and globals_post are added to return _GET and _POST array data respectively.

In addition, four new keyword modifiers have been added to handle array data: as_xml, as_csv, as_url_string and as_json. If no keyword modifiers are used on returning array data, Matrix will apply the as_json modifier, by default; the resulting keyword replacement value is always text.

Please note that these array specific keyword modifiers will not work on string data replacements. However, as the result of the array data replacement is a string value, regular string keyword modifiers can be applied to the resulting keyword replacement.

%globals_get^as_xml^escapehtml%

%globals_get^as_xml^xpathe:count(/name)%

%globals_get^as_csv^uppercase%

%globals_session_asset_assets^as_json% 

New Keyword Condition Rule for Checking Visited Pages [ Feature Request #6692 ]
-----------------------------------------------------

The content creation tools within Squiz Matrix allow you to configure condition-based rules, defined by keyword replacements, to specify the sections of content to display. These rules can range from an asset's status being a particular status type, to whether a user is logged-in or not.

This feature adds a new condition type, allowing the system to check against the previously visited pages of a user, in order to determined whether or not the condition is met. The Visited Pages Condition can be set on the Conditional Keywords screen of a Paint Layout's Type Formats Bodycopy. 

The Visited Pages Condition can be check against whether the previously visited URL(s) either match or do not match a set of specified patterns or asset IDs. Regular expressions can be used when configuring the URLs in these fields.

Along with this new condition type, this feature also includes two new global keyword replacements:
%globals_visited_assets% and %global_visited_urls%. These global keywords will return an array of either the user's previously visited assets or URLs. Keyword modifiers can be used to parse this array.

New Input Type Field for Text Type Form Questions [ Feature Request #6799 ]
-----------------------------------------------------

The Custom Form's Text question type allows users to enter a text response to the question via an input field. This field can be configured as a single line field, or a multiple line box.

Previously, the Text question type would print an input type of "text" within the source of a form.

This feature introduces a new option for Text question types, allowing you to apply HTML5 input elements within your forms.

The Input Type field can be configured in the Question Options section on the Details screen of a Text question type. 

Users can select an input type in this field, to use on the form question. The options available include:

Color
Date
Datetime
Datetime-local
Email
Hidden
Month
Number
Range
Search
Text
Tel
Time
Url
Week 

By default, the Text input type will be used for Text questions. Selecting an alternative input type in this field will print this within the source of the page.

<input-type="email">

This feature also extends to Text questions on other form types within Squiz Matrix, such as the E-Commerce Form Page and Default Delivery Method assets. 

View the Squizmap idea for this feature at https://squizmap.squiz.net/matrix/2545.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6677: New Keyword Condition Rule for Checking Page Referrer.
Minor Enhancement #6691: New Keyword Condition Rule for Checking Users Entry Page. 
Minor Enhancement #6749: Additional asset_id Attribute for Form Submissions. 
Minor Enhancement #6773: New Keyword Condition Rule for Checking Site Referrer. 
Minor Enhancement #6774: More Detailed Lock Information on HIPO Herder Screen. 
Minor Enhancement #6779: Enhancements to the Recreate Link Tree System Script. 
Minor Enhancement #6791: Designs: Notification If Parse File Does Not Contain Design Area Tags. 
Minor Enhancement #6796: JS File Folder Enhancements. 
Minor Enhancement #6802: Refresh Local TRIM Records Cache. 

Core

Fixed Bug #6477: Spaces between MySource areas stripped.
Fixed Bug #6736: ^replace_keywords does not replace with eq operator. 
Fixed Bug #6742: Accessing metadata screen in the rollback mode throws fatal db error. 
Fixed Bug #6743: Asset Map fails in 4.18.2 on Oracle. 
Fixed Bug #6744: Regen Metadata scripts are not context aware. 
Fixed Bug #6745: Linking screen in EES/Edit+ on 4.18.2. 
Fixed Bug #6752: Can't reorder context IE8. 
Fixed Bug #6757: Paint layout's conditional keywords not getting evaluated correctly. 
Fixed Bug #6762: Cannot set image variety to Safe Edit status in Oracle system. 
Fixed Bug #6763: Referrer condition if true not working. 
Fixed Bug #6764: PHP 5.4 "failed to load external entity" error. 
Fixed Bug #6769: Java asset map insert link / binocular not working for java 1.7.0-51 update. 
Fixed Bug #6776: Backtrace file path - Undefined index: general.inc line 74 line 75. 
Fixed Bug #6778: Global date keywords do not work in type format of shadow assets. 
Fixed Bug #6782: %asset_lineage_linked% doesn't play nice with modifiers. 
Fixed Bug #6792: Twitter API now requires HTTPS. 
Fixed Bug #6798: REST asset not encoding "Append query string" value. 

CMS

Fixed Bug #6740: Form feed char "\f" (#xC) not filtered by "Save as XML" form action.
Fixed Bug #6797: Unable to create User Group Manager Page asset with metadata schema applied with default metadata field value (keywords) referencing the asset. 

Search

Fixed Bug #6732: Search Page searching email attribute of Simple Edit user.

Import Tools

Fixed Bug #6700: Asset builder doesn't export create form customisations.

Squid

Fixed Bug #6775: Upgrading causes errors when existing Squid purge trigger action runs.

Web Services

Fixed Bug #6688: JS api breaks when it parses the result json.
Fixed Bug #6747: JS Rest resource asset error "Invalid argument supplied for foreach()". 
Fixed Bug #6750: JS API getParents doesn't return the 1st parent, throws Unexpected end of input error.



VERSION 4.18.2

Featured Changes
===================================

New Global Keyword to Display the Current URL Protocol [ Feature Request #6664 ]
-----------------------------------------------------

A new global keyword has been added that will display the protocol of the current URL, either http or https.

%global_protocol%

This global keyword has been added in conjunction with a bug fix, where the WYSIWYG editor's Embed YouTube Video plugin was unable to output the video URL using the https protocol. This resulted in HTTPS sites not displaying this content. This has now been fixed along with the inclusion of this global keyword to display the correct protocol based on the current URL. 

New Trigger Action to Issue Preset Counter Numbers [ Feature Request #6698 ]
-----------------------------------------------------

A new Issue Counter Values trigger action has been added that will issue unique counter integers to a session variable name, when a trigger is fired. This session variable value can then be used in conjunction with a new Counter Number Issued trigger event to apply the issued integer within Squiz Matrix, for example, as a metadata field or asset attribute value.

The integers issued by this new trigger action can be configured to either increase or decrease by a value of 1, each time the action is fired.

The implementation possibilities for this new trigger action/event combo are varied. One such usage could be assigning member IDs to newly created user accounts via the Issue Counter Values trigger action; Once the counter value is issued, a second trigger (fired by the Counter Number Issued event) could apply the issued integer as a metadata value on the new user account asset. 

Cache Manager: New Accelerator Cache Expiry Options [ Feature Request #6710 ]
-----------------------------------------------------

Squiz Matrix's Cache Manager allows you to configure the caching settings within your system.

These caching settings include the Browser Cache Expiry field, which defines the length of time (in seconds) that a requested page will be cached within a browser. Once this time has lapsed, the page will expire.

Previously, this cache expiry setting was honoured by both browsers and accelerators (such as Squid). This meant, however, that if the Browser Cache Expiry field was set to, for example, 24 hours, both the browser and Squiz would cache the page for 24 hours each. This meant that a user could potentially see 48 hour old content.

This feature introduces a new Accelerator Cache Expiry field to set the individual expiry time for content in accelerator proxies.

The Accelerator Cache Expiry field can be found on the Details screen of the Cache Manager.

The value entered into this field will define the length of time that content is cached within a proxy accelerator. If this field is left empty, the s-maxage cache header attribute will not be sent and the accelerator's default expiry settings will be used.  

New Trigger Action to Remove a User From a User Group for Current Session [ Feature Request #6722 ]
-----------------------------------------------------

A new trigger action has been added to allow a user to be temporarily removed from a specified user group for the current login session. The Leave User Group for Session action allows you to select one or more user groups to temporarily remove the current user from, when the trigger is fired and its conditions are met.

This new action works in the opposite manner to the existing Join User Group for Session trigger action, which will dynamically link the current user to a User Group for the remainder of the login session. A new 'Remove user from previously joined session groups' field has also been added to this action to remove a user from any previously joined session groups, before joining new groups through this trigger action.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6524: Enhancements to the system_integrity_orphaned_assets.php Script.
Minor Enhancement #6581: Use curl_multi in HTTP Requests.
Minor Enhancement #6585: Rollback Management Script: Recommend Fix Duplicate Rollback Entries if an Error Occurs.
Minor Enhancement #6636: Performance Enhancement: LDAP User Log In.
Minor Enhancement #6639: Improved Execution Time of the Update Lookups HIPO Job.
Minor Enhancement #6640: Allow Keyword Value Trigger Condition to be Used Multiple Times.
Minor Enhancement #6660: Leaving Rollback Will Now Return Users Back to the Asset Where Rollback was Initiated.
Minor Enhancement #6665: LDAP Bridge: Option to Recursively Return all Parent Groups of an LDAP User or not.
Minor Enhancement #6708: asset_summary Keywords in Export to XML.
Minor Enhancement #6714: SOAP Data Source: Automatic Handling of the XML SOAP Response.
Minor Enhancement #6728: Asset Manager: Event Broadcast When Sort Order Changed.
Minor Enhancement #6734: Select Drop-Down Field Options Listed Alphabetically.

Core

Fixed Bug #6662: system_integrity_fix_char_encoding.php doesn't fix design parse file.
Fixed Bug #6683: mysource_files links don't work when @ is in the path.
Fixed Bug #6715: Embed Movie plugin returns JavaScript error when clicking OK.
Fixed Bug #6716: Remove unread messages popup in backend to improve performance.
Fixed Bug #6717: Empty line(s) in beginning the design file in the output.
Fixed Bug #6719: Naming bodycopy div to "I" will break the asset's interface in the backend in IE.
Fixed Bug #6724: Image variety URL breaks when in safe edit.
Fixed Bug #6725: SEI save metadata bug.
Fixed Bug #6727: Indent plugin for WYSYWIG doesn't work for IE.
Fixed Bug #6731: Reverting asset from Safe Edit status to Live causes HTML special chars in all asset's attributes to be escaped unexpectedly.
Fixed Bug #6737: Binoculars in user linking screen.

CMS

Fixed Bug #6701: listing page sort by metadata, group by metadata selection field using key or value of selection.
Fixed Bug #6702: Site Map show Icons prints unneeded JavaScript for each icon.
Fixed Bug #6706: search page when results is grouped, and group name matching search query is forced. 

LDAP

Fixed Bug #6695: User Common Name attribute can hide groups. 

Calendar

Fixed Bug #6699: Calendar Search Page not loading This Month's events for Dec.
Fixed Bug #6704: Upcoming calendar event doesn't pick up events for "today". 

Import Tools

Fixed Bug #6703: JS REST asset doesn't import from XML correctly. 

E-Commerce

Fixed Bug #6957: Checkout Page will not submit delivery method, without delivery keyword selector. 

Data

Fixed Bug #6694: Record Filter does not filter the value if the field of Record Set is Empty. 

SAML

Fixed Bug #6733: SAML account manager db error with replication servers. 

Modern Asset Map

Fixed Bug #6644: Modern asset map displaying unnecessary viewing X of XX asset.
Fixed Bug #6657: Asset tree steals focus on mouse over.
Fixed Bug #6676: If the asset map scrolls during a rectangular selection, assets at the other end of the selection get de-selected.
Fixed Bug #6696: Modern Asset Map intercepts keystrokes on WYSIWYG popups.
Fixed Bug #6697: JS Asset map right click list.
Fixed Bug #6709: Modern asset map not loading in IE8-10 due to Quirks mode.
Fixed Bug #6711: Modern Asset Map not loading for Simple Edit user in EES.


VERSION 4.18.1

Featured Changes
===================================

SOAP: Marketo Signature Authentication [ Feature Request #6584 ]
-----------------------------------------------------

SOAP assets within Squiz Matrix allow you to connect to a remote SOAP server via a variety of authentication methods, including basic HTTP authentication, WS-security username tokens and JSESSIONID cookies.

This feature introduces a new authentication type on SOAP assets in order to integrate with your Marketo service, allowing for the creation, retrieval and removal of entities and data stored within their system. 

The Marketo Signature authentication option can be configured in the Authentication Type field of your SOAP Connection Details section. This authentication type is available on the SOAP Data Source asset, as well as the Make SOAP Call form submission action, form step action and trigger action.

Selecting the Marketo Signature authentication option will display the Authentication Details fields allowing you to supply the access and secret keys for your Marketo connection.

This feature has been added to support Marketo integration within Squiz Matrix, providing all existing functionality and features. 

New JS and CSS File Folder Assets [ Feature Request #6668 ]
-----------------------------------------------------

This feature introduces two new assets to provide a platform for serving multiple JS and CSS files as a single, packaged file.

The JS File Folder and CSS File Folder assets allow you to create a single folder, specifying the individual file assets to attach beneath it. These linked files are then merged based the settings of the asset.

Files can be linked to both the JS and CSS File Folder assets on their Details screen. Files selected in this section will be NOTICE linked to the asset.

The Minification settings of the File Folder assets allow you to select how the linked files will be merged and whether the code will be minified. Both assets provide Squiz Matrix's Basic Minification method, as well as an option to Merge Without Minification.

In addition to these settings, the JS File Folder can utilise the Closure Compiler tool to merge and minify linked files, and create an associated JavaScript Source Map file (Source Map files can be viewed on the asset's Source Map Files screen).

A Regenerate File field allows you to regenerate the merged file, for example, if the content of a linked file has been modified.

The JS File Folder and CSS File Folder assets have been created to developed to provide best practice performance solutions for your systems, serving minified and well-optimised code.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6647: Asset Manager: Performance Enhancement on generateGetParentsQuery().
Minor Enhancement #6648: Apply Style Plugin CSS File Classes on Non-Bodycopy WYSIWYG Editors. 
Minor Enhancement #6674: Additional Workflow Keyword Replacements. 
Minor Enhancement #6680: PayPal Payflow Pro Gateway: New Option to Send Custom Merchant Reference.  
Minor Enhancement #6690: Enhancements to the system_move_update.php Script.   

Core

Fixed Bug #6497: Webpaths behave strangely when mixing extensions.
Fixed Bug #6504: Signature of JS_Api::createLink() is not compatible with Asset::createLink.
Fixed Bug #6606: Global keywords in _edit mode. 
Fixed Bug #6609: what's new page sorting. 
Fixed Bug #6618: Redis Cache handler bug. 
Fixed Bug #6621: hide_frames=1 no longer respected. 
Fixed Bug #6627: Multiple set metadata value trigger actions with same field ID cannot set different values. 
Fixed Bug #6633: Image Variety Trigger missing square option. 
Fixed Bug #6638: Form Section does not allow a question to be created. 
Fixed Bug #6642: getKeyFromValue of metadata Field select does not return the correct value. 
Fixed Bug #6649: Matrix insert link plugin adding the current url to the link in compatible mode on IE. 
Fixed Bug #6655: Use Default checkbox for Metadata Multiple Text fields errors if apostrophe in default value. 
Fixed Bug #6673: Permission issues when removing cron job since bug #6533 changes. 
Fixed Bug #6678: preview screen some JS errors. 
Fixed Bug #6689: keyword used in login design woudl cause fatal error. 

CMS

Fixed Bug #6626: Locking issues on forms with workflows applied.
Fixed Bug #6650: Previous button HTML is malformed on multi-page form. 

Calendar

Fixed Bug #6568: Rolling calendar doesnt handle February at the end of longer months.
Fixed Bug #6632: Upcoming Events not rendering the %event_list% keyword if there are no events. 
Fixed Bug #6686: Events ordering not consistant across diffenent days in the Calendar Page. 

Squid

Fixed Bug #6623: Upgrading to 4.16.3 or beyond causes errors when existing Squid purge trigger action runs. 

TRIM

Fixed Bug #6685: trim error could cause previously downloaded file to be deleted. 

SAML

Fixed Bug #6693: SAML Account Manager Parse Metadata XML produces broken PHP.

Modern Asset Map

Fixed Bug #6631: Scroll at edge of map.
Fixed Bug #6634: After dragging/moving an asset, clicking on another asset doesn't clear the popup menu. 
Fixed Bug #6644: Modern asset map displaying unecessary viewing X of XX asset. 
Fixed Bug #6656: locateAsset calls to Modern Asset Map are broken for shadow assets. 
Fixed Bug #6661: Restore Root in Modern Asset Map doesn't allow return to Root (#1) Folder when a custom root is set. 
Fixed Bug #6666: On Windows machines, scrollbar control can be interfered by the rectangular selection. 
Fixed Bug #6671: Asset link icon updated to the incorrect type in the JS asset map.




VERSION 4.18.0

Featured Changes
===================================

New Script to Fix Duplicate Rollback Entries [ Feature Request #6575 ]
-----------------------------------------------------

A new script has been added to Squiz Matrix to report and fix any overlapping (and thus duplicate) entries in the rollback table, determined by an entry's eff_to date value.

The system_integrity_fix_duplicate_rollback_entries.php script is found in the system's Scripts directory and takes the following parameters:

   -s <system_root> : the root directory of your Squiz Matrix system. 
   --show-records : specifies to show any overlapping rollback table entries found.
   --fix-table=<table_name> : fixes the overlapping rollback entries in the specified table ('all' to fix overlapping entries in all tables). 

Usage of this script is as follows:

$ php scripts/system_integrity_fix_duplicate_rollback_entries.php -s <SYSTEM_ROOT> --show-records --fix-table=all

IMPORTANT: You have selected the option to fix the duplicate rollback entries from the Rollback table "sq_rb_ast_attr_val"
This will remove all duplicate entries in the table(s) except the one with oldest "eff_from" date in the duplicate entries set.
Backing up db is recommended before running this script.
Are you sure you want to proceed (Y/n)?

Checking table sq_rb_ast ... [ OK ]
Checking table sq_rb_ast_lnk ... [OK]
Checking table sq_rb_shdw_ast_lnk ... [ OK ]
Checking table sq_rb_ast_lnk_tree ... [ OK ]
Checking table sq_rb_ast_attr_val ... 2 set(s) of overlapping entries found. 
------------------------------------
0 => array (
   "assetid" => "260",
   "attrid" => "3081",
   "contextid" => "0",
   "sq_eff_to" => "2013-06-18 10:26:28",
   "occ" => "2" 
),
1 => array (
   "assetid" => "260",
   "attrid" => "3081",
   "contextid" => "1",
   "sq_eff_to" => "2013-06-18 10:26:28",
   "occ" => "2" 
) 

------------------------------------
[ NOT OK ]
Fixing the rollback table sq_rb_ast_attr_val [ FIXED ] 

Checking table sq_rb_ast_attr_uniq_val ... [ OK ]
Checking table sq_rb_ast_url ... [ OK ]
Checking table sq_rb_ast_path ... [ OK ]
Checking table sq_rb_ast_lookup ... [ OK ]
Checking table sq_rb_ast_lookup_value ... [ OK ]
Checking table sq_rb_ast_lookup_remap ... [ OK ]
Checking table sq_rb_ast_perm ... [ OK ]
Checking table sq_rb_ast_edit_access ... [ OK ]
Checking table sq_rb_ast_mdata ... [ OK ]
Checking table sq_rb_ast_mdata_val ... [ OK ]
Checking table sq_rb_ast_mdata_dflt_val ... [ OK ]
Checking table sq_rb_ast_wflow ... [ OK ]
Checking table sq_rb_trig ... [ OK ]
Checking table sq_rb_ast_role ... [ OK ]
Checking table sq_rb_ctx_def ... [ OK ]
Checking table sq_rb_saml_lnk ... [ OK ]
Checking table sq_rb_cal_date_val ... [ OK ]

Customise Attribute Identifiers on Metadata Fields [ Feature Request #6607 ]
-----------------------------------------------------

When setting metadata within Squiz Matrix, frontend metadata of an asset will name and content attribute identifiers, to print the name of a metadata field, and its value on the asset.

<!-- Metadata Schema //-->

<!-- User Defined //-->
<meta name="Description" content="Squiz Matrix new features" />
<meta name="Subject" content="Blog" />
<meta name="Date" content="01/01/2013 10:39:20" />

With the recent advent of RDFa 1.1 and hybrid DTDs (eg. "HTML 4.01 Strict + RDFa 1.1"), and "HTML microdata" as proposed by the WHATWG version of HTML, it is now possible for META tags to have names identified by attributes other than name.

This feature introduces new fields on the Details screen of Metadata Field assets, allowing you to customise these attributes, as per these new developments.

The attribute values entered into these fields will determine the frontend metadata of your assets, as shown below: 

<meta itemprop="type" content="voice" />

By default, these attribute identifiers will be set to name and content.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6616: Session Expiry Rules Based on User Type.
Minor Enhancement #6576: Enable Compression Support in http_request.
Minor Enhancement #6571: Show REST Assets in Performance Mode.
Minor Enhancement #6533: Non-System Cron Jobs Purged From the System.

Core

Fixed Bug #6468: Image attribute descriptions unhelpful when used in drop-down selectors.
Fixed Bug #6528: Eluding dollar sign $ after image variety link can break other links.
Fixed Bug #6566: HTTP Request attribute, Forward user information and LDAP Users.
Fixed Bug #6573: Matrix Search frontend PHP warning messages.
Fixed Bug #6578: Cloning asset from the frontend might unexpectedly "filter" the asset attribute.
Fixed Bug #6582: Arithmetic keyword modifier doesn't work correctly on text with comma.
Fixed Bug #6587: Performance mode used by more than one person.
Fixed Bug #6591: Event broadcasted by non-existent asset will throw fatal error.
Fixed Bug #6593: Attempting to put images into safe edit causes fatal error.
Fixed Bug #6598: Metadata date fields not selectable in asset map when adding to triggers.
Fixed Bug #6599: system_move_update.php generally runs out of memory.
Fixed Bug #6601: File asset keyword %asset_file_type% not included in "-- Insert Keyword --" drop-down.
Fixed Bug #6603: JS API response includes User's password in plain text.
Fixed Bug #6604: remap_manager.inc needs to handle empty HTTP_HOST.
Fixed Bug #6605: Trigger fails to delete a "Deny" permission.
Fixed Bug #6613: Clone HIPO job not showing the clone confirmation window.


CMS

Fixed Bug #6521: Email validation does not work with account manager additional create location.

Search

Fixed Bug #6586: Search not returning results for search terms with 'silent chars' in Oracle.

Calendar

Fixed Bug #6592: Various URL keywords not working on Calendar Search Page.

Google Maps

Fixed Bug #6612: Google Maps not using structured root node selectors.

TRIM

Fixed Bug #6590: TRIM: do not try to automatically sync records when no record is stored.

Web Services

Fixed Bug #6594: REST oauth 1.0 session asset couldn't get access token from Twitter.
Fixed Bug #6615: Inconsistency between direct acquireLock call and the one made on batchRequest.



VERSION 4.18.0 RC1

Featured Changes
===================================

Custom Form: New Option to Specify Submission URL [ Feature Request #6458 ]
-----------------------------------------------------

A new option added to the Custom Form Page asset to set the submission URL of the form. The options available on the Form Submission URL field include The Current URL or This Page's Own URL.

When the The Current URL option is selected, the form will submit to the current URL that the user is visiting. On the other hand, when the This Page's Own URL option is selected, the form will submit to the Custom Form Page's URL.

This option is useful when the form is nested in another page and it is required to submit to the original form's URL, instead of the current nesting page's URL.

Show If Design Area: New 'Has Children' Condition [ Feature Request #6498 ]
-----------------------------------------------------

The Show If design area allows you to display content within the design of your assets using conditional variables, for example, if the user is logged in, a link to a simple edit interface could be displayed.

This feature introduces a new condition variable, allowing you to show content if the asset has child assets of a specified type code.

The has_children variable can be used to display content if either type 1, 2, 3 or notice linked children are present. An example is displayed below; the condition will be met if the asset has children of either type 1, 2 or notice (8) linked. 

<MySource_AREA id_name="children_or_peers" design_area="show_if">
 <MySource_SET name="condition" value="has_children" />
 <MySource_SET name="condition_types" value="page_standard, folder" />
 <MySource_SET name="condition_link_types" value="1,2,8 />

 <MySource_THEN>
HAS CHILDREN
 </MySource_THEN>
 <MySource_ELSE>
NO CHILDREN
 </MySource_ELSE>
</MySource_AREA> 

This feature was kindly contributed by Keith Brown (The University of Edinburgh).

Customise the Layout of the Account Manager's Logged-In User Details Form [ Feature Request #6509 ]
-----------------------------------------------------

Squiz Matrix's Account Manager Page allows public users to create user accounts on your system, as well as allowing existing users to edit the details of their accounts. 

During the configuration process of the Account Manager, you can specify to customise the layout of the Create New Account form for public users, rather than use the default layout.

Previously, however, this option was not also available for the User Details form for logged-in users, which allowed them to edit their account details.

This feature introduces a new option to the Details screen of the Acount Manager Page, allowing you to customise the User Details form for logged-in users. 

When the Logged in Bodycopy Customisation setting is enabled, a new layout asset will be added under the Account Manager in the asset map. You can use the simple edit keyword replacements available for user account assets on this layout bodycopy to customise the look and feel of the form.

New Script to Clean Invalid Remaps [ Feature Request #6515 ]
-----------------------------------------------------

A new script has been added to help clean up invalid remaps. These may include useless remaps that lead to non-existent pages or infinite redirect loops.

The usage of the system_integrity_invalid_remaps.php script is as follows:

$ php system_integrity_invalid_remaps.php system=<SYSTEM_ROOT>  [--expired_remaps] [--invalid_old_url] [--redirect_chain]  [--invalid_new_url] [--execute]  

This script takes the following optional arguments:

* [--expired_remaps] : Identify remaps that have expired.
* [--invalid_old_url] : Identify remaps that have old, invalid URLs that match to existing assets.
* [--invalid_new_url] : Identify remaps with invalid new, invalid URLs, for example, redirecting to an non-existent asset URL.
* [--redirect_chain] : Identify redirect chains, shortening remaps if execute is specified.
* [--execute] : Clean the invalid remaps found in above reports. 

Specify Service Address on SOAP Assets [ Feature Request #6525 ]
-----------------------------------------------------

Previously, SOAP assets within Squiz Matrix (including trigger actions, form actions and data sources) would only use the default SOAP service address and binding, as specified in the WSDL file.

This feature introduces a new drop-down field on these assets, allowing you to specify the service address to send requests to.

Workflow Schema: New Notification Options [ Feature Request #6530 ]
-----------------------------------------------------

Squiz Matrix's Workflow Schema assets provide options to notify the initiator of the workflow process on an asset when the process is completed and the asset changes have been made live.

This feature introduces two new options to the Details screen of the Workflow Schema asset, allowing you to specify to notify both the initiator of the workflow process and the workflow approvers after changes have been approved. 

When the Notify Starter After Approval and Notify Approvers After Approval settings are enabled, the configured Workflow Approval Message custom message will be sent to these users when the changes made to an asset are approved.
By default, the Notify Starter option is disabled, while the Notify Approvers option is enabled, following the existing notification behaviour within Squiz Matrix.

New User Account Password History Check [ Feature Request #6531 ]
-----------------------------------------------------

The system's Password Rules Configuration screen allows you to configure rules for the passwords of user accounts within your system. This includes minimum length and specific character rules, for example, 'must include numbers'.

This feature adds a new setting on this screen to specify the number of unique passwords used on a user account before reusing an old password. 

The Password History Enforcement setting allows you to enable new passwords to be checked against the password history of a user account. If the new password is not unique when compared to a specified number of previous password (e.g. the last five passwords used), it will not be accepted.

By default, this setting is disabled, meaning that new passwords won't be checked against previously used passwords.

This feature has been added to improve security on your system by allowing you to enforce policies to prevent the reuse of old passwords, reducing the chance of user accounts being compromised.

Promotional Code Asset: Condition Variables [ Feature Request #6534 ]
-----------------------------------------------------

The E-Commerce package's Promotional Code asset allows you to create rule-based promotional codes for your customers to receive discounts on items within your store.

These discounts are determined by promotional rules, either using a Fixed Amount or Percentage discount type.

This feature introduces new promotional conditions to further configure the promotional codes available within your e-commerce store and specify when a discount should be applied.

These new conditions can be configured in the Promotional Conditions section of the Details screen of the promotional code asset. 

This section allows you to configure a Compare Value condition on the Promotional Code asset, allowing you to compare two values in order to meet the condition, based on a variety of comparison types.

You can use global keywords in the Source and Compare value fields, for example, to compare the metadata of the e-commerce user to a specified value.

So, let's say you created a special 20% discount promotional code, which you want to make available to all Australian users of your store. You can achieve this by creating a promotional condition, using the %globals_user_metadata_address% keyword replacement as the source value and Australia as the comparison, with the comparison type as String - Contains.

This example condition would check the address metadata of customers' user accounts, validating the promotional code if their address contained the string Australia. As a result, users from Australia, who entered this code, would have the 20% discount validated on their order.

This feature has been added to allow you to provide greater flexibility when configuring promotional discounts on your store.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #4067: E-Commerce Default Delivery Method to Remember Form Answers.
Minor Enhancement #6447: TRIM Saved Search: Login Screen on File Download URLs for Users Without Read Access.
Minor Enhancement #6501: New Field to Specify the Name of Downloaded Files on a TRIM Saved Search . 
Minor Enhancement #6516: Improved Error Handling on the TRIM Saved Search asset.
Minor Enhancement #6519: Promotional Code Asset Enhancements.
Minor Enhancement #6529: New Force Update Button on the TRIM Saved Search.
Minor Enhancement #6535: Customise the Email Footer for Emails Sent by Squiz Matrix.
Minor Enhancement #6542: JavaScript API: Sync Context Enhancements. 
Minor Enhancement #6563: Asset Created Trigger Event Support for Thesaurus Term Assets. 
Minor Enhancement #6569: Enhancements to the striphtml Keyword Modifier to Specify Allowed Tags. 

Core

Fixed Bug #6329: Data Records allowed as children of Standard Pages only via Edit+, not Admin.
Fixed Bug #6341: setMetadataAllFields returns invalid JSON on errors.
Fixed Bug #6495: Single Page A-Z Listing "Page Link Format" doesn't work.
Fixed Bug #6507: If asset is deep in the asset tree and also linked to many parents, one might run into ORA-01795 error.
Fixed Bug #6508: Send Submission Log Cron Job doesn't clean up.
Fixed Bug #6510: minor problem when cron job script is given path to Matrix as argument.
Fixed Bug #6511: On IE the links to assets within Matrix get corrupted on frontend.
Fixed Bug #6512: Spell Checker removing links from the content.
Fixed Bug #6518: Rest resource asset won't pass additional GET var from nested content.
Fixed Bug #6523: Specific Cache Management Settings does not handle situations where isUnderRootNodes returns  FALSE.
Fixed Bug #6526: viewing form with _nocache suffix would not submit.
Fixed Bug #6536: Metadata fields defaulting to %metadata_field_<name>% do not trigger update when referenced field updates.
Fixed Bug #6539: minor issue with Force Secure URL redirecting.
Fixed Bug #6541: Bodycopy div with type Image does not pick up caption for image variety.
Fixed Bug #6544: metadata in context cancelling "use default" on default context results DB errors duplicate key.
Fixed Bug #6545: Keyword replacements popup links to system static URL.
Fixed Bug #6548: Having \' in a matrix URL throws a DB error.
Fixed Bug #6549: Fatal Error when Redis cache connected to a slave.
Fixed Bug #6553: Custom form and safe editing do not play well.
Fixed Bug #6555: Global SQ_PAINT_LAYOUT_ID is not reset correctly.
Fixed Bug #6556: WYSIWYG insert link popup displays absolute links incorrectly.
Fixed Bug #6557: DB datasource connection using complete DSN to non pgsql data fail.
Fixed Bug #6560: %preview_url% not getting replaced in the default workflow start email.
Fixed Bug #6561: Preview screen not picking the correct URL for the dependant asset.
Fixed Bug #6564: Cannot set dynamic parameters value without setting the tag id in the Set Tag trigger action. 

CMS

Fixed Bug #6506: AssetCreated event still gets triggered when New reCAPTCHA fails in asset builder.
Fixed Bug #6513: Send Submissions Cron Job attachment has no extension.
Fixed Bug #6550: Remote Content page nested in the login design throws fatal error.
Fixed Bug #6554: Single square bracket ([ or ]) in First Name or Last Name of System Administrator causes warnings on changing password.  

Calendar

Fixed Bug #6520: Upcoming events list gets lists single and recurring events in wrong order.
Fixed Bug #6538: Calendar Events Search Page not listing events in Safe Edit.
Fixed Bug #6543: Calendar instance keywords don't work properly with replace_keyword. 

Data

Fixed Bug #6558: RSS Data Source multiple fields reducing to single entity. 

Google Maps

Fixed Bug #6547: Google Maps not rendering basic keywords. 

Web Services

Fixed Bug #6505: REST resource option to 'Allow Keyword replacement' can stop all the keywords from replacing.



VERSION 4.12.0 RC1

Featured Changes
===================================

New Custom Change Password Design [ Feature Request #5788 ]
-----------------------------------------------------

When a user account is placed up for review within Squiz Matrix, users will be prompted to change their current Squiz Matrix password on a Change Password screen.

Previously, the design of this screen was not configurable. This feature adds new functionality, allowing you to set a custom Change Password design.

The System Defined Password Change Design options can be found on the Settings screen of an asset. These tools work in a similar manner to the System Defined Login Design, enabling you to override the default design of the Change Password screen for the asset, automatically cascaded to any children. 

When users log on to the system and require a password change, the Change Password screen will use the custom design, specified in the System Defined Password Change Design settings.

This feature has been added to complement the other custom log-in designs within Squiz Matrix.

New Trigger Action to Schedule a Bulkmail Job [ Feature Request #5853 ]
-----------------------------------------------------

Along with the aforementioned Bulkmail Job Scheduling feature, a new trigger action has also been added to Squiz Matrix to schedule a Job to be run when a trigger is fired.

The Schedule Bulkmail Job trigger action can be configured to override the default settings of a selected Bulkmail Job, allowing you to instead send the asset that fired the trigger (or an asset of your selection), as well as selecting the recipients of the job.  

You are also able to enable the Subscription Filter on the selected Bulkmail Job, specifying whether to use the Bulkmail Job's set subscription filters or to override these filters. This is a new feature to the Bulkmail Package which is outlined in more detail below.

This feature has been added to provide users with additional implementation options for their Bulkmail set ups. 

Bulkmail Job: New Scheduling Settings Screen [ Feature Request #5854 ]
-----------------------------------------------------

Squiz Matrix's Bulkmail Job asset defines the content and recipients of a bulkmail configuration. Previously, for a Bulkmail Job to be run, users would have to manually change the asset's status or use the schedule_bulkmail_job.php script.

This feature adds new settings to the Bulkmail Job asset, allowing you to enable and configure automatic scheduling of your jobs.

The Bulkmail Job Scheduling screen allows you to enable scheduling for the job and provide a start date. You can then specify the frequency of how often the job should be run (either hourly, daily, weekly, monthly, yearly or not at all).  

Once enabled, the Bulkmail Job will be queued to run at the specified start date and time, and then continue to run subsequently at the specified frequency.

This feature has been added to provide users with effortless scheduling of the jobs within their bulkmail configurations.

Bulkmail Job: New User Subscription Screen [ Feature Request #5856 ]
-----------------------------------------------------

We have one more new screen that has now been added to the Bulkmail Job asset, this time allowing you to configure user subscriptions for the jobs within your bulkmail configuration.

The new User Subscriptions screen allows you to enable user subscriptions for your Bulkmail Job. When subscriptions are enabled, categories can be created, comprised of Asset Metadata Field rules to match a user asset's metadata against a specified value. 

User Subscriptions utilise the use of a Search Page asset to query a selection of assets using the matched subscription metadata value. Assets returned on these searches will then be sent (individually) to the users within the corresponding subscription category.

For example, you could create a location subscription category, matching metadata values such as Sydney and Melbourne. The Search Page would search these queries, and return a selection of articles for these users, sending them content appropriate to their location.

Call REST Resource Completion Action on E-Commerce Checkout Page [ Feature Request #5865 ]
-----------------------------------------------------

The Custom Form Page's Call REST Resource submission action is used to communicate with a web service exposing itself using Representational State Transfer (REST) methods, upon submission of a form.

This functionality has been extended to the E-Commerce package's Checkout Page asset via a new Call REST Resource completion action that will call a REST resource server after the checkout process has successfully been completed on an e-commerce order.  

The Call REST Resource action can be configured on a new Checkout Completion Actions screen of a Checkout Page asset. This screen is similar to the Submission Actions screen of a Custom Form.

Like the form submission action, the Call REST Resource allows you to configure the HTTP request to the REST web server, passing details of the e-commerce order within the request body content (incl. the order summary, the delivery form responses and the individual item details).

The completion action also allows you to set custom parameters for Product asset types on a new Order Array keyword, as well as configure the Error Response Notification Email for non-2xx responses from the REST server.

REST Resource JavaScript: V8 JS Engine [ Feature Request #5869 ]
-----------------------------------------------------

Current the REST Resource JavaScript asset only allows you to use the SpiderMonkey JS engine to execute JS commands. This feature introduces the option of using the V8 engine, if the PECL V8js extension installed.

Additional SAML Options for User Linking and Creation [ Feature Request #5873 ]
-----------------------------------------------------

In this month's releases of Matrix, we unveiled federated access management single sign-on and identity verification through our new SAML Account Manager asset. This feature adds further options to this asset, allowing you to set the linking settings for users (automated in current release), as well as allow Matrix to automatically create linked local users during the authentication process.

The Allow Linking to Existing Users and Automatic Creation options are available on the Details screen of the SAML Account Manager. 

By default, linking to existing users is enabled. This means that is a user is logged in to Squiz Matrix and their account is SAML authenticated, the SAML Account Manager will prompt the user to link their accounts, if they have not yet been. This linking allows for federated access to the system, automatically signing the user into their account as part of the SAML authentication process.

The Automatic Creation option handles the creation of linked local users when a user is not logged into Matrix. By default, this is a manual process, with users being allowed to create a new user account during SAML authentication. Enabling this option will automate this creation, skipping this manual process.

This feature has been added to provide users with more options for configuring SAML federated access management on their systems.

OAuth Session: Redirect to Authorise, Store Access Token [ Feature Request #5874 ]
-----------------------------------------------------

Squiz Matrix's REST Resource OAuth assets allow you to define the parameters for OAuth authentication when communicating with an OAuth secure REST web service. This feature introduces additional parameters, allowing you to redirect users to an external authorisation page and providing the option of permanently store the access token.

The Redirect to Authorise and Store Access Token options are available on the Details screen of REST Resource OAuth assets. 

By default, neither of these options will be enabled.

Enabling the Redirect to Authorise option will redirect a user to the service provider's authorisation page to authorise the request token instead of simply nesting the authorisation form within Squiz Matrix.

The Store Access Token option allows you to permanently store the access token. By default, this token is stored in the session, meaning that when a user logs out, the token will be lost. Permanently storing this token will prevent users from having to reauthorise in each user session. Disabling this option will remove any permanently stored tokens.

These features have been added to bring Squiz Matrix OAuth more in line with established authentication standards. 

New Keyword to Print the ID of a Paint Layout on an Asset [ Feature Request #5878 ]
-----------------------------------------------------

A new keyword replacement has been added to Squiz Matrix to print the asset ID of the paint layout on an asset.

%asset_paint_layout_id% 

This keyword will print the asset ID of the Paint layout applicable for the asset on the current URL, whether asset-based, URL-based or user-defined.

This keyword can be used in conjunction with the as_asset keyword modifier which dynamically supplies an asset ID (in this case, of a Paint Layout) on a set asset_keyword. This will allow users to expose the properties and attributes of a Paint Layout within an asset's content.

%asset_paint_layout_id^as_asset:asset_name% 

The above keyword format, for example, would print the name of the asset's Paint Layout.

New Context Functions on JavaScript API [ Feature Request #5891 ]
-----------------------------------------------------

Five new functions have been added to the JavaScript API for retrieving and setting context information.

	- getAlternateContext() : retrieves the alternate context applicable to current situation where Squiz Matrix will go through each context and evaluate based on the conditions defined in them.
	- getCurrentContext() : retrieves the current context active on the system.
	- getAllContexts() : retrieves all contexts defined in the system.
	- setContext() : sets a context via the API.
	- restoreContext() : restores the context to what it was previously set to. Should be used in conjunction with setContext().

Performance Mode Enhancements [ Feature Request #5910 ]
-----------------------------------------------------

The following enhancements have been made to Squiz Matrix's Performance Mode:

	- Performance mode will now display the time spent on queries, together with the number of queries.
	- Fixed issue where some queries (those called with getXX() style functions) were being repeatedly counted.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5728: Improved Error Handling for Invalid Paths on Installation Step Scripts.
Minor Enhancement #5730: Rollback Truncation on Automatic System Upgrade.
Minor Enhancement #5845: Asset Builder Selectable Create Location Enhancements.
Minor Enhancement #5852: Memcache Session Handler Support on Site Network Assets.
Minor Enhancement #5861: Improved Error Handling for Malformed PDF Uploads.
Minor Enhancement #5875: Update Twitter Status Action Upgraded to Support Twitter API 1.1.
Minor Enhancement #5881: New Report Mode on the system_integrity_fix_char_encoding.php Script.
Minor Enhancement #5888: Remote Content Asset URL Tunnelling Option Warning.
Minor Enhancement #5889: New JS API Function to Return Metadata Schema Info. 
Minor Enhancement #5907: Enhancements to the system_integrity_fix_char_encoding.php Script. 
Minor Enhancement #5913: Interface to Configure the Related Metadata Field's is_contextable Option. 

Core

Fixed Bug #5828: The reindexSearchIndex.php script consumes too much memory. 
Fixed Bug #5833: Can't download File Assets over HTTPS using IE7 and IE8.
Fixed Bug #5844: matrixsqlclient breaks terminal. 
Fixed Bug #5871: Matrix emailing the workflow initiator from previous workflow process when asset pushed to Live.
Fixed Bug #5876: Issue with Metadata values when Deja Vu enabled. 
Fixed Bug #5894: import_file.php script errors.
Fixed Bug #5895: Cancel Safe Edit status / clone asset via JS API with filter frontend user option turned on does unnecessarily escape HTML to entities.  
Fixed Bug #5896: SQ_CONF_REDIRECT_URL_WITH_TRAILING_SLASH redirects infinitely for a ROOT URL which is not listed main.inc.
Fixed Bug #5897: Getting count of internal messages does an unnecessary join.
Fixed Bug #5898: Viewing an inbox - improvements.
Fixed Bug #5904: Custom Form current_page_content keyword doesn't do JS frontend validation.

CMS

Fixed Bug #5901: Setting Form Submission asset LIVE can result in loss of all the answers.

Search

Fixed Bug #5864: Using special characters in Oracle Search generates unescaped characters in file names.

LDAP

Fixed Bug #5882: Unable to acquire locks on 'Inbox' of LDAP user with \, in CN.

Calendar

Fixed Bug #5866: Events search not sorting when sorting by the asset attribute value.
Fixed Bug #5893: Run Level not restored failing to save the attributes of calendar event modification.

Data

Fixed Bug #5902: RSS Data Source timeout error for some feeds.

Web Services

Fixed Bug #5877: SOAP Server asset sends proper HTTP authentication header.
Fixed Bug #5883: Oath and POST REST call problem.
Fixed Bug #5884: JS API calls to getAttributes on div content assets that contain keywords get evaluated.
Fixed Bug #5890: JS API throws "Unable to get value of the property '0': object is null or undefined".




VERSION 4.8.0 RC1

Featured Changes
===================================


Cache Manager: Additional Send Cacheable Header Settings [ Feature Request #5409 ]
-----------------------------------------------------

Previously, Squiz Matrix did not send cacheable headers for SSL encrypted requests.

This feature addresses this issue by adding new settings to the Cache Manager's Send Cacheable Header screen, allowing you to specify the protocol when cacheable headers will be sent (HTTP, HTTPS or both). Additional options allow you to configure the cache-control level for both HTTP and HTTPS protocols.

Asset Logs Screen: Internal Messages Performance Enhancement[ Feature Request #5414 ]
-----------------------------------------------------

Previously, loading on the Asset Logs screen could be potentially slow on systems containing large numbers of internal messages. This feature refines the process of retrieving the list of valid asset types and the saving of internal messages, to improve the performance of the Asset Logs screen.

Online Quiz Interactive Mode [ Feature Request #5456 ]
-----------------------------------------------------

A new Interactive Mode has been added to the Online Quiz asset. This mode transforms the regular listed quiz format into a one question per page format, with the option of allowing users to retry incorrectly answered questions.

Interactive Mode is enabled via a new field on the Details screen of the Online Quiz asset.

Enabling Interactive Mode will display the Question Pooling settings. These settings allow you to select the root node(s) to extract the multiple-choice questions from, as well as set the number of retries available to users for each question.

Interactive Mode utilises a new feedback page on completion of each question. Response feedback can be specified for each response on the Details screen of an Online Quiz Multiple-Choice Question.

When a user answers a question on the form, the Online Quiz will display whether or not the user selected the correct answer and present any feedback that has been configured. If the user has given an incorrect answer, they will able to retry the question, with another selected from the question pool and presented to them.

Listing item classes are allocated for each option on the feedback form, as well as span tags for the response feedback. These can be used to stylise (CSS etc.) the feedback information and listed options, for example, a tick or cross for the option the user has selected.

New keyword replacements have been added to format the layout of the Online Quiz in Interactive Mode:

	- %interactive_question_number%
	- %interactive_question_note%
	- %interactive_question_text%
	- %interactive_question_response_form%
	- %interactive_button% 

In addition to these changes, a new scoring system has been implemented for the Online Quiz. Scores will now be stored in the submission assets of the Online Quiz.

You are also able to specify the format of the %quiz_score% keyword replacement, used in the submission logs, and the Thank You and Page Contents bodycopies. This format is configured on a new Score Format field on the Details screen of the Online Quiz asset. 

User IP Forwarding on http_request Attributes [ Feature Request #5479 ]
-----------------------------------------------------

This feature introduces the additional option of User IP forwarding on the HTTP request of REST Resource assets (incl. the Call REST Resource Trigger and Form Submission actions).

An additional "Append Query String to the Request URL" option is also available, allowing you to append the query variables passed to the Squiz Matrix URL on the HTTP request.

Brand New: Decision Tree Asset [ Feature Request #5494 ]
-----------------------------------------------------

A new Decision Tree asset has been developed for Squiz Matrix, leading users through a dynamic series of questions and displaying a final result based on the responses given. By engaging your users through an interactive decision process, the Decision Tree asset allows you to provide information and content that caters specifically on an individual user basis.

The Decision Tree asset is essentially comprised of:

	- Questions: the questions your users will answer on the decision tree. Questions can be formatted as either select or numeric question types and are similar in configuration to existing questions in form assets.
	- Results: result bodycopies are created to display to users based on their answers. 
	- Answer Destinations: response-based destinations for questions on your Decision Tree. An answer destination can be either another question or a result bodycopy. This allows you to cater the questions and results displayed specifically based on the responses your users give.

Decision Tree assets can also implement a points-based system where point values are accumulated based on the responses given. Response bodycopies can then be allocated a points range and are dynamically displayed based on the accumulation of points once users reach a question that does not have an allocated answer destination (ie. the end of the Decision Tree).

A number of new keyword replacements are available when formatting the content of the Decision Tree asset. These include:

Page Contents Bodycopy:

	- %decision_tree_contents%
	- %reset_button%

Decision Tree Question Bodycopy:

	- %question_title%
	- %question_field%
	- %question_note%
	- %accumulated_points%
	- %question_button% (numeric only)

Result Bodycopy:
	
	- %accumulated_points%

Additionally, question and result bodycopies on the Decision Tree are wrapped with division tags and classes for easy design implementation and CSS styling.

The introduction of this new Decision Tree asset aims to provide Matrix users with an alternative to complex graphs and diagrams which can be confusing to site users. The interactive decision process allows you to present information tailored specific to users in a simple and accessible manner.

2-Legged OAuth Authentication Available on REST Resource Assets [ Feature Request #5497 ]
-----------------------------------------------------

This feature introduces 2-legged OAuth authentication on the REST Resource assets, in addition to the existing 3-legged OAuth.

2-legged OAuth, allows users to simplify the authentication procedure by eliminating the user authorisation process of 3-legged OAuth, establishing a direct client-server scenario.

This new authentication method is available through a new "REST Resource OAuth 2 Legged" asset. The OAuth parameters available on this asset include the Consumer Key, Secret and Signature Method (HMAC-SHA1 or PLAINTEXT).

Update Link Trigger Action [ Feature Request #5511 ]
-----------------------------------------------------

Trigger actions allow you to specify tasks that will be performed when a fired trigger meets a specified set of conditions. Squiz Matrix boasts an extensive array of trigger actions that are available, from creating new assets to updating your status on twitter.

This feature introduces a brand new trigger action to update the type and value of a specified link. 

The Update Link trigger action allows you to update a single link. This link can be specified by link ID or, alternatively, you can identify attributes to match a link on the firing asset, including the link type and value, the side of the link to look on (parent or child) and the asset type of the linked asset.

This trigger action has been added to strengthen the functionality of the Squiz Matrix trigger system and expand on the trigger set-ups available to users.

Recurring Calendar Event Frequency Threshold Global Preference [ Feature Request #5515 ]
-----------------------------------------------------

A new Global Preference has been added to limit the frequency that Recurring Calendar Events appear on Upcoming Events List and Event Search Page assets.

This is configured by an Event Frequency Threshold option, that allows you to set a minimum threshold (in days) for Recurring Calendar Events. If the frequency of the Calendar Event falls within this threshold, the event will only appear once on the listing.

WYSIWYG Insert Link Tool: Direct Links to Asset External Target URLs [ Feature Request #5517 ]
-----------------------------------------------------

The WYSIWYG's Insert Link tool allows you to insert a hyperlink to an external site or an internal asset. Previously, however, this tool, when creating links to Link and Redirect Page assets, would create a link directly to that asset (e.g. "./?a=123").

This features introduces new functionality that allows you to link directly to the target URLs of Link and Redirect Page assets.

A new Asset Type field has been added to the Insert Link tool. This field allows you to specify whether the link is to a Link or Redirect Page asset or, if not, any other asset.

When a user selects ether the Link Asset or Redirect Page Asset options, only assets of those types will be able to be selected in the Select Asset field. Once an asset is selected, and a global keyword replacement will be automatically printed in the Link field, linking directly to the target URL of the asset, as follows: 

	- %globals_asset_attribute_link_url:123%
	- %globals_asset_attribute_redirect_url:123%  

This feature has been added to aid editors and simply the process of linking to external urls on Matrix assets.

Load Balancing "Read" Database Connection Support [ Feature Request #5541 ]
-----------------------------------------------------

This feature introduces load balancing when distributing connections to multiple database servers, enabling support of multiple 'read' databases.

Databases are configured in the system's db.inc file and can be specified weight and timeout values to des gnat when/how the system will make a connection to these servers. The use of multiple 'read' databases is expected to significantly improve performance on complex systems that experience issues with a single connection setup.

Please note that modification of the db.inc file should only be performed by a system administrator.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5401: 12 Hour Time Option on Custom Form's Date/Time Question Type.
Minor Enhancement #5408: Asset Content Keywords on Listed Bodycopy DIVs.
Minor Enhancement #5419: Clear Squid Cache Tool Won't Run When Not Correctly Configured.
Minor Enhancement #5434: Connection Status and Error Information on a DB Data Source.
Minor Enhancement #5483: Logs Screen: Select Multiple Log Types to View. 
Minor Enhancement #5488: Specify Triggers to Execute on the Trigger Manager's Batching Screen.
Minor Enhancement #5498: Remap Manager: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5503: Metadata Select Field: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5504: Bulkmail Import User Tool: Option to Ignore Headers in Imported CSV.
Minor Enhancement #5514: Purge Trash Performance Enhancement.


Core

Fixed Bug #5051: WYSIWYG converts HTML/XML entities into characters.
Fixed Bug #5418: Combine curl/http_client requests into one library/function.
Fixed Bug #5461: Re-import content from data/files improvements.
Fixed Bug #5485: IE8 WYSIWYG quotation marks missing from attributes.
Fixed Bug #5486: Trigger Condition to check asset treeID fails with fatal error.
Fixed Bug #5499: Links Report CSV Export File Broken.
Fixed Bug #5501: Cannot save selected asset in Asset Finder in File Upload question; Link Manager.
Fixed Bug #5505: Resize of Image Insert window prompts asset tree pane resize to full window width.
Fixed Bug #5507: CSS Design File asset ignores permission.
Fixed Bug #5508: System design assets don't regenerate Design files.
Fixed Bug #5513: Javascript date picker in JS_Calendar class not working in Firefox.
Fixed Bug #5520: Paint Layout conditional keywords don't work as expected with Condition Keyword Regexp.
Fixed Bug #5530: Undefined index on Workflow screen.

CMS

Fixed Bug #5509: Account Manager User asset web path conflict.
Fixed Bug #5518: CAPTCHA settings conflict.

Calendar

Fixed Bug #5459: Upcoming Events list displays multiple results for Single Calendar Events that run for more than one day.

Web Services

Fixed Bug #5522: GetAsset method doesn't return valid XML on all Assets.
Fixed Bug #5536: SOAP API's GetMetadataFieldValues Function, if empty field names are passed, doesn't return all values.

LDAP

Fixed Bug #5519: LDAP User sorting under LDAP Groups not working.
Fixed Bug #5524: LDAP attributes missing on User Details screen.


VERSION 4.6.0 RC1

Featured Changes
===================================


Remove Trailing Slash Off Requested URLs and Redirect [ Feature Request #5138 ]
-----------------------------------------------------

Within Matrix, a URL with or without a trailing slash will render the same content. As the Cache Manager treats every URL uniquely, however, Matrix would previously end up caching both of these URLs, resulting in two separate cache entries for the same content.

This feature strips the trailing slash off such front-end requested URLs and redirect them, resulting in just one cache entry for the URL content.

Please note that this feature does not apply to root URLs due to the possibility of apache being configured to append the trailing slash. 

Global Preference to Restrict Assets Created Under Specified Sites as Type 2 Linked [ Feature Request #5161 ]
-----------------------------------------------------

The new 'Child Creation Type 2 Link Restriction' global preference allows users to specify site assets to restrict newly created children to TYPE 2 links only. This means that any newly created assets under these sites (at any depth) will only be able to be created as TYPE 2 linked assets.

The link type of these assets can still be changed after asset creation via the asset's Linking screen.


New Script to Evaluate and Fix Files in the Public Data Directory [ Feature Request #5171 ]
-----------------------------------------------------

Matrix's public data directory houses File assets on the Matrix system that are publicly accessible (live with public read access). However, in some cases this directory may be missing files or contain old or private files due to file system permission problems and other issues.

This feature introduces the system_integrity_fix_public_files.php script. When run, this script will update any out-of-date files on the public data directory, create any files that are missing from the directory and remove any files that are private and should not be in the directory.

Usage of this script is as follows:

$ php system_integrity_fix_public_files.php SYSTEM_ROOT ROOT_ID 

System Integrity Clean Invalid Links Script [ Feature Request #5175 ]
-----------------------------------------------------

Squiz Matrix's system_integrity_orphaned_assets.php script finds and links orphaned assets underneath a specified asset ID. It also takes care of invalid links, where the major ID in a link is a missing asset; it does not, however, cater for when the child minor ID is missing while the major ID still exists.

This feature introduces the system_integrity_invalid_links.php script. This script will remove significant links where one or both sides of a link does not exist. This script will also report on the number of orphaned assets in the system and may recommend running the system_integrity_orphaned_assets.php script, upon its completion.

New Keyword Modifier to Apply XSLT to XML Content [ Feature Request #5183 ]
-----------------------------------------------------

Keyword modifiers allow you to modify keyword replacements to further configure their returned values. This feature adds a new keyword modifier to apply XSLT (Extensible Stylesheet Language Transformations) to XML content returned on the keyword.

The format for this keyword modifier is as follows.

%keyword^xslt:<assetid>%
 
%asset_contents_raw^xslt:343% 

This modifier will take the XSLT of a file asset (specified by asset ID), apply it to XML returned on the asset and output the result.

This feature has been added to allow users to transform the XML of assets, providing greater control over the content of their sites.

New System Forking Scripts [ Feature Request #5294 ]
-----------------------------------------------------

This feature adds three forking scripts, aimed to increase the performance of these scripts and prevent memory leakage, especially on larger systems where memory usage is otherwise too high and/or performance of single-threaded scripts is too slow.

The scripts added are:

system_apply_permissions.php : takes a permission string in a specific format that allows you to run multiple permission operations on the specified asset and their children. This script forks and runs in batches to curb memory usage and also runs multiple threads in parallel to speed up the overall operation.

system_apply_metadata_schema.php : applies a metadata schema to the specified assets and their children (and generates the metadata for that asset). Runs in batches and multiple threads in parallel.

system_update_lookups.php : updates lookups for all assets under the specified root node. Forks and runs in batches to keep memory usage down.


%asset_contents_paint_X% on Paint Layout Bodycopy [ Feature Request #5323 ]
-----------------------------------------------------

The %asset_contents_paint_X% keyword replacement is used on an Asset Listing Page to print the content of an asset with a specified Paint Layout applied. For example, the keyword %asset_contents_paint_1234% would apply the layout of asset #1234 to the asset content.

This feature enables the use of this keyword replacement for use within a Paint Layout bodycopy. This can be useful, for example, when using Conditional Keywords, to print the asset content with other Paint Layouts applied, based on the conditions specified.

This feature has been added to aid in the implementation of Paint Layouts, providing users with more flexibility and control over their content. 

Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5197: Enhanced Performance on Asset Listing Pagination.
Minor Enhancement #5206: Backup Script to Move Database Dump into the data/ Directory.
Minor Enhancement #5207: Asset Manager: getLinkLineages Query Performance Improvements.
Minor Enhancement #5255: Performance Enhancement: Cascading Permissions on Permissions Screen.
Minor Enhancement #5270: Performance Enhancement: Global Search and Replace Reindex Altered Assets Only.
Minor Enhancement #5304: system_integrity_recover_file_versions.php Now Works for Image Varieties.
Minor Enhancement #5308: Metadata Field's Friendly Name Attribute Available as Keyword Replacement.
Minor Enhancement #5310: Search Button on the Quick Search Tool.
Minor Enhancement #5312: Custom Form Date field link issue.
Minor Enhancement #5313: Performance Improvement to createAssetLink() Function.
Minor Enhancement #5316: Remap Manager: Never Delete Mass Select / Deselect.
Minor Enhancement #5321: Alternative Proxy Config Allows Matches to Exclude Going Through Proxy
Minor Enhancement #5325: http_request Obeys Alternative Proxy Settings.

Core

Fixed Bug #5143: Committing from "archived/approved to go live" causes attributes to be cleared.
Fixed Bug #5299: Cron job added are of time stamp in past.
Fixed Bug #5300: Keyword modifiers not working properly on site map.
Fixed Bug #5301: Metadata date field not disabled when "Use default" selected.
Fixed Bug #5303: Trigger action set standard date, updates not search re-indexed.
Fixed Bug #5306: Asset map complains about the empty XML on PHP 5.3.
Fixed Bug #5307: Trigger condition "Status changes to" throws PHP notice.
Fixed Bug #5309: Manual asset id input processing and trimming.
Fixed Bug #5311: Show Diff preview incomplete highlights.
Fixed Bug #5314: Short form shadow asset links.
Fixed Bug #5315: Design CSS assets doesn't regenerate parse file for itself or children customisations. CSS changes can't be seen in front end.
Fixed Bug #5326: Trying to add an Alternative Proxy spits out PHP warnings.
Fixed Bug #5334: Workflow escalation custom message are have wrong subject.
Fixed Bug #5341: Filter Front End User Input - set to 'Filter input' breaking front end layout after parse file commit.
Fixed Bug #5342: PHP 5.3 E_DEPRECATED warning in installation scripts.
Fixed Bug #5148: br tag created in the WYSIWYG as soon as it's created.
Fixed Bug #5327: Linking to image varieties requires a dollar $ sign to work.

Search

Fixed Bug #5319: Search Manager Asset Tree and Global Weights screen error. 
Fixed Bug #5324: Metadata Weightings in Search Manager Asset Tree Weights screen does not work. 

LDAP

Fixed Bug #5305: LDAP authentication ignores bridge asset-map position.
Fixed Bug #5347: LDAP Bridge not expanding for some User/User Groups LDAP entries

Web Services

Fixed Bug #5140: JS API importAssetsFromXML() only imports the first Asset. 
Fixed Bug #5318: JS API causing syntax error if the ajax response is "undefined" or "null". 
Fixed Bug #5328: JS API setAttribute will show success even on error. 



VERSION 4.4.0 RC1

Featured Changes
===================================


Logout Due to IP Change Logged in System Logs [ Feature Request #4604 ]
-----------------------------------------------------

Previously, when a user was logged out of Squiz Matrix because their IP changed and SQ_CONF_ALLOW_IP_CHANGE was set to true, neither an error or a system.security.* message would be sent. This meant that the only way to figure out why users were intermittently losing their session was to have prior knowledge of this setting.

This feature had been added so that Matrix will log logouts due to IP changing in the system logs. For example:

[2011-05-23 15:11:23][12:Root User][1024:mysource notice][ ] [system.security.logout.ip_change - remote_addr:192.168.1.1;sessionid:;] (User Automatically Logged Out) - User "Root User" was logged out since their IP address changed from 192.168.2.1 to 192.168.1.1.

Enhancements to the import_files_from_bridge.php Script [ Feature Request #5033 ]
-----------------------------------------------------

Squiz Matrix's import_files_from_bridge.php script imports files exposed through a File Bridge asset into Matrix. Previously, this script would import these files as File type assets; however, files will now be imported as corresponding Matrix file assets, when available. For example, an image will now be imported as an Image type asset. 

This feature also introduces the option of importing folders containing an index.html file as a Standard Page asset with the content of the index file. This option can be enabled by setting a parameter on the script.

The new usage of the import_files_from_bridge.php script is as follows:

php import_files_from_bridge.php <MATRIX_ROOT> <BRIDGE_ROOT_NODE_ASSETID> <PARENT_ASSETID> <RECURSIVE> <HANDLE_INDEX_FILE>
 
php import_files_from_bridge.php path/to/matrix 100 150 y y

Make SOAP Call Step Action For Multi-Page Forms [ Feature Request #5089 ]
-----------------------------------------------------

Currently, Squiz Matrix's Custom Form asset allows you to make a SOAP call on submission. This new feature extends the functionality of submission actions to the individual steps (or pages) of a multi-page Custom Form, allowing your form to make a SOAP call on each page submission.

Step actions can be configured on the new Step Actions screen for form sections.

The set up of the Make SOAP Call step action is similar to the Make SOAP Call submission action, allowing you to specify the connection to the SOAP server and specify the request message.

On the front end of the form, when a user clicks the Next Page button, Squiz Matrix will make the SOAP call, as configured on the Step Actions screen for that step.

The Make SOAP Call step action also utilises the new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

SharePoint CMIS Bridge [ Feature Request #5090 ]
-----------------------------------------------------

This new feature introduces the CMIS Bridge asset, a connection bridge for retrieving files from a CMIS enabled SharePoint repository (currently supports Microsoft SharePoint 2010).

This asset retrieves SharePoint documents in a similar manner to the SharePoint Saved Search; however, files imported over the CMIS Bridge will be imported as fully functional system assets within Squiz Matrix (such as Images, Text Files etc.). These assets can be edited, linked and moved around the system just like any other asset, allowing you greater control over your SharePoint repositories within Matrix. 

Files are stored under the CMIS Bridge asset in the asset map when initially synchronised with the connected CMIS enabled SharePoint repository. Further synchronisation will update these files, trashing any old files, modifying files that have been altered and creating new assets for new files on the repository.

Synchronisation is also controlled via a new Sync CMIS Bridges Cron Job. This cron job is set to run daily - its run time and frequency can be configured on its Details screen.

CMIS properties (e.g. Author, Objectid, Modified, Created) can be mapped to the metadata fields of a schema applied to the CMIS Bridge. Additional custom fields created for the document library will dynamically be made available for metadata mapping.

The addition of this asset enhances the SharePoint package within Squiz Matrix, allowing you to manage your SharePoint documents within Matrix with more control than ever before.

Search Page: Specify Data Sources on Exclude Fields [ Feature Request #5094 ]
-----------------------------------------------------

Previously, Matrix's Search Page only allowed you to configure data sources for search fields. The data sources allowed you to specify which fields on an asset to search. This feature extends this functionality to exclude fields, allowing you to specify which fields to exclude on.

Like a search field, exclude fields allow the following data source types:

Include All: searches all standard fields, attribute fields and metadata fields of assets.
Standard Asset Field: searches a specified standard asset field (e.g. the name of a page or its asset ID).
Asset Attribute: searches a specified attribute field (e.g. the title of a file of a MS Word Document asset).
Asset Metadata Field: searches a specified metadata field.

You can select multiple data sources to search for each exclude field that you add, specifying the word logic to use for your data sources (all words or any word).

Please note that existing exclude fields will default to the Include All data source type, returning the same results as they would previously had.

On the Search Page, the exclude field will only search the fields specified in its data sources. For example, say you configure the exclude field to search the Keywords metadata field of assets - if a user searches for the query News in the exclude field, the Search Page will exclude assets contain the query News in their Keywords metadata from the search results.

This enhancement to the Search Page's exclude fields allows you to tweak your Search Page, allowing your users to return more accurate results, specific to their searching queries.

Specifiying the Cron Deadlock Email Notification Receivers [ Feature Request #5103 ]
-----------------------------------------------------

Squiz Matrix's Cron Manager handles the cron process within a system, managing and running the cron jobs that have been scheduled. Occasionally, a cron job may stall, causing the Cron Manager to deadlock. When this occurs, Matrix will send out email notifications, informing users of these errors.

Previously, Matrix would send these deadlock email notifications to all users under the System Administrators Folder, as well as the email addresses configured in the system's main.inc file. These automated email notifications would be resent to these users each subsequent run of the Cron Manager, until the issue was resolved. This could cause large numbers of emails sent to many users, potentially causing inconvenience and even spam filtering issues with users' mail clients.

This feature adds a new option to the Cron Manager, allowing you to specify the users that will receive cron deadlock emails. This option is configured via a new Emailing Options section on the Options screen of the Cron Manager.

The Cron Deadlock Email Receivers field allows you to select users, user groups and roles to specify which users should receive email notifications from the Cron Manager. By default, the system's Root User and the email addresses configured in the system's main.inc file will automatically also receive these emails.

By allowing you to specify the users to receive cron deadlock emails, this feature allows you to more efficiently identify and manage any potential issues with the Cron Manager in your system.

A-Z Listing: Defining the Layout of Individual Letters on the Navigation List [ Feature Request #5124 ]
-----------------------------------------------------

On a multiple page A-Z asset listing, the navigation character list displays links to the different alphabetised pages on the listing. This feature adds the ability to format the individual letters on this list.

This feature utilises the asset listing's existing Page Link and Current Link formats, which were not previously used on an A-Z asset listing.

On an A-Z listing, the Page Link Format will now define the layout of each individual letter on the linked character list, while the Current Page Format will define the layout of letters that contain no results.

These formats use the existing %page_link% and %page_number% keyword replacements. For example, you could format the letters on the list so that letters with results will be in bold, while letters with no results will be struck out.

The feature gives users greater control over the layout of their A-Z listings, in line with the options available on a regular asset listing.

Make SOAP Call on Submit Submission Action: Array Data in SOAP Response [ Feature Request #5127 ]
-----------------------------------------------------

Previously, the Custom Form's Make SOAP Call on Submit form submission action could not handle array data in the SOAP response. This feature adds support for array data in the SOAP response, populating array data into global keywords using index numbers.

For example:

%globals_session_[FOMR_ASSETID]_array_field0_value%, %globals_session_[FOMR_ASSETID]_array_field2_value%, %globals_session_[FOMR_ASSETID]_array_field3_value%

This feature also adds a TEST SOAP option to printout the sample SOAP request and response in the backend, for testing purposes.

Make SOAP Call on Submit Submission Action: Check SOAP Response [ Feature Request #5128 ]
-----------------------------------------------------

This features introduces data validation on the SOAP request of the Make SOAP Call on Submit form submission action of a Custom Form. If incorrect data is found in the request, Matrix will respond with a suggestion of specific error message, while if no incorrect data is found, will process the request, as normal.  

This feature is implemented through a new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

JSON Data Source
-----------------------------------------------------

This new JSON Data Source asset is an alternative to the existing XML Data Source, facilitating server-side data exchange with web applications.

Clean Old Shadow Links Script
-----------------------------------------------------

A new script has been added to the Matrix database to clean links to shadow assets that are no longer valid. This is usually because the assets have since been removed from the data source, e.g. An LDAP backend user is linked under the System Administrators folder but is later removed from the LDAP Directory.

Additional reasons a shadow link may no longer be valid is if the connection between Matrix and the data source goes down or if the configuration of the connection bridge is altered for testing purposes. Because of these reasons, when the clean_old_shadow_links.php script is first run, it will only return a list of shadow links for review. You can then decided whether or not to delete the shadow links in the system.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5041: Enhancement: Matrix clear expired cache query sometime is too large for oracle
Minor Enhancement #5044: Performance Enhancement: When Send Cacheable header, and Matrix responds 304 Not Modified, there is a useless call to printFrontEnd() 
Minor Enhancement #5045: Add a favicon to the Admin interface.
Minor Enhancement #5078: Error message on eSec Payment Gateway when Matrix is unable to connect to the service.
Minor Enhancement #5079: Support vertical resizing for the asset map.  
Minor Enhancement #5082: eSec Payment Gateway respects the proxy settings in Matrix's system configuration.
Minor Enhancement #5087: Add logging for pdftohtml failures.
Minor Enhancement #5096: Improved performance when dealing with large sq_internal_messages table.
Minor Enhancement #5109: Video File Asset: Add webm format.
Minor Enhancement #5116: Clear cache cron job enhancement (default storage).
Minor Enhancement #5122: Issue with PHP function mime_type_content().
Minor Enhancement #5123: Metadata Manager default value functions performance enhancement.

Core

Fixed Bug #5050: LDAP Users not getting correct permissions if the user is under a subgroup.
Fixed Bug #5055: Nested content DIVs don't save properly across contexts.
Fixed Bug #5061: Fatal error when viewing the Details screen of a form submission when a section of the form has been deleted.
Fixed Bug #5064: HIPO pop-up windows lose focus in Internet Explorer.
Fixed Bug #5069: Hierarchy metadata field default value displays incorrectly.
Fixed Bug #5072: Trashed file assets still accessible via public data URL.
Fixed Bug #5080: condition user agent can not use regular expression operator '|'.
Fixed Bug #5083: Metadata Fields Inaccessible.
Fixed Bug #5084: Changed file name in Safe Edit causes multiple issues.
Fixed Bug #5085: IE 8 and IE 9 wont let user commit changes on WYSIWYG screen.
Fixed Bug #5086: Error when editing image varieties after cancelling Safe Edit.
Fixed Bug #5092: Asset Builder's insert link via WYSIWYG tool removes the dot (.) before  /?a= .
Fixed Bug #5093: Customised classes not appearing in EES WYSIWYG.
Fixed Bug #5097: Shadow links (shadow assets linked under a real asset) always appear red-crossed in Asset Map for non-admin users.
Fixed Bug #5099: [cron_job] Metadata triggers causing Cron deadlock.
Fixed Bug #5104: Triggering asset intermittently getting lost when using the send email trigger action.
Fixed Bug #5106: Contains keyword modifier fails on string with a slash (/).
Fixed Bug #5108: Selectable create location link type bug with account manager page.
Fixed Bug #5114: PHP 5.3 remote content page complaining "Assigning the return value of new by reference is deprecated".
Fixed Bug #5117: Dependants only will not check in Set permission trigger action.
Fixed Bug #5118: Role screen doesn't not validates role and user asset IDs.
Fixed Bug #5119: Asset listing grouping by parent results in mysource warnings when the parent asset is a user asset.
Fixed Bug #5120: System config screen, Enable HTTP Authentication option has cosmetic problem when lock is acquired.

CMS

Fixed Bug #5098: [cron_job] manage_pending_accounts causing Cron deadlock.
Fixed Bug #5102: Matrix will throw warnings is the nested asset is deleted.
Fixed Bug #5125: Forms answers getting unnecessarily encoded in Submission Logs screen. 

Search

Fixed Bug #5105: PHP Notices on Search Fields screen (Undefined Asset Type).

Web Services

Fixed Bug #4934: Committing from "approved to go live" causes attributes on REST assets to be cleared.




VERSION 4.2.0 RC1

Featured Changes
===================================


Version numbers in __data URLs [ Feature Request #4808 ]
-----------------------------------------------------

It's difficult to manage cache expiration of statically served content, since this content is served blind by apache.

That is, you can edit a file, or CSS asset for example, but until the browser forces the request of a new version (further compounded by reverse proxies), the old version will continue to be served.

A common pattern for dealing with this is to add version numbers to the URL for the static file. Often, this is simply added as a query string for simplicity.

The effect being, when the file is updated and you bust the cache on the page, the URL for the file is different (since it's versioned), and so the browser gets the fresh version of the asset.

This can be a huge boost in caching strategies, allowing people to be more aggressive with their cache policy and empowering them to bust the 'perceived' cache on static files more easily.

TRIM Feature Request for Cron Job [ Feature Request #4875 ]
-----------------------------------------------------

Added ability to modify the (when) attribute of the saved search cron job through the details interface.

Also added a custom field in saved search to allow the result set to contain a text version of a records container called (Container Title)

	Remap Manager: Never Delete Enhancements [ Feature Request #4890 ]
	-----------------------------------------------------

	The Remap Manager's Never Delete option allows you to lock specific remaps from being deleted. This new feature improves this existing functionality by adding a variety of enhancements.

	A new option has been added to the Remap Manager to purge all remaps in the system except those marked as Never Delete. This option is enabled through a new field on the Details screen of the Remap Manager.

	Setting this field to Yes and clicking Commit will purge all remaps in the system that are not marked as Never Delete.

	The Web Paths screen of an asset would previously list its remaps but would provide no indication of whether the remap was marked as Never Delete or not. A new column has now been added for remaps on the Web Paths screen to display whether the remap is marked as Never Delete.

	Previously, delete fields were available to all remaps listed in the Remap Manager or on the Web Paths screens of assets. These fields were ineffective when used on remaps marked as Never Delete, however they were still accessible. These delete fields will now only be enabled for use on remaps not marked as Never Delete. The delete field will be disabled on remaps marked as Never Delete, as shown in the figure above.

	The Remap Manager's Never Delete Added Remaps? field will now be disabled by default, meaning that users must manually enable this option. This field was previously enabled by default; Existing installations using the previous default will retain their settings when being updating.

	Slight performance improvement in rebuilding cache [ Feature Request #4925 ]
	-----------------------------------------------------

	A slight performance improvement can be achieved by testing if the asset has no urls first up and finishing, since a url is needed to be indexed by funnelback.

	Improved permissions in Squiz Search [ Feature Request #4926 ]
	-----------------------------------------------------

	Improved permissions in Squiz Search will be handled by adding the systemid to all but the public key when retrieving the sitemap.


	Additional Changes and Bug Fixes
	=================================== 

	Minor Enhancements
	Minor Enhancement #4804: HTTP Request Header Acknowledges System Proxy Settings.
	Minor Enhancement #4869: Exporting Asset Attributes with CDATA Values.
	Minor Enhancement #4891: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4894: Asset::readAccess Makes Unnecessary Calls to the Workflow Manager.
	Minor Enhancement #4895: Don't Add Remap Option on the Add Web Path Trigger Action.
	Minor Enhancement #4912: Improved Performance of the Workflow Screen.
	Minor Enhancement #4913: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4916: System Asset Links Locked by Default.
	Minor Enhancement #4923: Enhancement: When Painting 404 not found Page and Sending Cacheable Header is Enabled, Expiry header is Not Set.

	Core
	Fixed Bug #4856: Replace Text 'selected text only' not working in IE7+8.
	Fixed Bug #4881: Date/Time form output.
	Fixed Bug #4885: Daily cron jobs run twice.
	Fixed Bug #4886: "Update lookups" HIPO Job in File::saveAttributes() creating issue.
	Fixed Bug #4889: Incorrect default when attribute on Sync Product cron job.
	Fixed Bug #4896: Trigger action "Set Metadata Value" fails when using parameter map.
	Fixed Bug #4903: Online Quiz List Format field description lists unavailable formats.
	Fixed Bug #4904: Typo on design_area_asset_lineage screen.
	Fixed Bug #4905: Quotation button in WYSIWYG view, unquote results in escaped html.
	Fixed Bug #4906: 'AssetStatusUpdate' event broadcasted but onAssetStatusUpdate() never executed.
	Fixed Bug #4907: Error when changing content type in a non default context.
	Fixed Bug #4910: When an asset is linked to a big number of parents, you will easily get Oracle error ORA-01795: maximum number of expressions in a list is 1000.
	Fixed Bug #4915: Metadata value trigger condition does not consider keywords.
	Fixed Bug #4924: DB error when a design asset is notice linked to too many assets.
	Fixed Bug #4930: Global Search and Replace doesn't replace metadata.

	CMS
	Fixed Bug #4878: ORA-01795 on Site Map asset.
	Fixed Bug #4880: Insert image doesn't remember location of last image variety uploaded.
	Fixed Bug #4892: Small typos in Remote Content asset Details screen.
	Fixed Bug #4901: Using a nested asset in simple edit layout which has an arbitrary paint layout set, will throw PHP notices.

	Calendar
	Fixed Bug #4899: Recurring calendar event instance date keyword bugs.

	Web Services
	Fixed Bug #4877: JS API Fails on https only domains.
	Fixed Bug #4909: JS API setAssetStatus permission denied for user with write permissions.
	Fixed Bug #4920: JS API not escaping metadata correctly.
	Fixed Bug #4922: JS API returns invalid JSON.

	Funnelback Package
	Fixed Bug #4911: Contextual Navigation links not working with Funnelback Server Search.
	Fixed Bug #4921: The Sitemap XML generated by Matrix is not escaping nbsp chars.

