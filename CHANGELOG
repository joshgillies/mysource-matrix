MYSOURCE MATRIX CHANGELOG

VERSION 4.2.4

Featured Changes
===================================


New Trigger Action to Make a SOAP Call [ Feature Request #5139 ]
-----------------------------------------------------

A new trigger action has been added to Squiz Matrix, allowing you to make a SOAP call. The Make SOAP Call trigger action works in a similar manner to the Make SOAP Call submission action on a Custom Form or Ecommerce Form Page, allowing you to send a message to a remote SOAP server when the trigger is fired.

This trigger action retains all the features of the existing Make SOAP Call form submission action, allowing you to specify the parameters of the SOAP request message, test the content of the request, and configure data validation and error messages.

This feature has been developed to further extend support for web services within Squiz Matrix.

Asset Status Being Changed To Trigger Condition [ Feature Request #5155 ]
-----------------------------------------------------

A new trigger condition has been added to evaluates the status that an asset is being changed to. The Asset Status Being Changed To trigger condition allows you to specify one or more asset statuses (Live, Under Construction etc.) and will be matched if the firing asset's status is being changed to one of these statuses.

This condition can be used in conjunction with the Before Status Changed and Status Changed trigger events, for example, you could use this condition to prevent users from changing an asset to a particular asset status (using the Fail trigger action).

Before Status Changed Trigger Event [ Feature Request #5156 ]
-----------------------------------------------------

Currently, Squiz Matrix's trigger system includes the Status Changed trigger event, which will fire a trigger when the status of an asset has been changed. This feature introduces a new trigger event that will fire a trigger when the status of an asset is to be changed but before the status is actually altered.

Make SOAP Call Submission Action: Check Response Rules [ Feature Request #5166 ]
-----------------------------------------------------

This month's Matrix releases introduced data validation on the SOAP response of the Custom Form's Make SOAP Call form submission action. This feature adds the ability to configure data validation rules to further customise how Matrix evaluates whether or not data returned on the SOAP response is valid

You can now select from a variety of rule types (e.g. must contain, must NOT contain etc.), stipulating a value to create a rule that must be met for a SOAP response to be valid.

For example, if you set the validation rule as Must NOT contain Fail, the response will only be deemed valid if the response does not contain the value Fail. If it does contain this value, the returned data will be evaluated as invalid and the error configured in the Error Message field will be displayed.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5130: TRIM Saved Search: Configure the Download Limit of Record Attachments.
Minor Enhancement #5142: Enhancements to the System Integrity Incomplete Attachments Script.
Minor Enhancement #5147: Support for Global Keywords in the SOAP request of the Make SOAP Call Form Submission Action.
Minor Enhancement #5152: Bulkmail Subscribe Page Envelope Sender Address.
Minor Enhancement #5153: New Metadata Date Field Option.
Minor Enhancement #5154: Error Message Options on the Set Future Status Trigger Action.
Minor Enhancement #5160: Listing Engine Bodycopy Keywords Caching Performance Enhancement.

Core

Fixed Bug #5121: Extras field on Details screen of a Date form field does not work.
Fixed Bug #5134: Unable to Accept/Reject workflow via EES from emails.
Fixed Bug #5144: HTTPS links in RSS feeds while viewing in HTTP.
Fixed Bug #5150: Cancelling Safe Edit results in errors and loss of notice links.
Fixed Bug #5151: Incomplete attachment submission directories left on file system.
Fixed Bug #5157: Cannot create image varieties with some GIF files.
Fixed Bug #5158: Insert Link WYSIWYG bug for shadow assets.
Fixed Bug #5162: Asset Builder missing Keywords for Product assets.
Fixed Bug #5165: Internal Message failed to send to LDAP user group.
Fixed Bug #5169: Typo in the permission change script.
Fixed Bug #5170: Changes to export script in Matrix for better structured import.
Fixed Bug #5172: Remap Manager's 'never delete' option doesn't respond to changes.

CMS

Fixed Bug #5141: Keywords in Remote Content Layout do not work.
Fixed Bug #5145: Global keyword replacements with keyword modifier not working in Form.

Search

Fixed Bug #5163: Search Log Report overwriting the existing entries in Current search report.

Google Maps

Fixed Bug #5081: Enabling root toggling in details screen of Google Map gives fatal error.

Web Services

Fixed Bug #5129: getMetadata() when no metadata schemas are applied returns nothing, causing a javascript error.
Fixed Bug #5159: In SOAP form/step action, value '0' in SOAP request is ignored.
Fixed Bug #5167: SOAP Web Service UpdateLink function's LinkID param variables not matching up.



VERSION 4.2.3

Featured Changes
===================================


Logout Due to IP Change Logged in System Logs [ Feature Request #4604 ]
-----------------------------------------------------

Previously, when a user was logged out of Squiz Matrix because their IP changed and SQ_CONF_ALLOW_IP_CHANGE was set to true, neither an error or a system.security.* message would be sent. This meant that the only way to figure out why users were intermittently losing their session was to have prior knowledge of this setting.

This feature had been added so that Matrix will log logouts due to IP changing in the system logs. For example:

[2011-05-23 15:11:23][12:Root User][1024:mysource notice][ ] [system.security.logout.ip_change - remote_addr:192.168.1.1;sessionid:;] (User Automatically Logged Out) - User "Root User" was logged out since their IP address changed from 192.168.2.1 to 192.168.1.1.

Search Page: Specify Data Sources on Exclude Fields [ Feature Request #5094 ]
-----------------------------------------------------

Previously, Matrix's Search Page only allowed you to configure data sources for search fields. The data sources allowed you to specify which fields on an asset to search. This feature extends this functionality to exclude fields, allowing you to specify which fields to exclude on.

Like a search field, exclude fields allow the following data source types:

Include All: searches all standard fields, attribute fields and metadata fields of assets.
Standard Asset Field: searches a specified standard asset field (e.g. the name of a page or its asset ID).
Asset Attribute: searches a specified attribute field (e.g. the title of a file of a MS Word Document asset).
Asset Metadata Field: searches a specified metadata field.

You can select multiple data sources to search for each exclude field that you add, specifying the word logic to use for your data sources (all words or any word).

Please note that existing exclude fields will default to the Include All data source type, returning the same results as they would previously had.

On the Search Page, the exclude field will only search the fields specified in its data sources. For example, say you configure the exclude field to search the Keywords metadata field of assets - if a user searches for the query News in the exclude field, the Search Page will exclude assets contain the query News in their Keywords metadata from the search results.

This enhancement to the Search Page's exclude fields allows you to tweak your Search Page, allowing your users to return more accurate results, specific to their searching queries.

Specifiying the Cron Deadlock Email Notification Receivers [ Feature Request #5103 ]
-----------------------------------------------------

Squiz Matrix's Cron Manager handles the cron process within a system, managing and running the cron jobs that have been scheduled. Occasionally, a cron job may stall, causing the Cron Manager to deadlock. When this occurs, Matrix will send out email notifications, informing users of these errors.

Previously, Matrix would send these deadlock email notifications to all users under the System Administrators Folder, as well as the email addresses configured in the system's main.inc file. These automated email notifications would be resent to these users each subsequent run of the Cron Manager, until the issue was resolved. This could cause large numbers of emails sent to many users, potentially causing inconvenience and even spam filtering issues with users' mail clients.

This feature adds a new option to the Cron Manager, allowing you to specify the users that will receive cron deadlock emails. This option is configured via a new Emailing Options section on the Options screen of the Cron Manager.

The Cron Deadlock Email Receivers field allows you to select users, user groups and roles to specify which users should receive email notifications from the Cron Manager. By default, the system's Root User and the email addresses configured in the system's main.inc file will automatically also receive these emails.

By allowing you to specify the users to receive cron deadlock emails, this feature allows you to more efficiently identify and manage any potential issues with the Cron Manager in your system.

A-Z Listing: Defining the Layout of Individual Letters on the Navigation List [ Feature Request #5124 ]
-----------------------------------------------------

On a multiple page A-Z asset listing, the navigation character list displays links to the different alphabetised pages on the listing. This feature adds the ability to format the individual letters on this list.

This feature utilises the asset listing's existing Page Link and Current Link formats, which were not previously used on an A-Z asset listing.

On an A-Z listing, the Page Link Format will now define the layout of each individual letter on the linked character list, while the Current Page Format will define the layout of letters that contain no results.

These formats use the existing %page_link% and %page_number% keyword replacements. For example, you could format the letters on the list so that letters with results will be in bold, while letters with no results will be struck out.

The feature gives users greater control over the layout of their A-Z listings, in line with the options available on a regular asset listing.

Make SOAP Call on Submit Submission Action: Array Data in SOAP Response [ Feature Request #5127 ]
-----------------------------------------------------

Previously, the Custom Form's Make SOAP Call on Submit form submission action could not handle array data in the SOAP response. This feature adds support for array data in the SOAP response, populating array data into global keywords using index numbers.

For example:

%globals_session_[FOMR_ASSETID]_array_field0_value%, %globals_session_[FOMR_ASSETID]_array_field2_value%, %globals_session_[FOMR_ASSETID]_array_field3_value%

This feature also adds a TEST SOAP option to printout the sample SOAP request and response in the backend, for testing purposes.

Make SOAP Call on Submit Submission Action: Check SOAP Response [ Feature Request #5128 ]
-----------------------------------------------------

This features introduces data validation on the SOAP request of the Make SOAP Call on Submit form submission action of a Custom Form. If incorrect data is found in the request, Matrix will respond with a suggestion of specific error message, while if no incorrect data is found, will process the request, as normal.  

This feature is implemented through a new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5078: Error message on eSec Payment Gateway when Matrix is unable to connect to the service.
Minor Enhancement #5079: Support vertical resizing for the asset map.  
Minor Enhancement #5082: eSec Payment Gateway respects the proxy settings in Matrix's system configuration.
Minor Enhancement #5087: Add logging for pdftohtml failures.
Minor Enhancement #5109: Video File Asset: Add webm format.
Minor Enhancement #5116: Clear cache cron job enhancement (default storage).
Minor Enhancement #5122: Issue with PHP function mime_type_content().
Minor Enhancement #5123: Metadata Manager default value functions performance enhancement.

Core

Fixed Bug #5050: LDAP Users not getting correct permissions if the user is under a subgroup.
Fixed Bug #5055: Nested content DIVs don't save properly across contexts.
Fixed Bug #5061: Fatal error when viewing the Details screen of a form submission when a section of the form has been deleted.
Fixed Bug #5064: HIPO pop-up windows lose focus in Internet Explorer.
Fixed Bug #5069: Hierarchy metadata field default value displays incorrectly.
Fixed Bug #5072: Trashed file assets still accessible via public data URL.
Fixed Bug #5080: condition user agent can not use regular expression operator '|'.
Fixed Bug #5083: Metadata Fields Inaccessible.
Fixed Bug #5084: Changed file name in Safe Edit causes multiple issues.
Fixed Bug #5085: IE 8 and IE 9 wont let user commit changes on WYSIWYG screen.
Fixed Bug #5086: Error when editing image varieties after cancelling Safe Edit.
Fixed Bug #5092: Asset Builder's insert link via WYSIWYG tool removes the dot (.) before  /?a= .
Fixed Bug #5093: Customised classes not appearing in EES WYSIWYG.
Fixed Bug #5097: Shadow links (shadow assets linked under a real asset) always appear red-crossed in Asset Map for non-admin users.
Fixed Bug #5099: [cron_job] Metadata triggers causing Cron deadlock.
Fixed Bug #5104: Triggering asset intermittently getting lost when using the send email trigger action.
Fixed Bug #5106: Contains keyword modifier fails on string with a slash (/).
Fixed Bug #5108: Selectable create location link type bug with account manager page.
Fixed Bug #5114: PHP 5.3 remote content page complaining "Assigning the return value of new by reference is deprecated".
Fixed Bug #5117: Dependants only will not check in Set permission trigger action.
Fixed Bug #5118: Role screen doesn't not validates role and user asset IDs.
Fixed Bug #5119: Asset listing grouping by parent results in mysource warnings when the parent asset is a user asset.
Fixed Bug #5120: System config screen, Enable HTTP Authentication option has cosmetic problem when lock is acquired.

CMS

Fixed Bug #5098: [cron_job] manage_pending_accounts causing Cron deadlock.
Fixed Bug #5102: Matrix will throw warnings is the nested asset is deleted.
Fixed Bug #5125: Forms answers getting unnecessarily encoded in Submission Logs screen. 

Search

Fixed Bug #5105: PHP Notices on Search Fields screen (Undefined Asset Type).

Web Services

Fixed Bug #4934: Committing from "approved to go live" causes attributes on REST assets to be cleared.




VERSION 4.2.2

Featured Changes
===================================


New Global Keyword Replacement: %globals_asset_contents:<assetID>% [ Feature Request #5029 ]
-----------------------------------------------------

Previously, Squiz Matrix did not support global keywords for the content of assets. This feature introduces the %globals_asset_contents:<assetID>% global keyword, printing the contents of an asset, specified by its asset ID.

An example usage of this global keyword replacement is as follows:

%globals_asset_contents:165%

In this example, the asset contents of asset #165 (including any paint layout applied to the asset) will be printed.

Additional contents keywords can also now be used as global keywords, including:

	* %globals_asset_contents_raw:<assetID>%: the raw contents of the specified asset, without any applied layouts.
	* %globals_asset_contents_paint_layout_id_<layoutID>:<assetID>: the contents of the specified asset, using a paint layout specified by its asset ID.
	* %globals_asset_contents_paint_layout_name_<layoutname>:<assetID>: the contents of the specified asset, using a paint layout specified by its name.

This feature enhances the functionality of global keywords within Squiz Matrix, allowing greater control over the content of your assets.

Additional Cookie Options for HttpOnly and Secure [ Feature Request #5032 ]
-----------------------------------------------------

Previously, HttpOnly and Secure cookie types could not be defined as cookies set by Matrix. This feature adds options to the System Configuration, allowing you to enable HttpOnly and Secure cookies within Squiz Matrix.

These options are set via new fields on the System Configuration screen.

The HTTP only for cookie field allows you to set the HttpOnly option for cookies. When a cookie is HttpOnly, the web browser will not allow client side scripts (such as JavaScript) access to the cookie. This can help mitigate the effects of cross site scripting attacks.

The Enable 'Secure' Cookie option field allow you to specify whether or not cookies should be transmitted only over secure HTTPS connections. If this field is enabled, cookies will only be set if a secure connection exists.

Enhancements to the import_files_from_bridge.php Script [ Feature Request #5033 ]
-----------------------------------------------------

Squiz Matrix's import_files_from_bridge.php script imports files exposed through a File Bridge asset into Matrix. Previously, this script would import these files as File type assets; however, files will now be imported as corresponding Matrix file assets, when available. For example, an image will now be imported as an Image type asset.

This feature also introduces the option of importing folders containing an index.html file as a Standard Page asset with the content of the index file. This option can be enabled by setting a parameter on the script.

The new usage of the import_files_from_bridge.php script is as follows:

php import_files_from_bridge.php <MATRIX_ROOT> <BRIDGE_ROOT_NODE_ASSETID> <PARENT_ASSETID> <RECURSIVE> <HANDLE_INDEX_FILE> 

php import_files_from_bridge.php path/to/matrix 100 150 y y 

Safe Edit Respects Notice Link Changes on an Asset [ Feature Request #5060 ]
-----------------------------------------------------

Previously, if a page asset was in Safe Edit mode and a Nest Content Div of that page was altered to point to a different nested asset, this alteration would not be respected as a Safe Edit change. If you choose to cancel Safe Edit, this change will not be reverted back to its previous value.

This function ensures that any such changes are respected as Safe Edit changes and will be reverted if Safe Edit is cancelled.

JS API: New Function to Execute HTML Tidy [ Feature Request #5074 ]
-----------------------------------------------------

A new function has been added to the Javascript API to execute HTML Tidy on the content of a passed string.

The executeHTMLTidy() function is enabled through a new field on the Details screen of the Javascript API.

This function takes two parameters:

	* content: the string content to be cleaned.
	* dataCallback: the custom callback function (optional).

The format of the executeHTMLTidy() function is shown below:

function executeHTMLTidy (content, dataCallback)


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5000: Performance improvement to LDAP's search() function.
Minor Enhancement #5012: Keyword modifiers available on Custom Form keyword replacements.
Minor Enhancement #5042: Minor LDAP Bridge enhancements.
Minor Enhancement #5046: New MIME type added for FLV file types.
Minor Enhancement #5047: New MIME types added for OGV, MP4 and WebM video file types.
Minor Enhancement #5052: Asset ID keyword now available on Invitation/Approval Workflow messages.
Minor Enhancement #5054: New option on the What's New Page to exclude root nodes.
Minor Enhancement #5065: New option on an LDAP Data Source to specify the attributes to extract.
Minor Enhancement #5073: Auto add remaps option respected when moving assets.
Minor Enhancement #5075: New MIME types added for XML, XSLT and XSL file asset types.


Core

Fixed Bug #5023: The Clear Matrix Cache cron job has memory leak.
Fixed Bug #5024: Asset Listing's mindepth/maxdepth values don't work properly with Custom Grouping.
Fixed Bug #5025: System check test_dead_file_revisions fails on Thumbnail varieties.
Fixed Bug #5034: In certain cases, workflow escalation emails should not be sent for dependant assets.
Fixed Bug #5036: The Asset Manager needs to include fudge/general/file_system.inc.
Fixed Bug #5037: In rare situations, step3 fails with error Class Asset_Edit_Fns not found in trigger_action_edit_fns.inc.
Fixed Bug #5038: All system login designs,  especially EES, have html comments before doctype, which could force browser to quirk mode.
Fixed Bug #5040: LDAP user ID breaks dynamic parameter in the listing page, when array of asset IDs is passed to paramater map.
Fixed Bug #5048: Matrix ./?a=ASSETID hrefs with extra query and/or fragment appended at end not getting translated.
Fixed Bug #5049: Import script corrupts image varieties.
Fixed Bug #5053: Deleting div from Paint Layout using Asset Map causes fatal error.
Fixed Bug #5057: asset_lineage keyword returning incorrectly when in Paint Layout applied via type format of listing assets.
Fixed Bug #5066: Hierarchy metadata field is missing closing </table> tag in Simple Edit Layouts.

CMS

Fixed Bug #5071: Password Reset Page not working properly with Listing Page in the same screen.

LDAP

Fixed Bug #5014: LDAP User Group SQL issues.
Fixed Bug #5059: LDAP Bridge needs to filter invalid entries. 

Calendar

Fixed Bug #4389: Calendar event start_time keyword returns 12am for non-timed events.

Data

Fixed Bug #5058: LDAP Data Source asset not using attributes of External LDAP bridge asset set.

Google Maps

Fixed Bug #5039: Google Map asset adds unnecessary slashes for double quotes in the content of pop-up window div.

Web Services

Fixed Bug #5031: JS API getGeneral function argument for attributes doesn't return all attributes.

Funnelback Package

Fixed Bug #5020: funnelback_rebuild_cache.php running out of memory.


VERSION 4.2.1

Featured Changes
===================================


Currency Sign Option on the Ecommerce Form Page [ Feature Request #4997 ]
-----------------------------------------------------

This feature introduces a new Currency Sign option for the Ecommerce Form Page, allowing you to set the currency sign used on the ecom form. This option is set via a new field on the Display Formatting screen of the asset.

Previously, to change the currency type of an Ecommerce Form (for example, from Dollars to Pounds), users would be required to modify the sign on each individual format where it was used. This feature makes changing the currency type of the ecom form much more accessible, by reducing this process to a single step.

The value entered into the Currency Sign field is referenced through a new %currency_sign% keyword replacement, which is used on the format of keyword replacements like %form_summary%. This new keyword replacement is also used on the default Individual Asset Format and Item Format attributes on the Display Formatting screen. Modifying the value in the Currency Sign field will amend all instances of the currency sign on the Ecommerce Form Page. 

New Trigger Action to Delete an Image Variety [ Feature Request #5011 ]
-----------------------------------------------------

A new trigger action has been added to Squiz Matrix, allowing you to delete either a single image variety or all varieties under a specified image asset. This image asset can be configured via the interface of the trigger action or specified as the asset that fired the trigger.

The Delete Image Variety trigger action allows you to enter the name of the variety to delete or select to delete all varieties. The trigger action also provides parameter configuration to dynamically source the variety to delete.

New Data Source Asset for LDAP Search [ Feature Request #5021 ]
-----------------------------------------------------

The new LDAP Datasource asset allows user to search the LDAP entry based on the given attributes.

For a given search filter query, the result is outputted as the datasource's record sets.

Also, the asset has dynamic parameters functionality, which means user will be able to supply the values to the serach filter query via dyanamic variables, for example in search filter query "(&(uid=%%var1%%)(ou=%%var2%%))", "var1" and "var2" are dynamic variables.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #4976: SOAP JS API's Send Function Now Supports Function Declared Variable
Minor Enhancement #4991: Asset ID Remaps Allows Appended Query Strings
Minor Enhancement #5009: New Keyword to Print the Binary Contents of a File Asset
Minor Enhancement #5010: Automatic Upgrade Script Enhancement: Fix Permissions Runs Just Once
Minor Enhancement #5017: Rest Assets: Curl Error Logging on http_request Attribute


Core

Fixed Bug #4972: Languages appearing twice in the Accept-Language request header condition.
Fixed Bug #4978: Perf: Specific cache management settings using getParents.
Fixed Bug #4982: Old shadow links break asset map.
Fixed Bug #4983: Remove Web Path trigger action failure.
Fixed Bug #4985: Metadata field in schema with %metadata_field_X% as default value can throw PHP notices when cascaded to newly created asset.
Fixed Bug #4986: Simple Edit User doesn't get Workflow emails initiated via EES.
Fixed Bug #4987: Send Email trigger action does not preserve current asset attribute when rendering an asset to send.
Fixed Bug #4992: Display duplicate page contents when error occurred in SOAP Submission Action and Confirmation Page is enabled.
Fixed Bug #4993: JS API createFileAsset for Image file type fails due to new security patch.
Fixed Bug #4999: Insert DIV pop-up cosmetic problem in IE6/8.
Fixed Bug #5001: Asset Map binoculars seem to sometimes break with latest Java update(s).
Fixed Bug #5005: Parameter map value for parameter source for asset and current_user is returned by reference.
Fixed Bug #5007: Matrix text area css value white-space: pre-line causes issues in web kit browsers.
Fixed Bug #5013: Opening links from the admin area in a new tab redirects to the wrong location.
Fixed Bug #5015: Clear Squiz Cache trigger action should not repopulate.
Fixed Bug #5016: Runlevel not restored in a few places in Matrix.
Fixed Bug #5022: Run step3 resets the SQ_CONF_FORCE_SECURE_LOGIN_URLS to blank.
Fixed Bug #5027: Import/Export script breaks on non utf-8 characters.
Fixed Bug #5028: Stale Workflow Step emails sent to dependant assets with no workflow screen.


LDAP

Fixed Bug #4981: Group Members setting does not work for an LDAP User with parentheses in DN.

Data

Fixed Bug #4984: Cannot attach a Thumbnail to a Data Source asset.
Fixed Bug #4995: Cannot create a Data Source Graph.

Squid

Fixed Bug #5004: Squid Clear Cache tool has a PHP4 reference in it.

TRIM

Fixed Bug #4988: TRIM Saved Search serves old versions of file attachment.

Funnelback Package

Fixed Bug #5019: Language string in Display Options appears blank on a Funnelback Search Page.


VERSION 4.2.0

Featured Changes
===================================


Improvements in Squiz Suite [ Feature Request #4927 ]
-----------------------------------------------------

Various improvements in the way Squiz Suite will identify products and sync with other products.

Import Assets From XML, Export Assets to XML Tools [ Feature Request #4946 ]
-----------------------------------------------------

Version 4.0.0 of Squiz Matrix introduced the Import Assets From XML tool, performing actions passed to it from an XML file. This new feature enhances the functionality of this tool and also introduces the Export Assets to XML tool, allowing for the export of assets to XML templates.

These tools can be accessed from Squiz Matrix's System Tools screen.

These new system tools are the equivalent of Matrix's import_from_xml.php and export_to_xml.php scripts and can be used to migrate small numbers of assets from one instance of Matrix to another (e.g. implementation templates etc.).

On the Import Assets from XML Tool screen, select the XML file to use to import assets into Matrix (an example XML file structure is provided at /__data/asset_types/tool_import_assets_from_xml/files/example.xml). This tool now also supports tar files containing xml and physical files to import assets from.

To export assets to XML, on the Export Assets to XML Tool screen, select the root node to acquire the assets to export. The design, link and permission settings of these assets will be maintained so long as all assets are exported together.

These tools have been added to improve Matrix's functionality of exporting assets from one system and importing them into another.

matrixsqlclient.php, new tool for running commands against Oracle/Postgres DB [ Feature Request #4953 ]
-----------------------------------------------------

This feature introduces the matrixsqlclient.php script, a new tool to run commands against Oracle databases as an alternative to SQL*Plus. The script provides a simple and easy-to-use framework for simulating and formatting the results of database queries, as shown in the image below (click to enlarge).

Features of this tool include:

    * Tab completion (tables/columns)
    * Persistent command history
    * Straightforward table output
    * Full terminal emulation
    * Paginated output
    * Timing feature

The matrixsqlclient.php script is found in the /script directory of Squiz Matrix and is simple to use, only requiring the system root when run, as follows:

$ ./matrixsqlclient.php /path/to/system_root

This tool has been added to assist developers and system administrators when dealing with systems on Oracle databases.

New Current User Option for Set Role Trigger Action  [ Feature Request #4977 ]
-----------------------------------------------------

The Set Role trigger action allows you to apply a role on an asset, specifying the user(s) that is to perform the role. Previously, however, there was no option to specify the user who fired the trigger. This feature adds a new option to select the current user to perform the newly set role via a new Use Current User (one who fires the trigger) field.

This feature also introduces a new option to delete all current users on the role before assigning the new user. When the Delete all the Users from the Role before assigning new one field is selected, any existing users will be deleted before the new user is added on the role. This allows you to more accurately configure the users assigned to the role.

This feature has been added to improve the accessibility of the Set Role trigger action and provide users with greater control over setting roles within Squiz Matrix.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements
Minor Enhancement #3791: The connectivity.php script can be abused as a port scanner/DoS tool
Minor Enhancement #4914: Asset Manager: Performance Enhancement on generateGetParentsQuery()
Minor Enhancement #4938: Search Manager Performance Enhancement when Reindexing Over Contexts 
Minor Enhancement #4944: Avoid Calling printFrontEnd when Sending 304 Not Modified Headers
Minor Enhancement #4945: Improved Efficiency for session_cleanup.sh
Minor Enhancement #4949: purge_trash.php Script Now Cron Friendly 
Minor Enhancement #4964: generateGetChildrenQuery Performance Enhancements For Shadow Links
Minor Enhancement #4975: Improved URL Lookup Check for an Existing URL 
Minor Enhancement #4980: Send Email Trigger Action: allow multiple Recipient Asset IDs and Email Addresses in Recipient Source parameter map

Core
Fixed Bug #4834: Using DB connector in trigger action 'Execute Database Query' doesnt work for Oracle
Fixed Bug #4924: DB error when a design asset is notice linked to too many assets
Fixed Bug #4947: getParents() does not let you sort by all the field in sq_ast table
Fixed Bug #4951: URL screen on site assets should warn if input includes http(s)://
Fixed Bug #4957: Make SOAP Call Submission Action does not need to ignore CDATA nor use SoapVar, revert #4794
Fixed Bug #4967: Sharepoint download file feature breaks when file name contains space
Fixed Bug #4974: Calculate Average Rating including unrated comments

CMS
Fixed Bug #4952: "Unsaved changes" JS popup in IE when exporting Form Submissions
Fixed Bug #4958: Form Submissions Lose UTF-8 settings

Search
Fixed Bug #4937: Search manager attempting to write into database using "db" connection

Data
Fixed Bug #4971: XML user bridge throws fatal error when non-xml data url is supplied

Web Services
Fixed Bug #4933: JS Files for Soap API are out of date
Fixed Bug #4939: GetAssetTypeAttribute must have name passed in first for it to work properly.
Fixed Bug #4941: ApplyDesign needs more error checking
Fixed Bug #4942: http protocol issues in GetAssetFromURL and GetDesignFromURL functions
Fixed Bug #4943: Cascade param errors on SetWorkflowSchema function
Fixed Bug #4948: SOAP BasicSearch's ExcludeRootNodes does not always work.
Fixed Bug #4956: jsonObj string information returned incorrectly when trashing an asset
Fixed Bug #4979: Keyword replacement in Make SOAP Call Submission Action message will blank out $1

Funnelback Package
Fixed Bug #4970: Regular expression query type not working on thesaurus screen of Funnelback manager




VERSION 4.2.0 RC1

Featured Changes
===================================


Version numbers in __data URLs [ Feature Request #4808 ]
-----------------------------------------------------

It's difficult to manage cache expiration of statically served content, since this content is served blind by apache.

That is, you can edit a file, or CSS asset for example, but until the browser forces the request of a new version (further compounded by reverse proxies), the old version will continue to be served.

A common pattern for dealing with this is to add version numbers to the URL for the static file. Often, this is simply added as a query string for simplicity.

The effect being, when the file is updated and you bust the cache on the page, the URL for the file is different (since it's versioned), and so the browser gets the fresh version of the asset.

This can be a huge boost in caching strategies, allowing people to be more aggressive with their cache policy and empowering them to bust the 'perceived' cache on static files more easily.

TRIM Feature Request for Cron Job [ Feature Request #4875 ]
-----------------------------------------------------

Added ability to modify the (when) attribute of the saved search cron job through the details interface.

Also added a custom field in saved search to allow the result set to contain a text version of a records container called (Container Title)

	Remap Manager: Never Delete Enhancements [ Feature Request #4890 ]
	-----------------------------------------------------

	The Remap Manager's Never Delete option allows you to lock specific remaps from being deleted. This new feature improves this existing functionality by adding a variety of enhancements.

	A new option has been added to the Remap Manager to purge all remaps in the system except those marked as Never Delete. This option is enabled through a new field on the Details screen of the Remap Manager.

	Setting this field to Yes and clicking Commit will purge all remaps in the system that are not marked as Never Delete.

	The Web Paths screen of an asset would previously list its remaps but would provide no indication of whether the remap was marked as Never Delete or not. A new column has now been added for remaps on the Web Paths screen to display whether the remap is marked as Never Delete.

	Previously, delete fields were available to all remaps listed in the Remap Manager or on the Web Paths screens of assets. These fields were ineffective when used on remaps marked as Never Delete, however they were still accessible. These delete fields will now only be enabled for use on remaps not marked as Never Delete. The delete field will be disabled on remaps marked as Never Delete, as shown in the figure above.

	The Remap Manager's Never Delete Added Remaps? field will now be disabled by default, meaning that users must manually enable this option. This field was previously enabled by default; Existing installations using the previous default will retain their settings when being updating.

	Slight performance improvement in rebuilding cache [ Feature Request #4925 ]
	-----------------------------------------------------

	A slight performance improvement can be achieved by testing if the asset has no urls first up and finishing, since a url is needed to be indexed by funnelback.

	Improved permissions in Squiz Search [ Feature Request #4926 ]
	-----------------------------------------------------

	Improved permissions in Squiz Search will be handled by adding the systemid to all but the public key when retrieving the sitemap.


	Additional Changes and Bug Fixes
	=================================== 

	Minor Enhancements
	Minor Enhancement #4804: HTTP Request Header Acknowledges System Proxy Settings.
	Minor Enhancement #4869: Exporting Asset Attributes with CDATA Values.
	Minor Enhancement #4891: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4894: Asset::readAccess Makes Unnecessary Calls to the Workflow Manager.
	Minor Enhancement #4895: Don't Add Remap Option on the Add Web Path Trigger Action.
	Minor Enhancement #4912: Improved Performance of the Workflow Screen.
	Minor Enhancement #4913: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4916: System Asset Links Locked by Default.
	Minor Enhancement #4923: Enhancement: When Painting 404 not found Page and Sending Cacheable Header is Enabled, Expiry header is Not Set.

	Core
	Fixed Bug #4856: Replace Text 'selected text only' not working in IE7+8.
	Fixed Bug #4881: Date/Time form output.
	Fixed Bug #4885: Daily cron jobs run twice.
	Fixed Bug #4886: "Update lookups" HIPO Job in File::saveAttributes() creating issue.
	Fixed Bug #4889: Incorrect default when attribute on Sync Product cron job.
	Fixed Bug #4896: Trigger action "Set Metadata Value" fails when using parameter map.
	Fixed Bug #4903: Online Quiz List Format field description lists unavailable formats.
	Fixed Bug #4904: Typo on design_area_asset_lineage screen.
	Fixed Bug #4905: Quotation button in WYSIWYG view, unquote results in escaped html.
	Fixed Bug #4906: 'AssetStatusUpdate' event broadcasted but onAssetStatusUpdate() never executed.
	Fixed Bug #4907: Error when changing content type in a non default context.
	Fixed Bug #4910: When an asset is linked to a big number of parents, you will easily get Oracle error ORA-01795: maximum number of expressions in a list is 1000.
	Fixed Bug #4915: Metadata value trigger condition does not consider keywords.
	Fixed Bug #4924: DB error when a design asset is notice linked to too many assets.
	Fixed Bug #4930: Global Search and Replace doesn't replace metadata.

	CMS
	Fixed Bug #4878: ORA-01795 on Site Map asset.
	Fixed Bug #4880: Insert image doesn't remember location of last image variety uploaded.
	Fixed Bug #4892: Small typos in Remote Content asset Details screen.
	Fixed Bug #4901: Using a nested asset in simple edit layout which has an arbitrary paint layout set, will throw PHP notices.

	Calendar
	Fixed Bug #4899: Recurring calendar event instance date keyword bugs.

	Web Services
	Fixed Bug #4877: JS API Fails on https only domains.
	Fixed Bug #4909: JS API setAssetStatus permission denied for user with write permissions.
	Fixed Bug #4920: JS API not escaping metadata correctly.
	Fixed Bug #4922: JS API returns invalid JSON.

	Funnelback Package
	Fixed Bug #4911: Contextual Navigation links not working with Funnelback Server Search.
	Fixed Bug #4921: The Sitemap XML generated by Matrix is not escaping nbsp chars.

