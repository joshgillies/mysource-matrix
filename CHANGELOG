MYSOURCE MATRIX CHANGELOG

VERSION 3.24.1

Featured Changes
-----------------------------------

Trigger Condition: Metadata Set
	This Trigger Condition allows selection of a Metadata Field and will evaluate to FALSE if the value is empty or is set to the default value of the field.


Trigger Action: Set Force Secure
	This Trigger Action sets the "Force Secure" setting on the firing asset, analagous to setting this from the "Settings" screen of the asset. The three options - "Force secure protocol (HTTPS)", "Force insecure protocol (HTTP)" and "Allow all protocols" can be selected here.


Trigger Event: After Asset Built
	A new event "After Asset Built" can now be captured via Triggers which signals when an asset has been finalised after creation from an Asset Builder or Account Manager Page.

 Assets which are finalised have in place all required metadata values and paint layouts as appropriate. This differs from the "Asset Created" event, which is fired before the asset is finalised.


Trigger Condition: Metadata Field Updated
	This new Trigger Condition can be used within Triggers to perform actions after a candidate Metadata Field value has been updated. 


Link Target keywords for Link Asset
	Asset based keywords in the format %link_target_xx% have been added which return the keywords of the linked asset. For example, %link_target_name% will return the name of the linked asset.

A new keyword %link_relation% has also been introduced which will return the value of the "Link Relation" attribute of the Link asset.


Keyword Modifiers
	Keyword modifiers, similar to those supported on the MySource Mini, have been added to Matrix. These are represented as extensions to existing keywords and are denoted by the presence of a caret character (^) and modifier keyword.

For example:
    %[asset_keyword]^[format]%

    %asset_url^urlencode%  : The URL-encoded equivalent of the asset's URL
    %asset_name^uppercase% : The asset's name in uppercase
    %asset_name^charcount% : The number of characters in the asset's name


Asset Link Locking
	Checkboxes are provided on the "Linking" screen to prevent asset links from being manipulated.
When configured on an asset, this can effectively prevent the asset from being moved elsewhere within the system. This only applies to child assets so the related parent asset may still be moved or deleted.


Read-only Source View for WYSIWYG, Raw and Markdown Content Types
	A new button has been added to content type areas to allow the underlying source to be viewed when no locks are acquired on the asset. Clicking the button will toggle between the source and preview content.


Tag Listing Page
	This new asset, similar in operation to Asset Listing Page, provides an easy way to create Tag Clouds from assets tagged with Thesaurus Terms.  A Root Node is selected from which tags will be compiled from its child assets. All asset types are selected which match the "Link Types" selected from the "Details" screen.

The resulting page is a list of applied tags, sorted by the number of assets to which each tag applies. The combined tag weighting across the candidate assets is provided via the Display Format keyword %tag_size%. This can be used in conjunction in an implementation to adjust the size of each tag for a Tag Cloud display.

Tags displayed can be filtered by a particular Thesaurus and limited by a maximum tag weighting, as set from the "Details" screen.


JS API: Asset Type Filter and Attributes
    Assets created by the "createAsset" action can now be restricted by one or more exact asset types. It is also possible to pass in attributes other than the asset name when creating assets.

The attribute names and values are supplied to the JS API "createAsset" action in the following notation:
eg; (For a News Item)
    contact_name=Fred&contact_phone=0123

Will set the Contact Name to "Fred" and the Contact Phone to "0123"

The return of result codes via JSON can now be disabled to prevent end users seeing information such as asset IDs. This and the above modifications are controlled from the "Details" screen of the JS API asset.

These modifications have been graciously contributed by JS API author Nic Hubbard.


Memcache Storage System
	Matrix cache entries can now be stored within Memcache rather than the default SQ_CACHE directory specified in main.inc.
Clearing of Memcache-based Matrix caches cannot be done on an asset basis, due to lack of search support within Memcache.

A memcache.conf file must be defined in the data/private/conf directory to enable Memcache storage. A template file memcache-inc.sample is created in this directory upon running the step_01 installation script.


Memcache Asset Locking System
	Matrix lock entries can now be stored within Memcache rather than the sq_lock database table. The configuration required to enable the Memcache Storage System (detailed above) is a requirement for this functionality.

Forcibly acquiring locks, mass changing of lock ownership and notification of active lock ownership is not available under Memcache Asset Locking due to current Memcache limitations.


Base Contexts per URL
	Site URLs can be configured with a "Base Context" which defines the initial context used for assets created underneath. This is configured from the URLs screen of Site assets.


Context Previews
	Content can now be viewed on the "Preview" screen of an asset under a specific context by selecting the context from a drop-down list. This performs similarly to existing lists which allow previews to be displayed under different designs.

An HTTP GET variable SQ_CONTEXT_NAME can be used similarly to SQ_DESIGN_NAME to show content temporarily in a different context away from the "Preview" screen.


Additional "Contextable" Asset Types
	Elements of assets such as Calendar Events, Site Map and those that list assets via Listing Engine (Search Page, Asset Listing etc.) now have either "contextable" elements or are aware of asset types which may provide alternate contexts.

The most likely implementation of context aware assets would be to provide language varients for some content (eg; bodycopy) and attribute elements.
These modifications ensure that context-specific data is loaded from cache, where appropriate, or sourced via the Context System.


Requirements Checking script

    A requirements checking script, install/check_requirements.php, has been added to verify the program requirements of a Matrix installation against the server configuration. This script is executed from the Matrix system root directory as follows:

    php install/check_requirements.php /path/to/matrix

Required third-party applications, PHP extensions and PEAR packages will be notified, as well as suggested utilities which provide certain optional functionality within Matrix.


HTML Tidy: Deprecated Bold and Italic tag conversion
	Any <b> or <i> elements will be converted to <strong> and <em> respectively when HTML Tidy is enabled in WYSIWYG content containers.


REST Assets
	Assets which allow communication with web services that expose themselves using REST (Representational State Transfer) methods are now available in the Web Services Package. This set of assets include Page assets that display the results of calls to RESTful resources, as well as a Form Action and Trigger Action that can execute such a resource.

A REST Manager caches requests based upon the cache settings configured for these assets as set on the "Details" screen. Clearing the cache of REST Manager will clear cached request and response data.


Additional Changes and Bug Fixes
-----------------------------------

Core
Fixed Bug #3890: Trigger action set metadata breaks trigger when asset number incorrectly specified
Fixed Bug #3898: Creating an asset from the backend (in dev) breaks memory limit
Fixed Bug #3901: Unable to preview files when using static content server
Fixed Bug #3904: HIPO does not work with UTF8 asset names
Fixed Bug #3905: Force secure option strips the url if the option is different from parent
Fixed Bug #3907: Cannot clone CSS Design files
Fixed Bug #3908: Create empty text file feature does not work due to permissions
Fixed Bug #3911: Cloning an asset with link value will get error
Fixed Bug #3913: Custom Form - Day of the week incorrect
Fixed Bug #3914: Hot key in WYSIWYG moves focus to document to
Fixed Bug #3915: Export Thesaurus Terms doesn't export Notes properly
Fixed Bug #3916: Export Files tool won't work with a slash in asset name
Fixed Bug #3917: Undefined index: never_delete
Fixed Bug #3919: changed content notice when changing contexts
Fixed Bug #3922: .dot file asset served as text/plain
Fixed Bug #3924: Moving assets - will not sit at bottom of a list
Fixed Bug #3926: WYSIWYG adds invalid markup
Fixed Bug #3927: Form email address question throws error for public user
Fixed Bug #3938: backup script broken for local Oracle DB
Fixed Bug #3939: Settings Screen - Can't click "Now" button to set date
Fixed Bug #3945: Saving multiple attributes sometimes uses wrong is_contextable value for some attributes
Fixed Bug #3948: Cannot clear cache by root node in Cache Manager
+ File Size suffixes now use uppercase notation

Bulkmail
Fixed Bug #3925: Asset listing dynamic root node does not work with Bulkmail job send

Calendar
Fixed Bug #3935: Use %edit_link% in each event page of calendar will get error

CMS
Fixed Bug #3823: Switching nested arbitrary paint layout

E-Commerce
Fixed Bug #3893: Order details not saved until Payment Gateway success code received

Search
Fixed Bug #3863: Search pages do not always XHTML Validate
Fixed Bug #3887: Global weights not overridden in some situations
Fixed Bug #3891: Search Manager fails silently when adding indexable content



VERSION 3.24.0

Featured Changes
-----------------------------------

iCal Data Source
	This new Data Source accepts a URL or server file supplied in iCal-format and exposes the events as shadow assets.
The Summary information of each event is used to name each event under the Data Source. This can then be used like other Data Source assets in Asset Listings. 


HIPO Job optimisations on Squiz Server
	The previous change to save progress information for HIPO Jobs run on Squiz Server every 1% has been removed. Progress information is now no longer saved for such jobs.


Log to System Log support
	A new option, "Log Errors To Syslog" has been added to System Configuration, to specify whether Matrix errors are to
also be logged to the operating system log. The "facility" used for logging can be specified here as well (ie; "User", or "Local 0..7").

The "System Name" will be used as a System Log identifier, but this will default to the Matrix system string "Squiz MySource [version] (Matrix)" if the name is not specified. 


Multiple E-Commerce Carts
	The E-Commerce Cart asset now stores contents per Checkout Page within the user session instead of just one system-wide cart.


Search Manager: Multi-Context Searching
	Context-aware data is now indexed and searches performed within a context now return results stored against that context.


Roles query optimisations
	Some further query optimisations have been accomplished which may increase general performance when Roles are enabled.


Listing Engine: Customisation of pagination links and text
	Two new attributes, "Page Link Format" and "Current Page Format", are available in assets such as Asset Listing and Search Page to allow the pagination text and links to be customised. The %page_link% and %page_number% keywords can be used in these attributes to customise these links.

For example:
Page link format: <a href="%page_link%" class="page-link-class">Page %page_number%</a>
Current page format: <span class="current-page-class">Page %page_number%</span



Additional Changes and Bug Fixes
-----------------------------------

Core
Fixed Bug #3812: LDAP users cannot be unlinked from groups when safe trash enabled
Fixed Bug #3817: CSVs stored as File assets are not served from Matrix with correct Content Type headers
Fixed Bug #3820: remove_assets_of_type.php : Postgres 8.3 feature breaks script and call to wrong DAL function
Fixed Bug #3826: WYSIWYG in Firefox JavaScript error
Fixed Bug #3827: WYSIWYG bug, replace text tool fail to replace double spaces in selected text
Fixed Bug #3835: Notice links Lineage shown when clicking on binoculars icon
Fixed Bug #3843: WYSIWYG bug: Visual aid tool doesn't work properly in IE8
Fixed Bug #3845: Some asset keywords not shown in Metadata Field pop-up
Fixed Bug #3846: Invalid XHTML produced by metadata select field on search form
Fixed Bug #3849: Script remove_assets_of_type.php leaves unwanted table entries
Fixed Bug #3856: Unable to create new Thesaurus Term asset in 3.22.3 
Fixed Bug #3858: Running step 3 while upgrade throws error
Fixed Bug #3864: Rebuilding Link Tree breaks triggers
Fixed Bug #3865: Design parse file not editable in IE 8
Fixed Bug #3866: Locks not deleted when an asset deleted
Fixed Bug #3877: Matrix will create and retain links in DB if asset fails to get created
Fixed Bug #3878: WYSIWYG Links (generated by Insert Link) traverse lines
Fixed Bug #3886: Extra links created on failed deletion attempts
Fixed Bug #3888: Database transactions cannot be managed across connections
Fixed Bug #3889: remove_internal_messages.php script does not delete messages / gives error
+ Assets used as "Not Found" (HTTP 404) error pages can now evaluate %globals_site_xx% keywords and Parameter Map options
+ The WYSIWYG Plugins listed on the Global Preferences screen and User Group Preferences are now ordered alphabetically by type code for easier management 

Calendar
Fixed Bug #3825: Prev and Next keywords should use getURL()

CMS
Fixed Bug #3838: Oracle ORA-00936 error shown in backend
Fixed Bug #3870: Nesting an asset in Simple Edit Layout produces PHP error
Fixed Bug #3880: Assign by reference in cron_job_manage_incomplete_submissions.inc

Data
Fixed Bug #3816: Hit count listing - missing depth attributes

Google Maps
Fixed Bug #3844: Too many geocode request from google map asset causes page to stall

IPB
Fixed Bug #3829: IPB user authentication broken
Fixed Bug #3834: IPB bridge getAsset function not compatible with bridge interface
Fixed Bug #3836: Mysql db in IPB package doesn't work

Search
Fixed Bug #3813: Backend search with a search string containing a slash causes an error
Fixed Bug #3855: Search page %next_result_page_href% doesn't navigate to last result page



VERSION 3.24.0 RC1

Featured Changes
-----------------------------------

Global Keywords for cookie values
	A set of dynamic Global Keywords in the format %globals_cookie_XX% can now be used to return the value stored in the corresponding cookie variable. 


DataCash and SagePay Payment Gateways
	Support has been added for payments made via the DataCash and SagePay payment gateways.

The configuration of each gateway is similar to PayPal in that each requires PHP code from the respective gateway provider to be sourced independently and referenced in each Gateway asset.

A "Test Mode" switch and specification of card types which require 3DS authentication are among some of the options available in these Gateway assets.

These Gateway assets include support for the Address Verification Service (AVS) and Card Verification Value (CVV or CV2) security layers.
For the Sage Pay gateway, the "3-D Secure" layer of security is now optional.

Also, the "Pass-through Variables" features mentioned below are now handled by these two gateways. The supported pass-through variables are shown on the Details screen. Enter the variable names to be used on this screen, then match them with the variable keys entered on the E-Commerce Form Page's Ecommerce Rules screen.


DataCash Payment Gateway: Specification of Currency Type
	A currency type (eg; Australian Dollars) can now be specified on the "Details" screen of the DataCash Payment Gateway, as the currency used for transactions.


SagePay Gateway: Month/Year drop-downs
	New keywords have been added to show a drop-down to select card start and expiry dates. One keyword for month and one for year is available for each.

The year dropdown keywords support a modifier to set the number of years before the current date the start year drop-down should show, or after the current date the expiry year drop-down should show. By default, years are shown from the current year to 5 years backward or forward.


Design Area Condition: Asset Type
	A Design Area Condition "Asset Type" has been added to control content in a Design parse file depending on the exact type of an asset. Multiple asset types may be specified and this can be configured further or overridden under Design Customisations.


Support for class and ID attributes in WYSIWYG Anchor Links
	The "Status Text" item in the anchor pop-up has been replaced with two fields to control the CSS class and ID attributes for the link. 


Additional Asset Keywords in Metadata Fields
	The Asset-level keywords %asset_name_linked% and %asset_short_name_linked% are replaced in Metadata Field values where encountered. 


Asset Map Icon Keyword
	A Global and Asset-level keyword, %asset_type_icon% and %globals_icon_xx%, have been added which when used print the Asset Map icon of the current asset type, or that of a certain type (eg; %globals_icon_page_standard% for the Standard Page icon). 


User Locks Details
	The first 100 locks held by a user can now be determined from the "Details" screen of Matrix User asset types. 


Delete Bulkmail Users Tool: Enhancements and new related Trigger Action
	A new Trigger Action "Delete Bulkmail User" has been added. This is similar to the existing Delete Bulkmail Users Tool however accepts a comma-separated string of email addresses from which to operate.

An option to move Bulkmail Users that would have been deleted into a specified Folder or User Group is included in the new Trigger Action and added to the existing Delete Bulkmail Users Tool. 


E-Commerce Payment Completed Trigger Event
	A generic E-Commerce Payment Completed Trigger Event has been added to provide Trigger functionality for transaction postbacks. This has been implemented for transactions originating from a DataCash Payment Gateway. 


HIPO Job Optimisations on Squiz Server
	HIPO Jobs have been modified to save status information every 3% of the job's length. Progress information is now saved every 1%. These optimisations are only applicable when run on Squiz Server.

These changes reduce database queries performed during processing and should therefore increase performance of job processing for large jobs.


Negated Link Value Filtering for Asset Listings
	New attribute added that specifies if assets returned should match or be different to the supplied link value.


Keyword Replacements in Regular Expression Keyword Condition
	Asset-level keywords such as %asset_name% can now be used in the Regular Expression Keyword Condition. A new option, "Replace keywords in pattern", is provided to enable this functionality.


Send Email Trigger Action: Support for Global Keywords
	Global Keywords such as %globals_asset_xx% and %globals_site_xx% can now be used in the "From", "To", "Subject" and "Body" fields on the Send Email Trigger Action.


Modifications to Create Clone and Link to Asset Trigger Action
	It is now possible to link to and clone underneath the Broadcasting asset in this Trigger Action. 


System Config Option: Remove Self Links
	This new System Config setting allows you to remove links that point to the currently-displayed asset, when this config setting is enabled.

This is done at a global level, and also includes links with query strings, or special URL suffixes recognised by Matrix (such as the admin or simple edit interface suffixes).


Create Bodycopy Containers in Safe Edit
	Creation of Bodycopy DIVs and Tables in Safe Edit is now supported again. If the Safe Edit is cancelled, the containers created during Safe Edit are moved to the Trash.


New Trigger Action: Set Special Page
	This new trigger action allows you to set the firing asset as the specified "special page" - ie. Index Page, Not Found, or Archived Asset - of either the passed site asset, or all of the sites the firing asset is located.


Public User Session Created Trigger Event
	This new trigger event fires when the Public User session is first created. This allows trigger actions to be fired when a user first visits the site.


Send Email Action: New Dynamic Parameter
	The Send Email trigger action allows you to override the Asset to Send option with either the firing asset, or a value set from a Parameter Map. 


E-Commerce Form: Pass-through Variables
	The concept of "pass-through variables" has been added to the E-Commerce Rules screen of the E-Commerce Form asset. These variables are defined by the Payment Gateway, and the values of the questions can be passed to the gateway for use in processing, such as providing an address for Address Verification Service (AVS).

The following attributes have also been added to the Order asset.
They will be filled in if the Payment Gateway returns them:
	- Transaction ID
	- Billing Name
	- Billing Address
	- Delivery Name
	- Delivery Address


Manage Child Links on Linking Screen
	The Linking screen now contains a drop-down that allows you to switch between showing the parents of the current asset (as was previous functionality), and the children.

When the view is set to "Linked Children", the options allowing you to create and delete links also change, allowing you to manage an asset's child links instead of its parent links.

This change of setting is not saved, so the Linking screen will always default to showing an asset's parents.


XML Data Source improvements
	The following additions were made to the XML Data Source asset:

	- The concept of Dynamic Inputs, currently available in DB Data
	  Source, is now available. The Dynamic Inputs screen allows users
	  to create variables whose values are set through Parameter Map
	  settings. These can then be embedded into the XML Feed URL using
	  the format "%%VariableName%%".

	- You may now enclose selected tags in a CDATA section, if the
	  XML returned from the feed does not do that for you. The Details
	  screen accepts a comma-separated list of tags whose contents will
	  be wrapped in a CDATA section. These tags must already be defined
	  in the "Tag Names" list above it.

	- Feeds with multiple copies of a tag in a record are now supported.
	  The asset merges the copies together with a delimiter, which can
	  be specified on the Details screen. 


JS API Asset updates
	The JS API asset now supports a much larger range of actions, including asset creation, linking functions, locking, permissions and getting of parent/children. An asset can now be sent to the API using either asset ID or URL. The "General Info" function now includes an attribute for an asset's Web Path.

These further modifications were again graciously contributed by Nic Hubbard.


Delete Permission through Trigger Actions
	The Set Permission Trigger Action now allows you to remove a permission from an asset, alongside adding an "apply" or "deny" permission.


New Asset Type: "Donation" Product
	This new asset is a generic product-type asset that can be added to carts to represent a generic donation.


New Asset Type: Link
	This new asset represents a link to a URL or another asset. Unlike Redirect Page, this will not redirect when its contents are printed, but the link will be displayed instead. An optional Relation ("rel") attribute can be added to the link.


Backup Script modifications

	The "scripts/backup.sh" Matrix backup script now prints everything to STDERR (error output stream) instead of STDOUT.
The backup file generated is now compressed using gzip piping through tar, if supported by the system. The "cache" directory is now included in the backup but not its contents. Support has also been added for Solaris "/bin/sh" syntax.

An option has been added to the Matrix Backup Script - scripts/backup.sh - to allow a backup filename to be specified. For example, running the following command will create a backup file in the filesystem location /path/to/backup/folder/filename.tar.gz:

	./scripts/backup.sh /path/to/matrix /path/to/backup/folder filename.tar.gz

Please note that the backup folder must be included as the second argument otherwise the filename will be mistaken for the folder name. The file extension - either ".tar.gz" or ".tgz" - must be included in the filename otherwise the file will not be assigned an extension.


SOAP Server: Workflow operation changes in Workflow Service

	A new operation "SafeEditAsset" has been added to the Workflow Service in SOAP Server. This allows a Live asset to enter Safe Edit. It is also now possible to specify Workflow Messages for assets in Workflow via the "ApproveAssetInWorkflow" and "CompleteWorkflow" operations. 
