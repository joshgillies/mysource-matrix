SQUIZ MATRIX CHANGELOG

VERSION 4.12.2

Featured Changes
===================================

Import From XML Script Enhancements [ Feature Request #6018 ]
-----------------------------------------------------

The Squiz Matrix Import From XML system script, is used to perform actions passed to it in the form of an import file (this can include the creation of assets, setting metadata, or any other actions that are available when creating a trigger).

This feature addresses the following two issues or limitations with the import_from_xml.php script, providing improvements to its performance:

1. Previously, when using this script, invalid links could be left when the import process was aborted. This was due to the entire script being run as a single transaction. This would require Matrix's linking system to abort the entire transaction, leaving any links in the database that it had previously inserted as reserves.

This feature modifies this script to use single transactions for individual actions, rather than for the entire script. This will eradicate the risk of invalid links when the import process is aborted, especially when dealing with larger imports.

Additionally, this change means that, as assets are now created while the script is running, failure at any point will not negate its previous actions. So, for example, if your script has been running for a significant period of time and fails towards the end of its run, all previous work by this script will be preserved. Users will only need to rerun the script for the actions that failed to initially complete.

2. Previously, this script would create all assets within a single process. As a result, the script could potentially consume extensive memory on the database, leading to memory failure.

This feature modifies the way this script creates assets so that each import action is processed in a single thread, closed when the action is completed. This will ensure that memory used by each action is freed once it is finished.

Please note, however, that this adjustment may result in the script running slower than previously. This is due to the overhead of forking actions to each new thread. Despite this, we believe this fix was necessary and improves the processing of this script, which will now be able to handle larger import jobs that it previously couldn't. 

SOAP API: New Function to Set the Web Path of an Asset [ Feature Request #6044 ]
-----------------------------------------------------

Squiz Matrix's SOAP API Asset Service manages the asset functions of the SOAP Server including the creation and editing of assets, statuses and tags.

This feature introduces the new setAssetWebPaths() function to this asset service, to set the web path(s) of an asset. This function takes the following parameters:

- AssetID: the ID of the asset to set the web path(s) of.
- Path: the web path to set on the asset.
- AddRemaps: whether or not to automatically add remaps for web paths that are changed.  

An example usage of this script is as follows:

<SetAssetWebPaths xmlns="~/_web_services/soap">
<AssetID xsi:type="xsd:string">1598</AssetID>
<Path xsi:type="xsd:string">home</Path>
<AddRemaps xsi:type="xsd:boolean">false</AddRemaps>
</SetAssetWebPaths>

Save and Resume Progress on the Import From XML Script [ Feature Request #6062 ]
-----------------------------------------------------

The Squiz Matrix Import From XML system script, is used to perform actions passed to it in the form of an import file (this can include the creation of assets, setting metadata, or any other actions that are available when creating a trigger).

This feature adds new save and resume progress tools on this script, allowing you to resume the import process of this script if it is previously terminated, for example, by force cancellation or fatal error.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6013: Improved Error Handling When Uploading an Empty Design Parse File.
Minor Enhancement #6017: Asset Counter Report Now Supports Shadow Asset Counts.
Minor Enhancement #6036: JS API Enhancement to the getRoles() Operation. 
Minor Enhancement #6047: Improved Performance of Usage Screen on Designs and Paint Layouts. 
Minor Enhancement #6053: Submissions Will No Longer Log Attributes Changes when Submission Logging is Disabled. 

Core

Fixed Bug #5997: Mollom sometimes fails and only renders half of a page
Fixed Bug #6015: Rollback Management Tool interface has a useless Effective Date selector.
Fixed Bug #6020: Matrix will throw warnings if assets selected as excluded root nodes are deleted.
Fixed Bug #6021: Update Twitter Status trigger action cannot authenticate.
Fixed Bug #6026: Remote Content Page shares same cookies for different users, regression bug.
Fixed Bug #6028: Minor error handling fix, undefined effective_designid error when logging.
Fixed Bug #6029: WYSIWYG's Table Editor plugin adds border colour "#99CCFF" style to the table cells.
Fixed Bug #6032: Importing files using File Bridge import tool in the backend throws warnings. 
Fixed Bug #6033: Bug when purging a workflow schema that is still applied to assets and running.
Fixed Bug #6034: A pagination issue in the Role Assignment screen for User/User Group. 
Fixed Bug #6037: Design Customisation should be exclusively linked to design. 
Fixed Bug #6040: Show Diff preview issue if diff markup tags wrap unclosed tags. 
Fixed Bug #6042: Error in Update Twitter Status trigger action. 
Fixed Bug #6049: Keyword modifiers not working on global keywords in no results bodycopy. 
Fixed Bug #6050: WYWIWYG metadata Simple Edit value does not save to backend. 
Fixed Bug #6052: Changing web path can create an infinite remap loop. 

CMS

Fixed Bug #6059: Cannot delete the "Future Report Regeneration" cron job in Links Report.

LDAP

Fixed Bug #6031: LDAP Data Source doesn't handle attributes that exist in one object but not another.

Data

Fixed Bug #6016: Trigger - Execute DB Query wraps keywords with too many single quotes.

Web Services

Fixed Bug #6046: SOAP deleteAssetLink() does not remove web path if deleting last asset link.


VERSION 4.12.1

Featured Changes
===================================

Filter Frontend User Input Now Supports Metadata Text & WYSIWYG Inputs [ Feature Request #5941 ]
-----------------------------------------------------

The Filter Frontend User Input global preference allows you to filter front end user inputs in forms such as Asset Builders and Custom Forms. This filtering will strip script tags and keyword replacements, and escape html from user inputs.

This option improves the security of your system by eradicating the risk of such inputs that, in rare cases, can affect the backend operations of Squiz Matrix, causing unexpected and potentially adverse behaviour.

This feature extends this functionality to also include both Text (both single and multiple) and WYSIWYG metadata field types when filtering user inputs. When this option is enabled, any user inputs of these types will be filtered to protect your system.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5927: Improved Performance on LDAP Bridge's getParents() Function.
Minor Enhancement #5952: New SSL Verification Option on the Remote Content Asset.
Minor Enhancement #5956: Custom Form Sections Now Respect Parent Form's Asset Status.
Minor Enhancement #5968: Multiple NOTICE Linked Child Images Now Permitted on Assets.
Minor Enhancement #5969: Global Keyword Replacement Support on Custom Form Default Values.
Minor Enhancement #5972: Enhancements to the WYSIWYG Editor's Handling of Quote Characters.
Minor Enhancement #5973: Disabling Squiz Matrix's Proxy Settings Sets the libcurl Proxy Parameter to Null.
Minor Enhancement #5978: Improved Handling of WYSIWYG Formatting on Multiple Block Elements.
Minor Enhancement #5984: Enhancements to the Interface Mode Trigger Condition.
Minor Enhancement #5985: Autocomplete Attribute on E-Commerce Payment Gateway Fields.
Minor Enhancement #5986: Problematic Char Report on system_integrity_fix_char_encoding.php Script.
Minor Enhancement #5987: Cron Manager: Set Max Future Year.
Minor Enhancement #5988: Force Secure Option Maintained on Cloned Assets.
Minor Enhancement #5994: Improved Error Handling on the as_asset Keyword Modifier.
Minor Enhancement #5998: Security Enhancement: APIs Blocked from Returning Passwords.
Minor Enhancement #6005: SOAP API: GetAssetAvailableKeywords for Asset Type Code.

Core

Fixed Bug #5908: Cache Manager root node specific issues when clicking the 'Customize' label.
Fixed Bug #5932: Minor issues with Show Diff option on the Preview screen.
Fixed Bug #5951: Test Run on a SOAP submission action throws errors.
Fixed Bug #5958: Saving table properties with empty values creates invalid code.
Fixed Bug #5962: Hit Count Asset Listing Page - more than one root node.
Fixed Bug #5967: Single quote/apostrophe in the alt attribute of an image breaks the Insert Image plugin. 
Fixed Bug #5975: Deleting a listing page's Group Format folder breaks the page. 
Fixed Bug #5976: replace_url.php throws uncaught exception on some sites. 
Fixed Bug #5977: WYSIWYG Insert Link plugin not uploading link's value when asset type is changed. 
Fixed Bug #5979: Unable to create Custom Form with a default metadata value referencing the asset. 
Fixed Bug #5981: Lookup updates result in missing URLs in Rollback mode. 
Fixed Bug #5990: Filter Frontend User Input throws errors in Asset Builders when entering matrix keywords.
Fixed Bug #5992: Style attribute unnecessarily added when editing table properties in the WYSIWYG editor. 
Fixed Bug #5995: Typo in the System Configuration - Global Preferences screen for Comment Preferences. 
Fixed Bug #5996: Clear Squid Caching tool should always clear a top level URL with a trailing slash. 
Fixed Bug #6008: Getting lineage for asset linked to more 1000 parents throws error in Oracle system. 
Fixed Bug #6010: SOAP can not load external entity error while loading WSDL file. 


CMS

Fixed Bug #5993: Keywords not working in Custom Form's email option "Reply-To" field.   

Search

Fixed Bug #5991: Empty stored search issues.

Calendar

Fixed Bug #5980: Rolling Calendar Page has 'Array' written at the top.

E-Commerce

Fixed Bug #5964: Keyword replacements in the E-Commmerce REST Resource action always includes a tax value. 

Data

Fixed Bug #5970: The RSS Data Source asset unexpectedly removes white spaces. 

Web Services

Fixed Bug #5945: Inconsistency with the parameters that are passed to JS API functions (advanced mode).
Fixed Bug #6000: getKeywordsReplacements() used within a batchRequest() won't take array of keywords.
Fixed Bug #6009: OAuth invalid signature for REST calls with body parameter containing ampersand (&).


VERSION 4.12.0

Featured Changes
===================================

Google Maps Package Updated to Google Maps API Version 3 [ Feature Request #5909 ]
-----------------------------------------------------

Squiz Matrix's Google Maps package allows you to embed Google Maps within your site that your users can view and navigate with. These maps can contain a variety of map type options, plotted locations and other functionality. 

Google is currently in the process of depreciating version 2 of its Google Maps JavaScript API after the new release of version 3 of the API. As a result, the Google Maps package within Matrix has been upgraded to this release.

Changes resulting from this upgrade include:

   A number of configuration options on the Details screen of the Google Map asset are now automated by Google Maps and are no longer available.
   The Street View overlay functionality (including the related keyword replacements) are no longer available. The Google Maps API now uses the familiar peg man feature to initiate Street View.
   Google Earth is no longer supported. This includes the Moon Elevation, Moon Visible, Mars Infrared and Sky Visible map types. These options will no longer be available for selection.
   Mouse zoom scrolling is no longer customisable, it is enabled by default.
   The map initialisation code has been modified.

The resulting functionality is a more accessible and intuitive mapping experience.

Most users should be able to continue using their existing implementations without complication. Users using functionality that has been removed, however, should review their implementations and make any necessary modifications before upgrading your system.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #4989: Enhancements to Metadata WYSIWYG Field Type.
Minor Enhancement #5234: Folder Linking Under Data Record Assets.
Minor Enhancement #5769: Image Asset __data and local URL enhancements.
Minor Enhancement #5917: Context Synchronisation on the JavaScript API.
Minor Enhancement #5923: Script Password Check Enhancements.
Minor Enhancement #5935: New Keyword on the E-Commerce 'Call REST Resource' Completion Action.
Minor Enhancement #5963: New Ignore Editable Attribute Parameter on the setMetadata() Function.

Core

Fixed Bug #5827: Can't use WYSIWYG metadata when there are multiple type code choices on Asset Builder.
Fixed Bug #5899: Lookup Settings screen assetid unchecked.
Fixed Bug #5903: Set Session Var Trigger Action , current asset ID error. 
Fixed Bug #5916: Thesaurus Term linking issues.
Fixed Bug #5920: Import from XML tool breaks on CR.
Fixed Bug #5931: Cache folder hashing method breaks with a low num_cache_dirs setting.
Fixed Bug #5938: Deleting just one of the many Thesarus Term links removes the asset tagging.
Fixed Bug #5940: Cloning multiple assets sorts them backwards under parent.
Fixed Bug #5942: Issue using an 'asset_lineage' design area along with login page.
Fixed Bug #5943: If the cron job is scheduled to run immediately, it will never be picked up under certain scenarios.
Fixed Bug #5947: XML Data source dynamic inputs re-encodes, re-emerging bug.
Fixed Bug #5949: Paint Layout ID keyword does not reset global SQ_PAINT_LAYOUT_ID after printing.
Fixed Bug #5953: Workflow approval invitation not sent if approver's requests workflow.
Fixed Bug #5957: The system_update_lookups.php script is lengthy when preparing the assetid list to update lookups.
Fixed Bug #5960: Remote content page got errors on POST/GET variables from array style input. 

Search

Fixed Bug #5930: Search List throws fatal error when using a non-admin user. 

LDAP

Fixed Bug #5919: getParents() infinite recursion when cycles in LDAP structure.
Fixed Bug #5928: LDAP Bridge Auth Filter fails when the filter string has valid surrounding parentheses. 

Bulkmail

Fixed Bug #5847: Bulkmail job does not correctly check for duplicate mails in its queue.
Fixed Bug #5936: The 'Schedule Bulkmail Job' trigger action doesn't queue up the job as expected.
Fixed Bug #5954: Using a Select Metadata field for Bulkmail Subscription doesn't match a user's subscriptions. 

E-Commerce

Fixed Bug #5921: The total_tax keyword on the E-Commerce Checkout Page receipt shouldn't show negative integers for excluded countries.  

Web Services

Fixed Bug #5918: SOAP API services have strange column name in Interface Settings.
Fixed Bug #5924: Make SOAP Call Action fails to show all the response keywords.
Fixed Bug #5948: Difference of behaviour between actual execution and Run Test for Make Soap Call Actions.

SAML

Fixed Bug #5946: SAML Account Manager return location, redirect order glitch.



VERSION 4.12.0 RC1

Featured Changes
===================================

New Custom Change Password Design [ Feature Request #5788 ]
-----------------------------------------------------

When a user account is placed up for review within Squiz Matrix, users will be prompted to change their current Squiz Matrix password on a Change Password screen.

Previously, the design of this screen was not configurable. This feature adds new functionality, allowing you to set a custom Change Password design.

The System Defined Password Change Design options can be found on the Settings screen of an asset. These tools work in a similar manner to the System Defined Login Design, enabling you to override the default design of the Change Password screen for the asset, automatically cascaded to any children. 

When users log on to the system and require a password change, the Change Password screen will use the custom design, specified in the System Defined Password Change Design settings.

This feature has been added to complement the other custom log-in designs within Squiz Matrix.

New Trigger Action to Schedule a Bulkmail Job [ Feature Request #5853 ]
-----------------------------------------------------

Along with the aforementioned Bulkmail Job Scheduling feature, a new trigger action has also been added to Squiz Matrix to schedule a Job to be run when a trigger is fired.

The Schedule Bulkmail Job trigger action can be configured to override the default settings of a selected Bulkmail Job, allowing you to instead send the asset that fired the trigger (or an asset of your selection), as well as selecting the recipients of the job.  

You are also able to enable the Subscription Filter on the selected Bulkmail Job, specifying whether to use the Bulkmail Job's set subscription filters or to override these filters. This is a new feature to the Bulkmail Package which is outlined in more detail below.

This feature has been added to provide users with additional implementation options for their Bulkmail set ups. 

Bulkmail Job: New Scheduling Settings Screen [ Feature Request #5854 ]
-----------------------------------------------------

Squiz Matrix's Bulkmail Job asset defines the content and recipients of a bulkmail configuration. Previously, for a Bulkmail Job to be run, users would have to manually change the asset's status or use the schedule_bulkmail_job.php script.

This feature adds new settings to the Bulkmail Job asset, allowing you to enable and configure automatic scheduling of your jobs.

The Bulkmail Job Scheduling screen allows you to enable scheduling for the job and provide a start date. You can then specify the frequency of how often the job should be run (either hourly, daily, weekly, monthly, yearly or not at all).  

Once enabled, the Bulkmail Job will be queued to run at the specified start date and time, and then continue to run subsequently at the specified frequency.

This feature has been added to provide users with effortless scheduling of the jobs within their bulkmail configurations.

Bulkmail Job: New User Subscription Screen [ Feature Request #5856 ]
-----------------------------------------------------

We have one more new screen that has now been added to the Bulkmail Job asset, this time allowing you to configure user subscriptions for the jobs within your bulkmail configuration.

The new User Subscriptions screen allows you to enable user subscriptions for your Bulkmail Job. When subscriptions are enabled, categories can be created, comprised of Asset Metadata Field rules to match a user asset's metadata against a specified value. 

User Subscriptions utilise the use of a Search Page asset to query a selection of assets using the matched subscription metadata value. Assets returned on these searches will then be sent (individually) to the users within the corresponding subscription category.

For example, you could create a location subscription category, matching metadata values such as Sydney and Melbourne. The Search Page would search these queries, and return a selection of articles for these users, sending them content appropriate to their location.

Call REST Resource Completion Action on E-Commerce Checkout Page [ Feature Request #5865 ]
-----------------------------------------------------

The Custom Form Page's Call REST Resource submission action is used to communicate with a web service exposing itself using Representational State Transfer (REST) methods, upon submission of a form.

This functionality has been extended to the E-Commerce package's Checkout Page asset via a new Call REST Resource completion action that will call a REST resource server after the checkout process has successfully been completed on an e-commerce order.  

The Call REST Resource action can be configured on a new Checkout Completion Actions screen of a Checkout Page asset. This screen is similar to the Submission Actions screen of a Custom Form.

Like the form submission action, the Call REST Resource allows you to configure the HTTP request to the REST web server, passing details of the e-commerce order within the request body content (incl. the order summary, the delivery form responses and the individual item details).

The completion action also allows you to set custom parameters for Product asset types on a new Order Array keyword, as well as configure the Error Response Notification Email for non-2xx responses from the REST server.

REST Resource JavaScript: V8 JS Engine [ Feature Request #5869 ]
-----------------------------------------------------

Current the REST Resource JavaScript asset only allows you to use the SpiderMonkey JS engine to execute JS commands. This feature introduces the option of using the V8 engine, if the PECL V8js extension installed.

Additional SAML Options for User Linking and Creation [ Feature Request #5873 ]
-----------------------------------------------------

In this month's releases of Matrix, we unveiled federated access management single sign-on and identity verification through our new SAML Account Manager asset. This feature adds further options to this asset, allowing you to set the linking settings for users (automated in current release), as well as allow Matrix to automatically create linked local users during the authentication process.

The Allow Linking to Existing Users and Automatic Creation options are available on the Details screen of the SAML Account Manager. 

By default, linking to existing users is enabled. This means that is a user is logged in to Squiz Matrix and their account is SAML authenticated, the SAML Account Manager will prompt the user to link their accounts, if they have not yet been. This linking allows for federated access to the system, automatically signing the user into their account as part of the SAML authentication process.

The Automatic Creation option handles the creation of linked local users when a user is not logged into Matrix. By default, this is a manual process, with users being allowed to create a new user account during SAML authentication. Enabling this option will automate this creation, skipping this manual process.

This feature has been added to provide users with more options for configuring SAML federated access management on their systems.

OAuth Session: Redirect to Authorise, Store Access Token [ Feature Request #5874 ]
-----------------------------------------------------

Squiz Matrix's REST Resource OAuth assets allow you to define the parameters for OAuth authentication when communicating with an OAuth secure REST web service. This feature introduces additional parameters, allowing you to redirect users to an external authorisation page and providing the option of permanently store the access token.

The Redirect to Authorise and Store Access Token options are available on the Details screen of REST Resource OAuth assets. 

By default, neither of these options will be enabled.

Enabling the Redirect to Authorise option will redirect a user to the service provider's authorisation page to authorise the request token instead of simply nesting the authorisation form within Squiz Matrix.

The Store Access Token option allows you to permanently store the access token. By default, this token is stored in the session, meaning that when a user logs out, the token will be lost. Permanently storing this token will prevent users from having to reauthorise in each user session. Disabling this option will remove any permanently stored tokens.

These features have been added to bring Squiz Matrix OAuth more in line with established authentication standards. 

New Keyword to Print the ID of a Paint Layout on an Asset [ Feature Request #5878 ]
-----------------------------------------------------

A new keyword replacement has been added to Squiz Matrix to print the asset ID of the paint layout on an asset.

%asset_paint_layout_id% 

This keyword will print the asset ID of the Paint layout applicable for the asset on the current URL, whether asset-based, URL-based or user-defined.

This keyword can be used in conjunction with the as_asset keyword modifier which dynamically supplies an asset ID (in this case, of a Paint Layout) on a set asset_keyword. This will allow users to expose the properties and attributes of a Paint Layout within an asset's content.

%asset_paint_layout_id^as_asset:asset_name% 

The above keyword format, for example, would print the name of the asset's Paint Layout.

New Context Functions on JavaScript API [ Feature Request #5891 ]
-----------------------------------------------------

Five new functions have been added to the JavaScript API for retrieving and setting context information.

	- getAlternateContext() : retrieves the alternate context applicable to current situation where Squiz Matrix will go through each context and evaluate based on the conditions defined in them.
	- getCurrentContext() : retrieves the current context active on the system.
	- getAllContexts() : retrieves all contexts defined in the system.
	- setContext() : sets a context via the API.
	- restoreContext() : restores the context to what it was previously set to. Should be used in conjunction with setContext().

Performance Mode Enhancements [ Feature Request #5910 ]
-----------------------------------------------------

The following enhancements have been made to Squiz Matrix's Performance Mode:

	- Performance mode will now display the time spent on queries, together with the number of queries.
	- Fixed issue where some queries (those called with getXX() style functions) were being repeatedly counted.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5728: Improved Error Handling for Invalid Paths on Installation Step Scripts.
Minor Enhancement #5730: Rollback Truncation on Automatic System Upgrade.
Minor Enhancement #5845: Asset Builder Selectable Create Location Enhancements.
Minor Enhancement #5852: Memcache Session Handler Support on Site Network Assets.
Minor Enhancement #5861: Improved Error Handling for Malformed PDF Uploads.
Minor Enhancement #5875: Update Twitter Status Action Upgraded to Support Twitter API 1.1.
Minor Enhancement #5881: New Report Mode on the system_integrity_fix_char_encoding.php Script.
Minor Enhancement #5888: Remote Content Asset URL Tunnelling Option Warning.
Minor Enhancement #5889: New JS API Function to Return Metadata Schema Info. 
Minor Enhancement #5907: Enhancements to the system_integrity_fix_char_encoding.php Script. 
Minor Enhancement #5913: Interface to Configure the Related Metadata Field's is_contextable Option. 

Core

Fixed Bug #5828: The reindexSearchIndex.php script consumes too much memory. 
Fixed Bug #5833: Can't download File Assets over HTTPS using IE7 and IE8.
Fixed Bug #5844: matrixsqlclient breaks terminal. 
Fixed Bug #5871: Matrix emailing the workflow initiator from previous workflow process when asset pushed to Live.
Fixed Bug #5876: Issue with Metadata values when Deja Vu enabled. 
Fixed Bug #5894: import_file.php script errors.
Fixed Bug #5895: Cancel Safe Edit status / clone asset via JS API with filter frontend user option turned on does unnecessarily escape HTML to entities.  
Fixed Bug #5896: SQ_CONF_REDIRECT_URL_WITH_TRAILING_SLASH redirects infinitely for a ROOT URL which is not listed main.inc.
Fixed Bug #5897: Getting count of internal messages does an unnecessary join.
Fixed Bug #5898: Viewing an inbox - improvements.
Fixed Bug #5904: Custom Form current_page_content keyword doesn't do JS frontend validation.

CMS

Fixed Bug #5901: Setting Form Submission asset LIVE can result in loss of all the answers.

Search

Fixed Bug #5864: Using special characters in Oracle Search generates unescaped characters in file names.

LDAP

Fixed Bug #5882: Unable to acquire locks on 'Inbox' of LDAP user with \, in CN.

Calendar

Fixed Bug #5866: Events search not sorting when sorting by the asset attribute value.
Fixed Bug #5893: Run Level not restored failing to save the attributes of calendar event modification.

Data

Fixed Bug #5902: RSS Data Source timeout error for some feeds.

Web Services

Fixed Bug #5877: SOAP Server asset sends proper HTTP authentication header.
Fixed Bug #5883: Oath and POST REST call problem.
Fixed Bug #5884: JS API calls to getAttributes on div content assets that contain keywords get evaluated.
Fixed Bug #5890: JS API throws "Unable to get value of the property '0': object is null or undefined".




VERSION 4.8.0 RC1

Featured Changes
===================================


Cache Manager: Additional Send Cacheable Header Settings [ Feature Request #5409 ]
-----------------------------------------------------

Previously, Squiz Matrix did not send cacheable headers for SSL encrypted requests.

This feature addresses this issue by adding new settings to the Cache Manager's Send Cacheable Header screen, allowing you to specify the protocol when cacheable headers will be sent (HTTP, HTTPS or both). Additional options allow you to configure the cache-control level for both HTTP and HTTPS protocols.

Asset Logs Screen: Internal Messages Performance Enhancement[ Feature Request #5414 ]
-----------------------------------------------------

Previously, loading on the Asset Logs screen could be potentially slow on systems containing large numbers of internal messages. This feature refines the process of retrieving the list of valid asset types and the saving of internal messages, to improve the performance of the Asset Logs screen.

Online Quiz Interactive Mode [ Feature Request #5456 ]
-----------------------------------------------------

A new Interactive Mode has been added to the Online Quiz asset. This mode transforms the regular listed quiz format into a one question per page format, with the option of allowing users to retry incorrectly answered questions.

Interactive Mode is enabled via a new field on the Details screen of the Online Quiz asset.

Enabling Interactive Mode will display the Question Pooling settings. These settings allow you to select the root node(s) to extract the multiple-choice questions from, as well as set the number of retries available to users for each question.

Interactive Mode utilises a new feedback page on completion of each question. Response feedback can be specified for each response on the Details screen of an Online Quiz Multiple-Choice Question.

When a user answers a question on the form, the Online Quiz will display whether or not the user selected the correct answer and present any feedback that has been configured. If the user has given an incorrect answer, they will able to retry the question, with another selected from the question pool and presented to them.

Listing item classes are allocated for each option on the feedback form, as well as span tags for the response feedback. These can be used to stylise (CSS etc.) the feedback information and listed options, for example, a tick or cross for the option the user has selected.

New keyword replacements have been added to format the layout of the Online Quiz in Interactive Mode:

	- %interactive_question_number%
	- %interactive_question_note%
	- %interactive_question_text%
	- %interactive_question_response_form%
	- %interactive_button% 

In addition to these changes, a new scoring system has been implemented for the Online Quiz. Scores will now be stored in the submission assets of the Online Quiz.

You are also able to specify the format of the %quiz_score% keyword replacement, used in the submission logs, and the Thank You and Page Contents bodycopies. This format is configured on a new Score Format field on the Details screen of the Online Quiz asset. 

User IP Forwarding on http_request Attributes [ Feature Request #5479 ]
-----------------------------------------------------

This feature introduces the additional option of User IP forwarding on the HTTP request of REST Resource assets (incl. the Call REST Resource Trigger and Form Submission actions).

An additional "Append Query String to the Request URL" option is also available, allowing you to append the query variables passed to the Squiz Matrix URL on the HTTP request.

Brand New: Decision Tree Asset [ Feature Request #5494 ]
-----------------------------------------------------

A new Decision Tree asset has been developed for Squiz Matrix, leading users through a dynamic series of questions and displaying a final result based on the responses given. By engaging your users through an interactive decision process, the Decision Tree asset allows you to provide information and content that caters specifically on an individual user basis.

The Decision Tree asset is essentially comprised of:

	- Questions: the questions your users will answer on the decision tree. Questions can be formatted as either select or numeric question types and are similar in configuration to existing questions in form assets.
	- Results: result bodycopies are created to display to users based on their answers. 
	- Answer Destinations: response-based destinations for questions on your Decision Tree. An answer destination can be either another question or a result bodycopy. This allows you to cater the questions and results displayed specifically based on the responses your users give.

Decision Tree assets can also implement a points-based system where point values are accumulated based on the responses given. Response bodycopies can then be allocated a points range and are dynamically displayed based on the accumulation of points once users reach a question that does not have an allocated answer destination (ie. the end of the Decision Tree).

A number of new keyword replacements are available when formatting the content of the Decision Tree asset. These include:

Page Contents Bodycopy:

	- %decision_tree_contents%
	- %reset_button%

Decision Tree Question Bodycopy:

	- %question_title%
	- %question_field%
	- %question_note%
	- %accumulated_points%
	- %question_button% (numeric only)

Result Bodycopy:
	
	- %accumulated_points%

Additionally, question and result bodycopies on the Decision Tree are wrapped with division tags and classes for easy design implementation and CSS styling.

The introduction of this new Decision Tree asset aims to provide Matrix users with an alternative to complex graphs and diagrams which can be confusing to site users. The interactive decision process allows you to present information tailored specific to users in a simple and accessible manner.

2-Legged OAuth Authentication Available on REST Resource Assets [ Feature Request #5497 ]
-----------------------------------------------------

This feature introduces 2-legged OAuth authentication on the REST Resource assets, in addition to the existing 3-legged OAuth.

2-legged OAuth, allows users to simplify the authentication procedure by eliminating the user authorisation process of 3-legged OAuth, establishing a direct client-server scenario.

This new authentication method is available through a new "REST Resource OAuth 2 Legged" asset. The OAuth parameters available on this asset include the Consumer Key, Secret and Signature Method (HMAC-SHA1 or PLAINTEXT).

Update Link Trigger Action [ Feature Request #5511 ]
-----------------------------------------------------

Trigger actions allow you to specify tasks that will be performed when a fired trigger meets a specified set of conditions. Squiz Matrix boasts an extensive array of trigger actions that are available, from creating new assets to updating your status on twitter.

This feature introduces a brand new trigger action to update the type and value of a specified link. 

The Update Link trigger action allows you to update a single link. This link can be specified by link ID or, alternatively, you can identify attributes to match a link on the firing asset, including the link type and value, the side of the link to look on (parent or child) and the asset type of the linked asset.

This trigger action has been added to strengthen the functionality of the Squiz Matrix trigger system and expand on the trigger set-ups available to users.

Recurring Calendar Event Frequency Threshold Global Preference [ Feature Request #5515 ]
-----------------------------------------------------

A new Global Preference has been added to limit the frequency that Recurring Calendar Events appear on Upcoming Events List and Event Search Page assets.

This is configured by an Event Frequency Threshold option, that allows you to set a minimum threshold (in days) for Recurring Calendar Events. If the frequency of the Calendar Event falls within this threshold, the event will only appear once on the listing.

WYSIWYG Insert Link Tool: Direct Links to Asset External Target URLs [ Feature Request #5517 ]
-----------------------------------------------------

The WYSIWYG's Insert Link tool allows you to insert a hyperlink to an external site or an internal asset. Previously, however, this tool, when creating links to Link and Redirect Page assets, would create a link directly to that asset (e.g. "./?a=123").

This features introduces new functionality that allows you to link directly to the target URLs of Link and Redirect Page assets.

A new Asset Type field has been added to the Insert Link tool. This field allows you to specify whether the link is to a Link or Redirect Page asset or, if not, any other asset.

When a user selects ether the Link Asset or Redirect Page Asset options, only assets of those types will be able to be selected in the Select Asset field. Once an asset is selected, and a global keyword replacement will be automatically printed in the Link field, linking directly to the target URL of the asset, as follows: 

	- %globals_asset_attribute_link_url:123%
	- %globals_asset_attribute_redirect_url:123%  

This feature has been added to aid editors and simply the process of linking to external urls on Matrix assets.

Load Balancing "Read" Database Connection Support [ Feature Request #5541 ]
-----------------------------------------------------

This feature introduces load balancing when distributing connections to multiple database servers, enabling support of multiple 'read' databases.

Databases are configured in the system's db.inc file and can be specified weight and timeout values to des gnat when/how the system will make a connection to these servers. The use of multiple 'read' databases is expected to significantly improve performance on complex systems that experience issues with a single connection setup.

Please note that modification of the db.inc file should only be performed by a system administrator.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5401: 12 Hour Time Option on Custom Form's Date/Time Question Type.
Minor Enhancement #5408: Asset Content Keywords on Listed Bodycopy DIVs.
Minor Enhancement #5419: Clear Squid Cache Tool Won't Run When Not Correctly Configured.
Minor Enhancement #5434: Connection Status and Error Information on a DB Data Source.
Minor Enhancement #5483: Logs Screen: Select Multiple Log Types to View. 
Minor Enhancement #5488: Specify Triggers to Execute on the Trigger Manager's Batching Screen.
Minor Enhancement #5498: Remap Manager: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5503: Metadata Select Field: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5504: Bulkmail Import User Tool: Option to Ignore Headers in Imported CSV.
Minor Enhancement #5514: Purge Trash Performance Enhancement.


Core

Fixed Bug #5051: WYSIWYG converts HTML/XML entities into characters.
Fixed Bug #5418: Combine curl/http_client requests into one library/function.
Fixed Bug #5461: Re-import content from data/files improvements.
Fixed Bug #5485: IE8 WYSIWYG quotation marks missing from attributes.
Fixed Bug #5486: Trigger Condition to check asset treeID fails with fatal error.
Fixed Bug #5499: Links Report CSV Export File Broken.
Fixed Bug #5501: Cannot save selected asset in Asset Finder in File Upload question; Link Manager.
Fixed Bug #5505: Resize of Image Insert window prompts asset tree pane resize to full window width.
Fixed Bug #5507: CSS Design File asset ignores permission.
Fixed Bug #5508: System design assets don't regenerate Design files.
Fixed Bug #5513: Javascript date picker in JS_Calendar class not working in Firefox.
Fixed Bug #5520: Paint Layout conditional keywords don't work as expected with Condition Keyword Regexp.
Fixed Bug #5530: Undefined index on Workflow screen.

CMS

Fixed Bug #5509: Account Manager User asset web path conflict.
Fixed Bug #5518: CAPTCHA settings conflict.

Calendar

Fixed Bug #5459: Upcoming Events list displays multiple results for Single Calendar Events that run for more than one day.

Web Services

Fixed Bug #5522: GetAsset method doesn't return valid XML on all Assets.
Fixed Bug #5536: SOAP API's GetMetadataFieldValues Function, if empty field names are passed, doesn't return all values.

LDAP

Fixed Bug #5519: LDAP User sorting under LDAP Groups not working.
Fixed Bug #5524: LDAP attributes missing on User Details screen.


VERSION 4.6.0 RC1

Featured Changes
===================================


Remove Trailing Slash Off Requested URLs and Redirect [ Feature Request #5138 ]
-----------------------------------------------------

Within Matrix, a URL with or without a trailing slash will render the same content. As the Cache Manager treats every URL uniquely, however, Matrix would previously end up caching both of these URLs, resulting in two separate cache entries for the same content.

This feature strips the trailing slash off such front-end requested URLs and redirect them, resulting in just one cache entry for the URL content.

Please note that this feature does not apply to root URLs due to the possibility of apache being configured to append the trailing slash. 

Global Preference to Restrict Assets Created Under Specified Sites as Type 2 Linked [ Feature Request #5161 ]
-----------------------------------------------------

The new 'Child Creation Type 2 Link Restriction' global preference allows users to specify site assets to restrict newly created children to TYPE 2 links only. This means that any newly created assets under these sites (at any depth) will only be able to be created as TYPE 2 linked assets.

The link type of these assets can still be changed after asset creation via the asset's Linking screen.


New Script to Evaluate and Fix Files in the Public Data Directory [ Feature Request #5171 ]
-----------------------------------------------------

Matrix's public data directory houses File assets on the Matrix system that are publicly accessible (live with public read access). However, in some cases this directory may be missing files or contain old or private files due to file system permission problems and other issues.

This feature introduces the system_integrity_fix_public_files.php script. When run, this script will update any out-of-date files on the public data directory, create any files that are missing from the directory and remove any files that are private and should not be in the directory.

Usage of this script is as follows:

$ php system_integrity_fix_public_files.php SYSTEM_ROOT ROOT_ID 

System Integrity Clean Invalid Links Script [ Feature Request #5175 ]
-----------------------------------------------------

Squiz Matrix's system_integrity_orphaned_assets.php script finds and links orphaned assets underneath a specified asset ID. It also takes care of invalid links, where the major ID in a link is a missing asset; it does not, however, cater for when the child minor ID is missing while the major ID still exists.

This feature introduces the system_integrity_invalid_links.php script. This script will remove significant links where one or both sides of a link does not exist. This script will also report on the number of orphaned assets in the system and may recommend running the system_integrity_orphaned_assets.php script, upon its completion.

New Keyword Modifier to Apply XSLT to XML Content [ Feature Request #5183 ]
-----------------------------------------------------

Keyword modifiers allow you to modify keyword replacements to further configure their returned values. This feature adds a new keyword modifier to apply XSLT (Extensible Stylesheet Language Transformations) to XML content returned on the keyword.

The format for this keyword modifier is as follows.

%keyword^xslt:<assetid>%
 
%asset_contents_raw^xslt:343% 

This modifier will take the XSLT of a file asset (specified by asset ID), apply it to XML returned on the asset and output the result.

This feature has been added to allow users to transform the XML of assets, providing greater control over the content of their sites.

New System Forking Scripts [ Feature Request #5294 ]
-----------------------------------------------------

This feature adds three forking scripts, aimed to increase the performance of these scripts and prevent memory leakage, especially on larger systems where memory usage is otherwise too high and/or performance of single-threaded scripts is too slow.

The scripts added are:

system_apply_permissions.php : takes a permission string in a specific format that allows you to run multiple permission operations on the specified asset and their children. This script forks and runs in batches to curb memory usage and also runs multiple threads in parallel to speed up the overall operation.

system_apply_metadata_schema.php : applies a metadata schema to the specified assets and their children (and generates the metadata for that asset). Runs in batches and multiple threads in parallel.

system_update_lookups.php : updates lookups for all assets under the specified root node. Forks and runs in batches to keep memory usage down.


%asset_contents_paint_X% on Paint Layout Bodycopy [ Feature Request #5323 ]
-----------------------------------------------------

The %asset_contents_paint_X% keyword replacement is used on an Asset Listing Page to print the content of an asset with a specified Paint Layout applied. For example, the keyword %asset_contents_paint_1234% would apply the layout of asset #1234 to the asset content.

This feature enables the use of this keyword replacement for use within a Paint Layout bodycopy. This can be useful, for example, when using Conditional Keywords, to print the asset content with other Paint Layouts applied, based on the conditions specified.

This feature has been added to aid in the implementation of Paint Layouts, providing users with more flexibility and control over their content. 

Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5197: Enhanced Performance on Asset Listing Pagination.
Minor Enhancement #5206: Backup Script to Move Database Dump into the data/ Directory.
Minor Enhancement #5207: Asset Manager: getLinkLineages Query Performance Improvements.
Minor Enhancement #5255: Performance Enhancement: Cascading Permissions on Permissions Screen.
Minor Enhancement #5270: Performance Enhancement: Global Search and Replace Reindex Altered Assets Only.
Minor Enhancement #5304: system_integrity_recover_file_versions.php Now Works for Image Varieties.
Minor Enhancement #5308: Metadata Field's Friendly Name Attribute Available as Keyword Replacement.
Minor Enhancement #5310: Search Button on the Quick Search Tool.
Minor Enhancement #5312: Custom Form Date field link issue.
Minor Enhancement #5313: Performance Improvement to createAssetLink() Function.
Minor Enhancement #5316: Remap Manager: Never Delete Mass Select / Deselect.
Minor Enhancement #5321: Alternative Proxy Config Allows Matches to Exclude Going Through Proxy
Minor Enhancement #5325: http_request Obeys Alternative Proxy Settings.

Core

Fixed Bug #5143: Committing from "archived/approved to go live" causes attributes to be cleared.
Fixed Bug #5299: Cron job added are of time stamp in past.
Fixed Bug #5300: Keyword modifiers not working properly on site map.
Fixed Bug #5301: Metadata date field not disabled when "Use default" selected.
Fixed Bug #5303: Trigger action set standard date, updates not search re-indexed.
Fixed Bug #5306: Asset map complains about the empty XML on PHP 5.3.
Fixed Bug #5307: Trigger condition "Status changes to" throws PHP notice.
Fixed Bug #5309: Manual asset id input processing and trimming.
Fixed Bug #5311: Show Diff preview incomplete highlights.
Fixed Bug #5314: Short form shadow asset links.
Fixed Bug #5315: Design CSS assets doesn't regenerate parse file for itself or children customisations. CSS changes can't be seen in front end.
Fixed Bug #5326: Trying to add an Alternative Proxy spits out PHP warnings.
Fixed Bug #5334: Workflow escalation custom message are have wrong subject.
Fixed Bug #5341: Filter Front End User Input - set to 'Filter input' breaking front end layout after parse file commit.
Fixed Bug #5342: PHP 5.3 E_DEPRECATED warning in installation scripts.
Fixed Bug #5148: br tag created in the WYSIWYG as soon as it's created.
Fixed Bug #5327: Linking to image varieties requires a dollar $ sign to work.

Search

Fixed Bug #5319: Search Manager Asset Tree and Global Weights screen error. 
Fixed Bug #5324: Metadata Weightings in Search Manager Asset Tree Weights screen does not work. 

LDAP

Fixed Bug #5305: LDAP authentication ignores bridge asset-map position.
Fixed Bug #5347: LDAP Bridge not expanding for some User/User Groups LDAP entries

Web Services

Fixed Bug #5140: JS API importAssetsFromXML() only imports the first Asset. 
Fixed Bug #5318: JS API causing syntax error if the ajax response is "undefined" or "null". 
Fixed Bug #5328: JS API setAttribute will show success even on error. 



VERSION 4.4.0 RC1

Featured Changes
===================================


Logout Due to IP Change Logged in System Logs [ Feature Request #4604 ]
-----------------------------------------------------

Previously, when a user was logged out of Squiz Matrix because their IP changed and SQ_CONF_ALLOW_IP_CHANGE was set to true, neither an error or a system.security.* message would be sent. This meant that the only way to figure out why users were intermittently losing their session was to have prior knowledge of this setting.

This feature had been added so that Matrix will log logouts due to IP changing in the system logs. For example:

[2011-05-23 15:11:23][12:Root User][1024:mysource notice][ ] [system.security.logout.ip_change - remote_addr:192.168.1.1;sessionid:;] (User Automatically Logged Out) - User "Root User" was logged out since their IP address changed from 192.168.2.1 to 192.168.1.1.

Enhancements to the import_files_from_bridge.php Script [ Feature Request #5033 ]
-----------------------------------------------------

Squiz Matrix's import_files_from_bridge.php script imports files exposed through a File Bridge asset into Matrix. Previously, this script would import these files as File type assets; however, files will now be imported as corresponding Matrix file assets, when available. For example, an image will now be imported as an Image type asset. 

This feature also introduces the option of importing folders containing an index.html file as a Standard Page asset with the content of the index file. This option can be enabled by setting a parameter on the script.

The new usage of the import_files_from_bridge.php script is as follows:

php import_files_from_bridge.php <MATRIX_ROOT> <BRIDGE_ROOT_NODE_ASSETID> <PARENT_ASSETID> <RECURSIVE> <HANDLE_INDEX_FILE>
 
php import_files_from_bridge.php path/to/matrix 100 150 y y

Make SOAP Call Step Action For Multi-Page Forms [ Feature Request #5089 ]
-----------------------------------------------------

Currently, Squiz Matrix's Custom Form asset allows you to make a SOAP call on submission. This new feature extends the functionality of submission actions to the individual steps (or pages) of a multi-page Custom Form, allowing your form to make a SOAP call on each page submission.

Step actions can be configured on the new Step Actions screen for form sections.

The set up of the Make SOAP Call step action is similar to the Make SOAP Call submission action, allowing you to specify the connection to the SOAP server and specify the request message.

On the front end of the form, when a user clicks the Next Page button, Squiz Matrix will make the SOAP call, as configured on the Step Actions screen for that step.

The Make SOAP Call step action also utilises the new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

SharePoint CMIS Bridge [ Feature Request #5090 ]
-----------------------------------------------------

This new feature introduces the CMIS Bridge asset, a connection bridge for retrieving files from a CMIS enabled SharePoint repository (currently supports Microsoft SharePoint 2010).

This asset retrieves SharePoint documents in a similar manner to the SharePoint Saved Search; however, files imported over the CMIS Bridge will be imported as fully functional system assets within Squiz Matrix (such as Images, Text Files etc.). These assets can be edited, linked and moved around the system just like any other asset, allowing you greater control over your SharePoint repositories within Matrix. 

Files are stored under the CMIS Bridge asset in the asset map when initially synchronised with the connected CMIS enabled SharePoint repository. Further synchronisation will update these files, trashing any old files, modifying files that have been altered and creating new assets for new files on the repository.

Synchronisation is also controlled via a new Sync CMIS Bridges Cron Job. This cron job is set to run daily - its run time and frequency can be configured on its Details screen.

CMIS properties (e.g. Author, Objectid, Modified, Created) can be mapped to the metadata fields of a schema applied to the CMIS Bridge. Additional custom fields created for the document library will dynamically be made available for metadata mapping.

The addition of this asset enhances the SharePoint package within Squiz Matrix, allowing you to manage your SharePoint documents within Matrix with more control than ever before.

Search Page: Specify Data Sources on Exclude Fields [ Feature Request #5094 ]
-----------------------------------------------------

Previously, Matrix's Search Page only allowed you to configure data sources for search fields. The data sources allowed you to specify which fields on an asset to search. This feature extends this functionality to exclude fields, allowing you to specify which fields to exclude on.

Like a search field, exclude fields allow the following data source types:

Include All: searches all standard fields, attribute fields and metadata fields of assets.
Standard Asset Field: searches a specified standard asset field (e.g. the name of a page or its asset ID).
Asset Attribute: searches a specified attribute field (e.g. the title of a file of a MS Word Document asset).
Asset Metadata Field: searches a specified metadata field.

You can select multiple data sources to search for each exclude field that you add, specifying the word logic to use for your data sources (all words or any word).

Please note that existing exclude fields will default to the Include All data source type, returning the same results as they would previously had.

On the Search Page, the exclude field will only search the fields specified in its data sources. For example, say you configure the exclude field to search the Keywords metadata field of assets - if a user searches for the query News in the exclude field, the Search Page will exclude assets contain the query News in their Keywords metadata from the search results.

This enhancement to the Search Page's exclude fields allows you to tweak your Search Page, allowing your users to return more accurate results, specific to their searching queries.

Specifiying the Cron Deadlock Email Notification Receivers [ Feature Request #5103 ]
-----------------------------------------------------

Squiz Matrix's Cron Manager handles the cron process within a system, managing and running the cron jobs that have been scheduled. Occasionally, a cron job may stall, causing the Cron Manager to deadlock. When this occurs, Matrix will send out email notifications, informing users of these errors.

Previously, Matrix would send these deadlock email notifications to all users under the System Administrators Folder, as well as the email addresses configured in the system's main.inc file. These automated email notifications would be resent to these users each subsequent run of the Cron Manager, until the issue was resolved. This could cause large numbers of emails sent to many users, potentially causing inconvenience and even spam filtering issues with users' mail clients.

This feature adds a new option to the Cron Manager, allowing you to specify the users that will receive cron deadlock emails. This option is configured via a new Emailing Options section on the Options screen of the Cron Manager.

The Cron Deadlock Email Receivers field allows you to select users, user groups and roles to specify which users should receive email notifications from the Cron Manager. By default, the system's Root User and the email addresses configured in the system's main.inc file will automatically also receive these emails.

By allowing you to specify the users to receive cron deadlock emails, this feature allows you to more efficiently identify and manage any potential issues with the Cron Manager in your system.

A-Z Listing: Defining the Layout of Individual Letters on the Navigation List [ Feature Request #5124 ]
-----------------------------------------------------

On a multiple page A-Z asset listing, the navigation character list displays links to the different alphabetised pages on the listing. This feature adds the ability to format the individual letters on this list.

This feature utilises the asset listing's existing Page Link and Current Link formats, which were not previously used on an A-Z asset listing.

On an A-Z listing, the Page Link Format will now define the layout of each individual letter on the linked character list, while the Current Page Format will define the layout of letters that contain no results.

These formats use the existing %page_link% and %page_number% keyword replacements. For example, you could format the letters on the list so that letters with results will be in bold, while letters with no results will be struck out.

The feature gives users greater control over the layout of their A-Z listings, in line with the options available on a regular asset listing.

Make SOAP Call on Submit Submission Action: Array Data in SOAP Response [ Feature Request #5127 ]
-----------------------------------------------------

Previously, the Custom Form's Make SOAP Call on Submit form submission action could not handle array data in the SOAP response. This feature adds support for array data in the SOAP response, populating array data into global keywords using index numbers.

For example:

%globals_session_[FOMR_ASSETID]_array_field0_value%, %globals_session_[FOMR_ASSETID]_array_field2_value%, %globals_session_[FOMR_ASSETID]_array_field3_value%

This feature also adds a TEST SOAP option to printout the sample SOAP request and response in the backend, for testing purposes.

Make SOAP Call on Submit Submission Action: Check SOAP Response [ Feature Request #5128 ]
-----------------------------------------------------

This features introduces data validation on the SOAP request of the Make SOAP Call on Submit form submission action of a Custom Form. If incorrect data is found in the request, Matrix will respond with a suggestion of specific error message, while if no incorrect data is found, will process the request, as normal.  

This feature is implemented through a new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

JSON Data Source
-----------------------------------------------------

This new JSON Data Source asset is an alternative to the existing XML Data Source, facilitating server-side data exchange with web applications.

Clean Old Shadow Links Script
-----------------------------------------------------

A new script has been added to the Matrix database to clean links to shadow assets that are no longer valid. This is usually because the assets have since been removed from the data source, e.g. An LDAP backend user is linked under the System Administrators folder but is later removed from the LDAP Directory.

Additional reasons a shadow link may no longer be valid is if the connection between Matrix and the data source goes down or if the configuration of the connection bridge is altered for testing purposes. Because of these reasons, when the clean_old_shadow_links.php script is first run, it will only return a list of shadow links for review. You can then decided whether or not to delete the shadow links in the system.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5041: Enhancement: Matrix clear expired cache query sometime is too large for oracle
Minor Enhancement #5044: Performance Enhancement: When Send Cacheable header, and Matrix responds 304 Not Modified, there is a useless call to printFrontEnd() 
Minor Enhancement #5045: Add a favicon to the Admin interface.
Minor Enhancement #5078: Error message on eSec Payment Gateway when Matrix is unable to connect to the service.
Minor Enhancement #5079: Support vertical resizing for the asset map.  
Minor Enhancement #5082: eSec Payment Gateway respects the proxy settings in Matrix's system configuration.
Minor Enhancement #5087: Add logging for pdftohtml failures.
Minor Enhancement #5096: Improved performance when dealing with large sq_internal_messages table.
Minor Enhancement #5109: Video File Asset: Add webm format.
Minor Enhancement #5116: Clear cache cron job enhancement (default storage).
Minor Enhancement #5122: Issue with PHP function mime_type_content().
Minor Enhancement #5123: Metadata Manager default value functions performance enhancement.

Core

Fixed Bug #5050: LDAP Users not getting correct permissions if the user is under a subgroup.
Fixed Bug #5055: Nested content DIVs don't save properly across contexts.
Fixed Bug #5061: Fatal error when viewing the Details screen of a form submission when a section of the form has been deleted.
Fixed Bug #5064: HIPO pop-up windows lose focus in Internet Explorer.
Fixed Bug #5069: Hierarchy metadata field default value displays incorrectly.
Fixed Bug #5072: Trashed file assets still accessible via public data URL.
Fixed Bug #5080: condition user agent can not use regular expression operator '|'.
Fixed Bug #5083: Metadata Fields Inaccessible.
Fixed Bug #5084: Changed file name in Safe Edit causes multiple issues.
Fixed Bug #5085: IE 8 and IE 9 wont let user commit changes on WYSIWYG screen.
Fixed Bug #5086: Error when editing image varieties after cancelling Safe Edit.
Fixed Bug #5092: Asset Builder's insert link via WYSIWYG tool removes the dot (.) before  /?a= .
Fixed Bug #5093: Customised classes not appearing in EES WYSIWYG.
Fixed Bug #5097: Shadow links (shadow assets linked under a real asset) always appear red-crossed in Asset Map for non-admin users.
Fixed Bug #5099: [cron_job] Metadata triggers causing Cron deadlock.
Fixed Bug #5104: Triggering asset intermittently getting lost when using the send email trigger action.
Fixed Bug #5106: Contains keyword modifier fails on string with a slash (/).
Fixed Bug #5108: Selectable create location link type bug with account manager page.
Fixed Bug #5114: PHP 5.3 remote content page complaining "Assigning the return value of new by reference is deprecated".
Fixed Bug #5117: Dependants only will not check in Set permission trigger action.
Fixed Bug #5118: Role screen doesn't not validates role and user asset IDs.
Fixed Bug #5119: Asset listing grouping by parent results in mysource warnings when the parent asset is a user asset.
Fixed Bug #5120: System config screen, Enable HTTP Authentication option has cosmetic problem when lock is acquired.

CMS

Fixed Bug #5098: [cron_job] manage_pending_accounts causing Cron deadlock.
Fixed Bug #5102: Matrix will throw warnings is the nested asset is deleted.
Fixed Bug #5125: Forms answers getting unnecessarily encoded in Submission Logs screen. 

Search

Fixed Bug #5105: PHP Notices on Search Fields screen (Undefined Asset Type).

Web Services

Fixed Bug #4934: Committing from "approved to go live" causes attributes on REST assets to be cleared.




VERSION 4.2.0 RC1

Featured Changes
===================================


Version numbers in __data URLs [ Feature Request #4808 ]
-----------------------------------------------------

It's difficult to manage cache expiration of statically served content, since this content is served blind by apache.

That is, you can edit a file, or CSS asset for example, but until the browser forces the request of a new version (further compounded by reverse proxies), the old version will continue to be served.

A common pattern for dealing with this is to add version numbers to the URL for the static file. Often, this is simply added as a query string for simplicity.

The effect being, when the file is updated and you bust the cache on the page, the URL for the file is different (since it's versioned), and so the browser gets the fresh version of the asset.

This can be a huge boost in caching strategies, allowing people to be more aggressive with their cache policy and empowering them to bust the 'perceived' cache on static files more easily.

TRIM Feature Request for Cron Job [ Feature Request #4875 ]
-----------------------------------------------------

Added ability to modify the (when) attribute of the saved search cron job through the details interface.

Also added a custom field in saved search to allow the result set to contain a text version of a records container called (Container Title)

	Remap Manager: Never Delete Enhancements [ Feature Request #4890 ]
	-----------------------------------------------------

	The Remap Manager's Never Delete option allows you to lock specific remaps from being deleted. This new feature improves this existing functionality by adding a variety of enhancements.

	A new option has been added to the Remap Manager to purge all remaps in the system except those marked as Never Delete. This option is enabled through a new field on the Details screen of the Remap Manager.

	Setting this field to Yes and clicking Commit will purge all remaps in the system that are not marked as Never Delete.

	The Web Paths screen of an asset would previously list its remaps but would provide no indication of whether the remap was marked as Never Delete or not. A new column has now been added for remaps on the Web Paths screen to display whether the remap is marked as Never Delete.

	Previously, delete fields were available to all remaps listed in the Remap Manager or on the Web Paths screens of assets. These fields were ineffective when used on remaps marked as Never Delete, however they were still accessible. These delete fields will now only be enabled for use on remaps not marked as Never Delete. The delete field will be disabled on remaps marked as Never Delete, as shown in the figure above.

	The Remap Manager's Never Delete Added Remaps? field will now be disabled by default, meaning that users must manually enable this option. This field was previously enabled by default; Existing installations using the previous default will retain their settings when being updating.

	Slight performance improvement in rebuilding cache [ Feature Request #4925 ]
	-----------------------------------------------------

	A slight performance improvement can be achieved by testing if the asset has no urls first up and finishing, since a url is needed to be indexed by funnelback.

	Improved permissions in Squiz Search [ Feature Request #4926 ]
	-----------------------------------------------------

	Improved permissions in Squiz Search will be handled by adding the systemid to all but the public key when retrieving the sitemap.


	Additional Changes and Bug Fixes
	=================================== 

	Minor Enhancements
	Minor Enhancement #4804: HTTP Request Header Acknowledges System Proxy Settings.
	Minor Enhancement #4869: Exporting Asset Attributes with CDATA Values.
	Minor Enhancement #4891: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4894: Asset::readAccess Makes Unnecessary Calls to the Workflow Manager.
	Minor Enhancement #4895: Don't Add Remap Option on the Add Web Path Trigger Action.
	Minor Enhancement #4912: Improved Performance of the Workflow Screen.
	Minor Enhancement #4913: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4916: System Asset Links Locked by Default.
	Minor Enhancement #4923: Enhancement: When Painting 404 not found Page and Sending Cacheable Header is Enabled, Expiry header is Not Set.

	Core
	Fixed Bug #4856: Replace Text 'selected text only' not working in IE7+8.
	Fixed Bug #4881: Date/Time form output.
	Fixed Bug #4885: Daily cron jobs run twice.
	Fixed Bug #4886: "Update lookups" HIPO Job in File::saveAttributes() creating issue.
	Fixed Bug #4889: Incorrect default when attribute on Sync Product cron job.
	Fixed Bug #4896: Trigger action "Set Metadata Value" fails when using parameter map.
	Fixed Bug #4903: Online Quiz List Format field description lists unavailable formats.
	Fixed Bug #4904: Typo on design_area_asset_lineage screen.
	Fixed Bug #4905: Quotation button in WYSIWYG view, unquote results in escaped html.
	Fixed Bug #4906: 'AssetStatusUpdate' event broadcasted but onAssetStatusUpdate() never executed.
	Fixed Bug #4907: Error when changing content type in a non default context.
	Fixed Bug #4910: When an asset is linked to a big number of parents, you will easily get Oracle error ORA-01795: maximum number of expressions in a list is 1000.
	Fixed Bug #4915: Metadata value trigger condition does not consider keywords.
	Fixed Bug #4924: DB error when a design asset is notice linked to too many assets.
	Fixed Bug #4930: Global Search and Replace doesn't replace metadata.

	CMS
	Fixed Bug #4878: ORA-01795 on Site Map asset.
	Fixed Bug #4880: Insert image doesn't remember location of last image variety uploaded.
	Fixed Bug #4892: Small typos in Remote Content asset Details screen.
	Fixed Bug #4901: Using a nested asset in simple edit layout which has an arbitrary paint layout set, will throw PHP notices.

	Calendar
	Fixed Bug #4899: Recurring calendar event instance date keyword bugs.

	Web Services
	Fixed Bug #4877: JS API Fails on https only domains.
	Fixed Bug #4909: JS API setAssetStatus permission denied for user with write permissions.
	Fixed Bug #4920: JS API not escaping metadata correctly.
	Fixed Bug #4922: JS API returns invalid JSON.

	Funnelback Package
	Fixed Bug #4911: Contextual Navigation links not working with Funnelback Server Search.
	Fixed Bug #4921: The Sitemap XML generated by Matrix is not escaping nbsp chars.

