SQUIZ MATRIX CHANGELOG

VERSION 4.8.0

Featured Changes
===================================


Automatic Upgrade Script: Display Upgrade Steps [ Feature Request #5550 ]
-----------------------------------------------------

Enhancements have been made to Squiz Matrix's Automatic Upgrade Script to allow users to view the upgrade steps of specific versions of Matrix without requiring that particular instance.

Previously, users could use the --verbose parameter on the script to display a full list of upgrade steps from their current version to the version of Matrix indicated.

This enhancement introduces a new --show_steps parameter, which allows users to specify two versions of Matrix to view a full list of upgrade steps between them.

Usage of this script parameter is shown below. Please note that the database type (psql or oci) must be specified when using this parameter.

php matrix_upgrade.php --show_steps mysource_4-2-2 mysource_4-8-0 psql

php matrix_upgrade.php --show_steps mysource_4-2-2 mysource_4-8-0 oci

New Asset Workflow Keyword Replacements [ Feature Request #5556 ]
-----------------------------------------------------

Additional asset workflow keyword replacements have been made available for use within Squiz Matrix. These are as follows:

	- %asset_workflow_applied_schemas%: the workflow schemas currently applied to the asset.
	- %asset_workflow_current_start_time:X%: the time the entire workflow process began, where X is the id of the workflow schema.
	- %asset_workflow_current_stream_name:X%: the name of the workflow stream currently running, where X is the id of the workflow schema.
	- %asset_workflow_current_step_condition_ids:X%: a comma-separated list of asset IDs of user/user group and/or role conditions on the current workflow step, where X is the id of the workflow schema.

Please note that the specification of the workflow schema ID in the above keywords is optional. If no schema id is set, the keyword will return the values of all schemas running on the asset.

These keyword replacements have been added to allow users to extract additional workflow information for their assets. 

Cache Globally: 404 Not Found Page of a Site [ Feature Request #5561 ]
-----------------------------------------------------

A new setting has been added to the Details screen of Site assets to globally cache the 404 Not Found Page of the Site.

When this field is enabled, the Not Found Page specified on the Details screen will share a common cache entry everywhere it is used, irrespective of the URL.

Caching in these circumstances begins right before painting the page, meaning that all nested content and design areas will be included in the cache.

This option should be used on Sites where the configured Not Found Page is constant and not dynamically generated (URL-based).

Cacheable Headers for Logged-In Users [ Feature Request #5578 ]
-----------------------------------------------------

Previously, Squiz Matrix's Cache Manager allowed you to send cacheable headers for all public pages served to users who were not logged-in (public users), allowing the web browser to cache pages for faster browsing.

This feature introduces a new option on the Cache Manager to send cacheable headers for all users, regardless of whether they are public or not.

This option is accessed via a new Send Cacheable Headers For field on the Cacheable Headers screen of the Cache Manager.

If this field is set to All Users, Squiz Matrix will send cacheable headers for pages served to logged-in users, as well as public users. By default, if the sending of cacheable headers is enabled, Matrix will only send headers to public users.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5510: Performance Enhancement: getAllChildLinks().
Minor Enhancement #5539: Suggested Tags Now In Alphabetical Order.
Minor Enhancement #5554: Default Maori Characters Remapping for WebPath.
Minor Enhancement #5557: Restricted File URL Memory.
Minor Enhancement #5577: Online Quiz: Server Side Validation.
Minor Enhancement #5584: Matrix to Not Poll LDAP During Root User Authentication.
Minor Enhancement #5585: Automatic Upgrade Script: Allow PHP Options.
Minor Enhancement #5594: Performance enhancement -- getLineageFromURL function optimised to run faster.
Minor Enhancement #5599: Performance improvement getting an assets parents.

Core

Fixed Bug #5533: Asset Builder asset's Dynamic Create Locations ignore LDAP user group membership.
Fixed Bug #5534: Incorrect LEFT JOIN causes performance issue in asset_manager's getAllChildLinks.
Fixed Bug #5546: Inaccurate label on the insert image popup of the WYSIWYG.
Fixed Bug #5555: Embed YouTube Video by URL improvement.
Fixed Bug #5558: Import assets from XML errors when setting permission for online quiz asset.
Fixed Bug #5560: Warranty key expiry screen shows up in SOAP API call.
Fixed Bug #5562: Asset Map supported java versions.
Fixed Bug #5563: root_nodes keyword does not work with modifiers unless used without them first.
Fixed Bug #5564: Issue with viewing workflow logs.
Fixed Bug #5567: WYSIWYG select text colour on multiple table cells removes cell tag.
Fixed Bug #5569: System alternative proxy setting wiped when running installation step 3.
Fixed Bug #5572: Conditional Keyword for Paint Layout doesn't let you configure the question id in keywords like 'question_answer_X_qY'.
Fixed Bug #5574: Form file upload problem with IOS device.
Fixed Bug #5576: Edit permission HIPO goes over 100%.
Fixed Bug #5581: tags converted to character references when inside a span when lang attribute removed.
Fixed Bug #5583: Revert safe edit assets status with notice links fatal errors when multiple context is defined.
Fixed Bug #5587: WYSIWYG Insert link for redirect page or link asset doesn't work with manual entering of the asset ID.
Fixed Bug #5588: Thesaurus metadata field keywords not replaced by JS API getKeywordReplacements.
Fixed Bug #5595: Import assets from XML tool sometimes fails if the xml has invalid characters.
Fixed Bug #5545: Using ctrl-z while viewing html source in WYSIWYG removes all tags in IE.

CMS

Fixed Bug #5566: Remote content page display error message not working.
Fixed Bug #5579: Asset builder asset created bodycopy, can not use nesting asset's keywords in Additional Get Vars of Nest Content Type.

Search

Fixed Bug #5535: Inconsistent indexing when non-alphanumeric characters in a string.

LDAP

Fixed Bug #5542: %globals_user_attribute_*% keywords not working for LDAP user.

Web Services

Fixed Bug #5532: JS API getLineage function return incorrect data for asset parents that have been linked in multiple places.
Fixed Bug #5537: Javascript API createAsset function doesn't work in IE.
Fixed Bug #5538: maximum_perm_on_asset returning incorrect permission level.
Fixed Bug #5559: JS_API::removeMultipleLinks() throws JSON.parse error on failure.
Fixed Bug #5568: SOAP Web Service GetDesignFromURL() returns no results for certain scenarios.
Fixed Bug #5570: REST Resource Pages fails to get requested content when only 'Forward user information' is selected.



VERSION 4.8.0 RC1

Featured Changes
===================================


Cache Manager: Additional Send Cacheable Header Settings [ Feature Request #5409 ]
-----------------------------------------------------

Previously, Squiz Matrix did not send cacheable headers for SSL encrypted requests.

This feature addresses this issue by adding new settings to the Cache Manager's Send Cacheable Header screen, allowing you to specify the protocol when cacheable headers will be sent (HTTP, HTTPS or both). Additional options allow you to configure the cache-control level for both HTTP and HTTPS protocols.

Asset Logs Screen: Internal Messages Performance Enhancement[ Feature Request #5414 ]
-----------------------------------------------------

Previously, loading on the Asset Logs screen could be potentially slow on systems containing large numbers of internal messages. This feature refines the process of retrieving the list of valid asset types and the saving of internal messages, to improve the performance of the Asset Logs screen.

Online Quiz Interactive Mode [ Feature Request #5456 ]
-----------------------------------------------------

A new Interactive Mode has been added to the Online Quiz asset. This mode transforms the regular listed quiz format into a one question per page format, with the option of allowing users to retry incorrectly answered questions.

Interactive Mode is enabled via a new field on the Details screen of the Online Quiz asset.

Enabling Interactive Mode will display the Question Pooling settings. These settings allow you to select the root node(s) to extract the multiple-choice questions from, as well as set the number of retries available to users for each question.

Interactive Mode utilises a new feedback page on completion of each question. Response feedback can be specified for each response on the Details screen of an Online Quiz Multiple-Choice Question.

When a user answers a question on the form, the Online Quiz will display whether or not the user selected the correct answer and present any feedback that has been configured. If the user has given an incorrect answer, they will able to retry the question, with another selected from the question pool and presented to them.

Listing item classes are allocated for each option on the feedback form, as well as span tags for the response feedback. These can be used to stylise (CSS etc.) the feedback information and listed options, for example, a tick or cross for the option the user has selected.

New keyword replacements have been added to format the layout of the Online Quiz in Interactive Mode:

	- %interactive_question_number%
	- %interactive_question_note%
	- %interactive_question_text%
	- %interactive_question_response_form%
	- %interactive_button% 

In addition to these changes, a new scoring system has been implemented for the Online Quiz. Scores will now be stored in the submission assets of the Online Quiz.

You are also able to specify the format of the %quiz_score% keyword replacement, used in the submission logs, and the Thank You and Page Contents bodycopies. This format is configured on a new Score Format field on the Details screen of the Online Quiz asset. 

User IP Forwarding on http_request Attributes [ Feature Request #5479 ]
-----------------------------------------------------

This feature introduces the additional option of User IP forwarding on the HTTP request of REST Resource assets (incl. the Call REST Resource Trigger and Form Submission actions).

An additional "Append Query String to the Request URL" option is also available, allowing you to append the query variables passed to the Squiz Matrix URL on the HTTP request.

Brand New: Decision Tree Asset [ Feature Request #5494 ]
-----------------------------------------------------

A new Decision Tree asset has been developed for Squiz Matrix, leading users through a dynamic series of questions and displaying a final result based on the responses given. By engaging your users through an interactive decision process, the Decision Tree asset allows you to provide information and content that caters specifically on an individual user basis.

The Decision Tree asset is essentially comprised of:

	- Questions: the questions your users will answer on the decision tree. Questions can be formatted as either select or numeric question types and are similar in configuration to existing questions in form assets.
	- Results: result bodycopies are created to display to users based on their answers. 
	- Answer Destinations: response-based destinations for questions on your Decision Tree. An answer destination can be either another question or a result bodycopy. This allows you to cater the questions and results displayed specifically based on the responses your users give.

Decision Tree assets can also implement a points-based system where point values are accumulated based on the responses given. Response bodycopies can then be allocated a points range and are dynamically displayed based on the accumulation of points once users reach a question that does not have an allocated answer destination (ie. the end of the Decision Tree).

A number of new keyword replacements are available when formatting the content of the Decision Tree asset. These include:

Page Contents Bodycopy:

	- %decision_tree_contents%
	- %reset_button%

Decision Tree Question Bodycopy:

	- %question_title%
	- %question_field%
	- %question_note%
	- %accumulated_points%
	- %question_button% (numeric only)

Result Bodycopy:
	
	- %accumulated_points%

Additionally, question and result bodycopies on the Decision Tree are wrapped with division tags and classes for easy design implementation and CSS styling.

The introduction of this new Decision Tree asset aims to provide Matrix users with an alternative to complex graphs and diagrams which can be confusing to site users. The interactive decision process allows you to present information tailored specific to users in a simple and accessible manner.

2-Legged OAuth Authentication Available on REST Resource Assets [ Feature Request #5497 ]
-----------------------------------------------------

This feature introduces 2-legged OAuth authentication on the REST Resource assets, in addition to the existing 3-legged OAuth.

2-legged OAuth, allows users to simplify the authentication procedure by eliminating the user authorisation process of 3-legged OAuth, establishing a direct client-server scenario.

This new authentication method is available through a new "REST Resource OAuth 2 Legged" asset. The OAuth parameters available on this asset include the Consumer Key, Secret and Signature Method (HMAC-SHA1 or PLAINTEXT).

Update Link Trigger Action [ Feature Request #5511 ]
-----------------------------------------------------

Trigger actions allow you to specify tasks that will be performed when a fired trigger meets a specified set of conditions. Squiz Matrix boasts an extensive array of trigger actions that are available, from creating new assets to updating your status on twitter.

This feature introduces a brand new trigger action to update the type and value of a specified link. 

The Update Link trigger action allows you to update a single link. This link can be specified by link ID or, alternatively, you can identify attributes to match a link on the firing asset, including the link type and value, the side of the link to look on (parent or child) and the asset type of the linked asset.

This trigger action has been added to strengthen the functionality of the Squiz Matrix trigger system and expand on the trigger set-ups available to users.

Recurring Calendar Event Frequency Threshold Global Preference [ Feature Request #5515 ]
-----------------------------------------------------

A new Global Preference has been added to limit the frequency that Recurring Calendar Events appear on Upcoming Events List and Event Search Page assets.

This is configured by an Event Frequency Threshold option, that allows you to set a minimum threshold (in days) for Recurring Calendar Events. If the frequency of the Calendar Event falls within this threshold, the event will only appear once on the listing.

WYSIWYG Insert Link Tool: Direct Links to Asset External Target URLs [ Feature Request #5517 ]
-----------------------------------------------------

The WYSIWYG's Insert Link tool allows you to insert a hyperlink to an external site or an internal asset. Previously, however, this tool, when creating links to Link and Redirect Page assets, would create a link directly to that asset (e.g. "./?a=123").

This features introduces new functionality that allows you to link directly to the target URLs of Link and Redirect Page assets.

A new Asset Type field has been added to the Insert Link tool. This field allows you to specify whether the link is to a Link or Redirect Page asset or, if not, any other asset.

When a user selects ether the Link Asset or Redirect Page Asset options, only assets of those types will be able to be selected in the Select Asset field. Once an asset is selected, and a global keyword replacement will be automatically printed in the Link field, linking directly to the target URL of the asset, as follows: 

	- %globals_asset_attribute_link_url:123%
	- %globals_asset_attribute_redirect_url:123%  

This feature has been added to aid editors and simply the process of linking to external urls on Matrix assets.

Load Balancing "Read" Database Connection Support [ Feature Request #5541 ]
-----------------------------------------------------

This feature introduces load balancing when distributing connections to multiple database servers, enabling support of multiple 'read' databases.

Databases are configured in the system's db.inc file and can be specified weight and timeout values to des gnat when/how the system will make a connection to these servers. The use of multiple 'read' databases is expected to significantly improve performance on complex systems that experience issues with a single connection setup.

Please note that modification of the db.inc file should only be performed by a system administrator.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5401: 12 Hour Time Option on Custom Form's Date/Time Question Type.
Minor Enhancement #5408: Asset Content Keywords on Listed Bodycopy DIVs.
Minor Enhancement #5419: Clear Squid Cache Tool Won't Run When Not Correctly Configured.
Minor Enhancement #5434: Connection Status and Error Information on a DB Data Source.
Minor Enhancement #5483: Logs Screen: Select Multiple Log Types to View. 
Minor Enhancement #5488: Specify Triggers to Execute on the Trigger Manager's Batching Screen.
Minor Enhancement #5498: Remap Manager: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5503: Metadata Select Field: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5504: Bulkmail Import User Tool: Option to Ignore Headers in Imported CSV.
Minor Enhancement #5514: Purge Trash Performance Enhancement.


Core

Fixed Bug #5051: WYSIWYG converts HTML/XML entities into characters.
Fixed Bug #5418: Combine curl/http_client requests into one library/function.
Fixed Bug #5461: Re-import content from data/files improvements.
Fixed Bug #5485: IE8 WYSIWYG quotation marks missing from attributes.
Fixed Bug #5486: Trigger Condition to check asset treeID fails with fatal error.
Fixed Bug #5499: Links Report CSV Export File Broken.
Fixed Bug #5501: Cannot save selected asset in Asset Finder in File Upload question; Link Manager.
Fixed Bug #5505: Resize of Image Insert window prompts asset tree pane resize to full window width.
Fixed Bug #5507: CSS Design File asset ignores permission.
Fixed Bug #5508: System design assets don't regenerate Design files.
Fixed Bug #5513: Javascript date picker in JS_Calendar class not working in Firefox.
Fixed Bug #5520: Paint Layout conditional keywords don't work as expected with Condition Keyword Regexp.
Fixed Bug #5530: Undefined index on Workflow screen.
Fixed Bug #5553: Custom form file upload, renaming rule doesn't rename it properly.

CMS

Fixed Bug #5509: Account Manager User asset web path conflict.
Fixed Bug #5518: CAPTCHA settings conflict.

Calendar

Fixed Bug #5459: Upcoming Events list displays multiple results for Single Calendar Events that run for more than one day.

Web Services

Fixed Bug #5522: GetAsset method doesn't return valid XML on all Assets.
Fixed Bug #5536: SOAP API's GetMetadataFieldValues Function, if empty field names are passed, doesn't return all values.

LDAP

Fixed Bug #5519: LDAP User sorting under LDAP Groups not working.
Fixed Bug #5524: LDAP attributes missing on User Details screen.


VERSION 4.6.0 RC1

Featured Changes
===================================


Remove Trailing Slash Off Requested URLs and Redirect [ Feature Request #5138 ]
-----------------------------------------------------

Within Matrix, a URL with or without a trailing slash will render the same content. As the Cache Manager treats every URL uniquely, however, Matrix would previously end up caching both of these URLs, resulting in two separate cache entries for the same content.

This feature strips the trailing slash off such front-end requested URLs and redirect them, resulting in just one cache entry for the URL content.

Please note that this feature does not apply to root URLs due to the possibility of apache being configured to append the trailing slash. 

Global Preference to Restrict Assets Created Under Specified Sites as Type 2 Linked [ Feature Request #5161 ]
-----------------------------------------------------

The new 'Child Creation Type 2 Link Restriction' global preference allows users to specify site assets to restrict newly created children to TYPE 2 links only. This means that any newly created assets under these sites (at any depth) will only be able to be created as TYPE 2 linked assets.

The link type of these assets can still be changed after asset creation via the asset's Linking screen.


New Script to Evaluate and Fix Files in the Public Data Directory [ Feature Request #5171 ]
-----------------------------------------------------

Matrix's public data directory houses File assets on the Matrix system that are publicly accessible (live with public read access). However, in some cases this directory may be missing files or contain old or private files due to file system permission problems and other issues.

This feature introduces the system_integrity_fix_public_files.php script. When run, this script will update any out-of-date files on the public data directory, create any files that are missing from the directory and remove any files that are private and should not be in the directory.

Usage of this script is as follows:

$ php system_integrity_fix_public_files.php SYSTEM_ROOT ROOT_ID 

System Integrity Clean Invalid Links Script [ Feature Request #5175 ]
-----------------------------------------------------

Squiz Matrix's system_integrity_orphaned_assets.php script finds and links orphaned assets underneath a specified asset ID. It also takes care of invalid links, where the major ID in a link is a missing asset; it does not, however, cater for when the child minor ID is missing while the major ID still exists.

This feature introduces the system_integrity_invalid_links.php script. This script will remove significant links where one or both sides of a link does not exist. This script will also report on the number of orphaned assets in the system and may recommend running the system_integrity_orphaned_assets.php script, upon its completion.

New Keyword Modifier to Apply XSLT to XML Content [ Feature Request #5183 ]
-----------------------------------------------------

Keyword modifiers allow you to modify keyword replacements to further configure their returned values. This feature adds a new keyword modifier to apply XSLT (Extensible Stylesheet Language Transformations) to XML content returned on the keyword.

The format for this keyword modifier is as follows.

%keyword^xslt:<assetid>%
 
%asset_contents_raw^xslt:343% 

This modifier will take the XSLT of a file asset (specified by asset ID), apply it to XML returned on the asset and output the result.

This feature has been added to allow users to transform the XML of assets, providing greater control over the content of their sites.

New System Forking Scripts [ Feature Request #5294 ]
-----------------------------------------------------

This feature adds three forking scripts, aimed to increase the performance of these scripts and prevent memory leakage, especially on larger systems where memory usage is otherwise too high and/or performance of single-threaded scripts is too slow.

The scripts added are:

system_apply_permissions.php : takes a permission string in a specific format that allows you to run multiple permission operations on the specified asset and their children. This script forks and runs in batches to curb memory usage and also runs multiple threads in parallel to speed up the overall operation.

system_apply_metadata_schema.php : applies a metadata schema to the specified assets and their children (and generates the metadata for that asset). Runs in batches and multiple threads in parallel.

system_update_lookups.php : updates lookups for all assets under the specified root node. Forks and runs in batches to keep memory usage down.


%asset_contents_paint_X% on Paint Layout Bodycopy [ Feature Request #5323 ]
-----------------------------------------------------

The %asset_contents_paint_X% keyword replacement is used on an Asset Listing Page to print the content of an asset with a specified Paint Layout applied. For example, the keyword %asset_contents_paint_1234% would apply the layout of asset #1234 to the asset content.

This feature enables the use of this keyword replacement for use within a Paint Layout bodycopy. This can be useful, for example, when using Conditional Keywords, to print the asset content with other Paint Layouts applied, based on the conditions specified.

This feature has been added to aid in the implementation of Paint Layouts, providing users with more flexibility and control over their content. 

Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5197: Enhanced Performance on Asset Listing Pagination.
Minor Enhancement #5206: Backup Script to Move Database Dump into the data/ Directory.
Minor Enhancement #5207: Asset Manager: getLinkLineages Query Performance Improvements.
Minor Enhancement #5255: Performance Enhancement: Cascading Permissions on Permissions Screen.
Minor Enhancement #5270: Performance Enhancement: Global Search and Replace Reindex Altered Assets Only.
Minor Enhancement #5304: system_integrity_recover_file_versions.php Now Works for Image Varieties.
Minor Enhancement #5308: Metadata Field's Friendly Name Attribute Available as Keyword Replacement.
Minor Enhancement #5310: Search Button on the Quick Search Tool.
Minor Enhancement #5312: Custom Form Date field link issue.
Minor Enhancement #5313: Performance Improvement to createAssetLink() Function.
Minor Enhancement #5316: Remap Manager: Never Delete Mass Select / Deselect.
Minor Enhancement #5321: Alternative Proxy Config Allows Matches to Exclude Going Through Proxy
Minor Enhancement #5325: http_request Obeys Alternative Proxy Settings.

Core

Fixed Bug #5143: Committing from "archived/approved to go live" causes attributes to be cleared.
Fixed Bug #5299: Cron job added are of time stamp in past.
Fixed Bug #5300: Keyword modifiers not working properly on site map.
Fixed Bug #5301: Metadata date field not disabled when "Use default" selected.
Fixed Bug #5303: Trigger action set standard date, updates not search re-indexed.
Fixed Bug #5306: Asset map complains about the empty XML on PHP 5.3.
Fixed Bug #5307: Trigger condition "Status changes to" throws PHP notice.
Fixed Bug #5309: Manual asset id input processing and trimming.
Fixed Bug #5311: Show Diff preview incomplete highlights.
Fixed Bug #5314: Short form shadow asset links.
Fixed Bug #5315: Design CSS assets doesn't regenerate parse file for itself or children customisations. CSS changes can't be seen in front end.
Fixed Bug #5326: Trying to add an Alternative Proxy spits out PHP warnings.
Fixed Bug #5334: Workflow escalation custom message are have wrong subject.
Fixed Bug #5341: Filter Front End User Input - set to 'Filter input' breaking front end layout after parse file commit.
Fixed Bug #5342: PHP 5.3 E_DEPRECATED warning in installation scripts.
Fixed Bug #5148: br tag created in the WYSIWYG as soon as it's created.
Fixed Bug #5327: Linking to image varieties requires a dollar $ sign to work.

Search

Fixed Bug #5319: Search Manager Asset Tree and Global Weights screen error. 
Fixed Bug #5324: Metadata Weightings in Search Manager Asset Tree Weights screen does not work. 

LDAP

Fixed Bug #5305: LDAP authentication ignores bridge asset-map position.
Fixed Bug #5347: LDAP Bridge not expanding for some User/User Groups LDAP entries

Web Services

Fixed Bug #5140: JS API importAssetsFromXML() only imports the first Asset. 
Fixed Bug #5318: JS API causing syntax error if the ajax response is "undefined" or "null". 
Fixed Bug #5328: JS API setAttribute will show success even on error. 



VERSION 4.4.0 RC1

Featured Changes
===================================


Logout Due to IP Change Logged in System Logs [ Feature Request #4604 ]
-----------------------------------------------------

Previously, when a user was logged out of Squiz Matrix because their IP changed and SQ_CONF_ALLOW_IP_CHANGE was set to true, neither an error or a system.security.* message would be sent. This meant that the only way to figure out why users were intermittently losing their session was to have prior knowledge of this setting.

This feature had been added so that Matrix will log logouts due to IP changing in the system logs. For example:

[2011-05-23 15:11:23][12:Root User][1024:mysource notice][ ] [system.security.logout.ip_change - remote_addr:192.168.1.1;sessionid:;] (User Automatically Logged Out) - User "Root User" was logged out since their IP address changed from 192.168.2.1 to 192.168.1.1.

Enhancements to the import_files_from_bridge.php Script [ Feature Request #5033 ]
-----------------------------------------------------

Squiz Matrix's import_files_from_bridge.php script imports files exposed through a File Bridge asset into Matrix. Previously, this script would import these files as File type assets; however, files will now be imported as corresponding Matrix file assets, when available. For example, an image will now be imported as an Image type asset. 

This feature also introduces the option of importing folders containing an index.html file as a Standard Page asset with the content of the index file. This option can be enabled by setting a parameter on the script.

The new usage of the import_files_from_bridge.php script is as follows:

php import_files_from_bridge.php <MATRIX_ROOT> <BRIDGE_ROOT_NODE_ASSETID> <PARENT_ASSETID> <RECURSIVE> <HANDLE_INDEX_FILE>
 
php import_files_from_bridge.php path/to/matrix 100 150 y y

Make SOAP Call Step Action For Multi-Page Forms [ Feature Request #5089 ]
-----------------------------------------------------

Currently, Squiz Matrix's Custom Form asset allows you to make a SOAP call on submission. This new feature extends the functionality of submission actions to the individual steps (or pages) of a multi-page Custom Form, allowing your form to make a SOAP call on each page submission.

Step actions can be configured on the new Step Actions screen for form sections.

The set up of the Make SOAP Call step action is similar to the Make SOAP Call submission action, allowing you to specify the connection to the SOAP server and specify the request message.

On the front end of the form, when a user clicks the Next Page button, Squiz Matrix will make the SOAP call, as configured on the Step Actions screen for that step.

The Make SOAP Call step action also utilises the new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

SharePoint CMIS Bridge [ Feature Request #5090 ]
-----------------------------------------------------

This new feature introduces the CMIS Bridge asset, a connection bridge for retrieving files from a CMIS enabled SharePoint repository (currently supports Microsoft SharePoint 2010).

This asset retrieves SharePoint documents in a similar manner to the SharePoint Saved Search; however, files imported over the CMIS Bridge will be imported as fully functional system assets within Squiz Matrix (such as Images, Text Files etc.). These assets can be edited, linked and moved around the system just like any other asset, allowing you greater control over your SharePoint repositories within Matrix. 

Files are stored under the CMIS Bridge asset in the asset map when initially synchronised with the connected CMIS enabled SharePoint repository. Further synchronisation will update these files, trashing any old files, modifying files that have been altered and creating new assets for new files on the repository.

Synchronisation is also controlled via a new Sync CMIS Bridges Cron Job. This cron job is set to run daily - its run time and frequency can be configured on its Details screen.

CMIS properties (e.g. Author, Objectid, Modified, Created) can be mapped to the metadata fields of a schema applied to the CMIS Bridge. Additional custom fields created for the document library will dynamically be made available for metadata mapping.

The addition of this asset enhances the SharePoint package within Squiz Matrix, allowing you to manage your SharePoint documents within Matrix with more control than ever before.

Search Page: Specify Data Sources on Exclude Fields [ Feature Request #5094 ]
-----------------------------------------------------

Previously, Matrix's Search Page only allowed you to configure data sources for search fields. The data sources allowed you to specify which fields on an asset to search. This feature extends this functionality to exclude fields, allowing you to specify which fields to exclude on.

Like a search field, exclude fields allow the following data source types:

Include All: searches all standard fields, attribute fields and metadata fields of assets.
Standard Asset Field: searches a specified standard asset field (e.g. the name of a page or its asset ID).
Asset Attribute: searches a specified attribute field (e.g. the title of a file of a MS Word Document asset).
Asset Metadata Field: searches a specified metadata field.

You can select multiple data sources to search for each exclude field that you add, specifying the word logic to use for your data sources (all words or any word).

Please note that existing exclude fields will default to the Include All data source type, returning the same results as they would previously had.

On the Search Page, the exclude field will only search the fields specified in its data sources. For example, say you configure the exclude field to search the Keywords metadata field of assets - if a user searches for the query News in the exclude field, the Search Page will exclude assets contain the query News in their Keywords metadata from the search results.

This enhancement to the Search Page's exclude fields allows you to tweak your Search Page, allowing your users to return more accurate results, specific to their searching queries.

Specifiying the Cron Deadlock Email Notification Receivers [ Feature Request #5103 ]
-----------------------------------------------------

Squiz Matrix's Cron Manager handles the cron process within a system, managing and running the cron jobs that have been scheduled. Occasionally, a cron job may stall, causing the Cron Manager to deadlock. When this occurs, Matrix will send out email notifications, informing users of these errors.

Previously, Matrix would send these deadlock email notifications to all users under the System Administrators Folder, as well as the email addresses configured in the system's main.inc file. These automated email notifications would be resent to these users each subsequent run of the Cron Manager, until the issue was resolved. This could cause large numbers of emails sent to many users, potentially causing inconvenience and even spam filtering issues with users' mail clients.

This feature adds a new option to the Cron Manager, allowing you to specify the users that will receive cron deadlock emails. This option is configured via a new Emailing Options section on the Options screen of the Cron Manager.

The Cron Deadlock Email Receivers field allows you to select users, user groups and roles to specify which users should receive email notifications from the Cron Manager. By default, the system's Root User and the email addresses configured in the system's main.inc file will automatically also receive these emails.

By allowing you to specify the users to receive cron deadlock emails, this feature allows you to more efficiently identify and manage any potential issues with the Cron Manager in your system.

A-Z Listing: Defining the Layout of Individual Letters on the Navigation List [ Feature Request #5124 ]
-----------------------------------------------------

On a multiple page A-Z asset listing, the navigation character list displays links to the different alphabetised pages on the listing. This feature adds the ability to format the individual letters on this list.

This feature utilises the asset listing's existing Page Link and Current Link formats, which were not previously used on an A-Z asset listing.

On an A-Z listing, the Page Link Format will now define the layout of each individual letter on the linked character list, while the Current Page Format will define the layout of letters that contain no results.

These formats use the existing %page_link% and %page_number% keyword replacements. For example, you could format the letters on the list so that letters with results will be in bold, while letters with no results will be struck out.

The feature gives users greater control over the layout of their A-Z listings, in line with the options available on a regular asset listing.

Make SOAP Call on Submit Submission Action: Array Data in SOAP Response [ Feature Request #5127 ]
-----------------------------------------------------

Previously, the Custom Form's Make SOAP Call on Submit form submission action could not handle array data in the SOAP response. This feature adds support for array data in the SOAP response, populating array data into global keywords using index numbers.

For example:

%globals_session_[FOMR_ASSETID]_array_field0_value%, %globals_session_[FOMR_ASSETID]_array_field2_value%, %globals_session_[FOMR_ASSETID]_array_field3_value%

This feature also adds a TEST SOAP option to printout the sample SOAP request and response in the backend, for testing purposes.

Make SOAP Call on Submit Submission Action: Check SOAP Response [ Feature Request #5128 ]
-----------------------------------------------------

This features introduces data validation on the SOAP request of the Make SOAP Call on Submit form submission action of a Custom Form. If incorrect data is found in the request, Matrix will respond with a suggestion of specific error message, while if no incorrect data is found, will process the request, as normal.  

This feature is implemented through a new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

JSON Data Source
-----------------------------------------------------

This new JSON Data Source asset is an alternative to the existing XML Data Source, facilitating server-side data exchange with web applications.

Clean Old Shadow Links Script
-----------------------------------------------------

A new script has been added to the Matrix database to clean links to shadow assets that are no longer valid. This is usually because the assets have since been removed from the data source, e.g. An LDAP backend user is linked under the System Administrators folder but is later removed from the LDAP Directory.

Additional reasons a shadow link may no longer be valid is if the connection between Matrix and the data source goes down or if the configuration of the connection bridge is altered for testing purposes. Because of these reasons, when the clean_old_shadow_links.php script is first run, it will only return a list of shadow links for review. You can then decided whether or not to delete the shadow links in the system.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5041: Enhancement: Matrix clear expired cache query sometime is too large for oracle
Minor Enhancement #5044: Performance Enhancement: When Send Cacheable header, and Matrix responds 304 Not Modified, there is a useless call to printFrontEnd() 
Minor Enhancement #5045: Add a favicon to the Admin interface.
Minor Enhancement #5078: Error message on eSec Payment Gateway when Matrix is unable to connect to the service.
Minor Enhancement #5079: Support vertical resizing for the asset map.  
Minor Enhancement #5082: eSec Payment Gateway respects the proxy settings in Matrix's system configuration.
Minor Enhancement #5087: Add logging for pdftohtml failures.
Minor Enhancement #5096: Improved performance when dealing with large sq_internal_messages table.
Minor Enhancement #5109: Video File Asset: Add webm format.
Minor Enhancement #5116: Clear cache cron job enhancement (default storage).
Minor Enhancement #5122: Issue with PHP function mime_type_content().
Minor Enhancement #5123: Metadata Manager default value functions performance enhancement.

Core

Fixed Bug #5050: LDAP Users not getting correct permissions if the user is under a subgroup.
Fixed Bug #5055: Nested content DIVs don't save properly across contexts.
Fixed Bug #5061: Fatal error when viewing the Details screen of a form submission when a section of the form has been deleted.
Fixed Bug #5064: HIPO pop-up windows lose focus in Internet Explorer.
Fixed Bug #5069: Hierarchy metadata field default value displays incorrectly.
Fixed Bug #5072: Trashed file assets still accessible via public data URL.
Fixed Bug #5080: condition user agent can not use regular expression operator '|'.
Fixed Bug #5083: Metadata Fields Inaccessible.
Fixed Bug #5084: Changed file name in Safe Edit causes multiple issues.
Fixed Bug #5085: IE 8 and IE 9 wont let user commit changes on WYSIWYG screen.
Fixed Bug #5086: Error when editing image varieties after cancelling Safe Edit.
Fixed Bug #5092: Asset Builder's insert link via WYSIWYG tool removes the dot (.) before  /?a= .
Fixed Bug #5093: Customised classes not appearing in EES WYSIWYG.
Fixed Bug #5097: Shadow links (shadow assets linked under a real asset) always appear red-crossed in Asset Map for non-admin users.
Fixed Bug #5099: [cron_job] Metadata triggers causing Cron deadlock.
Fixed Bug #5104: Triggering asset intermittently getting lost when using the send email trigger action.
Fixed Bug #5106: Contains keyword modifier fails on string with a slash (/).
Fixed Bug #5108: Selectable create location link type bug with account manager page.
Fixed Bug #5114: PHP 5.3 remote content page complaining "Assigning the return value of new by reference is deprecated".
Fixed Bug #5117: Dependants only will not check in Set permission trigger action.
Fixed Bug #5118: Role screen doesn't not validates role and user asset IDs.
Fixed Bug #5119: Asset listing grouping by parent results in mysource warnings when the parent asset is a user asset.
Fixed Bug #5120: System config screen, Enable HTTP Authentication option has cosmetic problem when lock is acquired.

CMS

Fixed Bug #5098: [cron_job] manage_pending_accounts causing Cron deadlock.
Fixed Bug #5102: Matrix will throw warnings is the nested asset is deleted.
Fixed Bug #5125: Forms answers getting unnecessarily encoded in Submission Logs screen. 

Search

Fixed Bug #5105: PHP Notices on Search Fields screen (Undefined Asset Type).

Web Services

Fixed Bug #4934: Committing from "approved to go live" causes attributes on REST assets to be cleared.




VERSION 4.2.0 RC1

Featured Changes
===================================


Version numbers in __data URLs [ Feature Request #4808 ]
-----------------------------------------------------

It's difficult to manage cache expiration of statically served content, since this content is served blind by apache.

That is, you can edit a file, or CSS asset for example, but until the browser forces the request of a new version (further compounded by reverse proxies), the old version will continue to be served.

A common pattern for dealing with this is to add version numbers to the URL for the static file. Often, this is simply added as a query string for simplicity.

The effect being, when the file is updated and you bust the cache on the page, the URL for the file is different (since it's versioned), and so the browser gets the fresh version of the asset.

This can be a huge boost in caching strategies, allowing people to be more aggressive with their cache policy and empowering them to bust the 'perceived' cache on static files more easily.

TRIM Feature Request for Cron Job [ Feature Request #4875 ]
-----------------------------------------------------

Added ability to modify the (when) attribute of the saved search cron job through the details interface.

Also added a custom field in saved search to allow the result set to contain a text version of a records container called (Container Title)

	Remap Manager: Never Delete Enhancements [ Feature Request #4890 ]
	-----------------------------------------------------

	The Remap Manager's Never Delete option allows you to lock specific remaps from being deleted. This new feature improves this existing functionality by adding a variety of enhancements.

	A new option has been added to the Remap Manager to purge all remaps in the system except those marked as Never Delete. This option is enabled through a new field on the Details screen of the Remap Manager.

	Setting this field to Yes and clicking Commit will purge all remaps in the system that are not marked as Never Delete.

	The Web Paths screen of an asset would previously list its remaps but would provide no indication of whether the remap was marked as Never Delete or not. A new column has now been added for remaps on the Web Paths screen to display whether the remap is marked as Never Delete.

	Previously, delete fields were available to all remaps listed in the Remap Manager or on the Web Paths screens of assets. These fields were ineffective when used on remaps marked as Never Delete, however they were still accessible. These delete fields will now only be enabled for use on remaps not marked as Never Delete. The delete field will be disabled on remaps marked as Never Delete, as shown in the figure above.

	The Remap Manager's Never Delete Added Remaps? field will now be disabled by default, meaning that users must manually enable this option. This field was previously enabled by default; Existing installations using the previous default will retain their settings when being updating.

	Slight performance improvement in rebuilding cache [ Feature Request #4925 ]
	-----------------------------------------------------

	A slight performance improvement can be achieved by testing if the asset has no urls first up and finishing, since a url is needed to be indexed by funnelback.

	Improved permissions in Squiz Search [ Feature Request #4926 ]
	-----------------------------------------------------

	Improved permissions in Squiz Search will be handled by adding the systemid to all but the public key when retrieving the sitemap.


	Additional Changes and Bug Fixes
	=================================== 

	Minor Enhancements
	Minor Enhancement #4804: HTTP Request Header Acknowledges System Proxy Settings.
	Minor Enhancement #4869: Exporting Asset Attributes with CDATA Values.
	Minor Enhancement #4891: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4894: Asset::readAccess Makes Unnecessary Calls to the Workflow Manager.
	Minor Enhancement #4895: Don't Add Remap Option on the Add Web Path Trigger Action.
	Minor Enhancement #4912: Improved Performance of the Workflow Screen.
	Minor Enhancement #4913: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4916: System Asset Links Locked by Default.
	Minor Enhancement #4923: Enhancement: When Painting 404 not found Page and Sending Cacheable Header is Enabled, Expiry header is Not Set.

	Core
	Fixed Bug #4856: Replace Text 'selected text only' not working in IE7+8.
	Fixed Bug #4881: Date/Time form output.
	Fixed Bug #4885: Daily cron jobs run twice.
	Fixed Bug #4886: "Update lookups" HIPO Job in File::saveAttributes() creating issue.
	Fixed Bug #4889: Incorrect default when attribute on Sync Product cron job.
	Fixed Bug #4896: Trigger action "Set Metadata Value" fails when using parameter map.
	Fixed Bug #4903: Online Quiz List Format field description lists unavailable formats.
	Fixed Bug #4904: Typo on design_area_asset_lineage screen.
	Fixed Bug #4905: Quotation button in WYSIWYG view, unquote results in escaped html.
	Fixed Bug #4906: 'AssetStatusUpdate' event broadcasted but onAssetStatusUpdate() never executed.
	Fixed Bug #4907: Error when changing content type in a non default context.
	Fixed Bug #4910: When an asset is linked to a big number of parents, you will easily get Oracle error ORA-01795: maximum number of expressions in a list is 1000.
	Fixed Bug #4915: Metadata value trigger condition does not consider keywords.
	Fixed Bug #4924: DB error when a design asset is notice linked to too many assets.
	Fixed Bug #4930: Global Search and Replace doesn't replace metadata.

	CMS
	Fixed Bug #4878: ORA-01795 on Site Map asset.
	Fixed Bug #4880: Insert image doesn't remember location of last image variety uploaded.
	Fixed Bug #4892: Small typos in Remote Content asset Details screen.
	Fixed Bug #4901: Using a nested asset in simple edit layout which has an arbitrary paint layout set, will throw PHP notices.

	Calendar
	Fixed Bug #4899: Recurring calendar event instance date keyword bugs.

	Web Services
	Fixed Bug #4877: JS API Fails on https only domains.
	Fixed Bug #4909: JS API setAssetStatus permission denied for user with write permissions.
	Fixed Bug #4920: JS API not escaping metadata correctly.
	Fixed Bug #4922: JS API returns invalid JSON.

	Funnelback Package
	Fixed Bug #4911: Contextual Navigation links not working with Funnelback Server Search.
	Fixed Bug #4921: The Sitemap XML generated by Matrix is not escaping nbsp chars.

