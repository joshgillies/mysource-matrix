MYSOURCE MATRIX CHANGELOG

VERSION 3.26.1

Featured Changes
-----------------------------------

JS API: Multiple Set Metadata function [ Feature Request #4128 ]
	A new function "setMetadataAllFields()" is now available in the JS API. This function takes a single array of field ids and their corresponding values to enable updating multiple fields for an asset in one request.

This provides performance gains over using multiple "setMetadata()" requests. Locks are acquired once and the Metadata Content is generated once for the asset instead of once per field. This function returns TRUE on success and FALSE on failure (eg; when failing to fill in a required field).


Reindex Assets script: Specification of multiple Root Asset Nodes [ Feature Request #4130 ]
	The command line script packages/search/scripts/reindexSearchIndex.php now allows multiple Root Nodes to be entered for reindexing.

The script can now be used as follows:

	$ php packages/search/scripts/reindexSearchIndex.php `pwd`
	Enter the #IDs of the root nodes to reindex (space separated)
	or press ENTER to reindex the whole system: 123 456 789

A prompt will appear to confirm reindexing of each specified node.


Listing Engine: Group by Asset Keyword [ Feature Request #4153 ]
	A new option is available in Listing Engine assets such as Asset Listing and Search Page, to provide grouping by keywords.

Like existing grouping options, this can be configured from the Asset Grouping screen of these assets. The keyword used for the grouping is supplied without leading or training percentage (%) characters.


TRIM Saved Search: Custom Metadata Fields and Search Logic [ Feature Request #4155 ]
	TRIM Saved Search assets now allow queries on custom TRIM metadata fields and allow boolean search logic between these terms to be defined.

A set of known metadata fields which is shipped with TRIM are the TRIM Saved Search options by default. This can be expanded by requesting all available fields from the TRIM system, for use in search queries. A "Retrieve Now" button is available from the Details screen to retrieve these fields.

The Search Logic and Result Fields are expanded, and are configured from the Details screen. The layout is similar to that provided for Search Page assets. Fields may be grouped with a boolean operator, and each group is joined by another boolean operator.

For example:

	Group 1:
		- Search field "AnyWord" for value "Fred"
	[ AND ]
		- Search field "Title" for value "Test"

	[ OR ]

	Group 2:
		- Search custom field "Status" for value "Yes"

Groups may be joined only by one common boolean operator, and "NOT" logic is unavailable.

Just like the Search Logic, Result Fields may be composed of standard or custom fields, or both.


Asset Manager lineage listing performance enhancement [ Feature Request #4160 ]
	A performance enhancement may be evident on systems with large asset trees and/or many links pointing to a particular asset.


Matrix Backup Script: Suppression of minor notices [ Feature Request #4158 ]
	Minor notices such as "file changed as we read it" are now suppressed, to avoid these being sent by email from backup routines scheduled by cron.


Additional Changes and Bug Fixes
-----------------------------------

Core
Fixed Bug #3717: New version of backup.sh fails with Postgres 8.3
Fixed Bug #3927: Form email address question throws error for public user
Fixed Bug #4098: Remaps can be deleted from asset Web Paths screens regardless of Never Delete setting
Fixed Bug #4099: Trigger will remove remaps even if "Never Delete" option is selected for that remap
Fixed Bug #4102: System Maintenance: Total Assets Report incorrect
Fixed Bug #4109: Undefined index: message_reject
Fixed Bug #4118: Reports and Maintenance Tasks : Rollback Report, logic incorrect
Fixed Bug #4139: Moving asset onto itself or under itself prompts warning and places into trash
Fixed Bug #4141: Script import_asset_csv_to_matrix.php does not alter edited attribute values
Fixed Bug #4143: Typo in File asset's details screen
Fixed Bug #4149: Deleting contexts leaves records for the contexts on db
Fixed Bug #4161: Edit operations import new assets in import_assets_csv_to_matrix when a Metadata Field is chosen for the unique identifier
Fixed Bug #4168: Typo on User Group asset User Preferences screen
Fixed Bug #4171: Asset Logs screen shows PHP Notice immediately after truncating Internal Messages table

CMS
Fixed Bug #4119: Cloning a form new links the submissions from the old form

Data
Fixed Bug #4113: XML Data Source throws "XML error: XML_ERR_NAME_REQUIRED" when source XML contains XML entities

Search
Fixed Bug #4122: Empty search and synonym search cause php warning
Fixed Bug #4136: Inserting value larger than 4000 characters into search index table in Oracle system throws db error

TRIM
Fixed Bug #4151: TRIM form submission action author always uses user id 1 for 3.26

Web Services
Fixed Bug #4123: Javascript API not handling UTF-8 extended characters in Internet Explorer
Fixed Bug #4126: JS API Key changed on upgrade
Fixed Bug #4129: Javascript API not handling '&' characters
Fixed Bug #4145: JS API not maintaining link values when moveing and creating



VERSION 3.26.0

Featured Changes
-----------------------------------

Bundle assets
	Bundle assets allow a group of assets to be taken into Workflow and approved in batches. This asset can be found under the "Schemas" sub-menu in the Asset Map.

"Under Construction" assets without an associated Workflow Schema which are linked under a Bundle, will be set to "Live" when applying for approval. Other assets will follow the next logical Workflow process.

Bundles also have support for Workflow Streams - users have access to any stream they would have access to under at least one bundled asset.


TRIM 6.2 compatibility
	All functionality provided by the TRIM Package is now compatible with TRIM 6.2. In addition to this, Search and Form posting access can now be provided to non-admin TRIM users who have the appropriate grants. The TRIM Connector supports connections over proxies, determined either from the Matrix Proxy Configuration, or an alternate one specified in the Connector itself.


Matrix System Check script
	A test suite to identify system integrity issues on a Matrix System has been added to the "scripts" directory. The script "system_check.php" will run tests which will report on any known inconsistencies in the system. This script will not resolve any issues, so the results must be interpreted and the appropriate action taken.

The script is executed as follows:

	php scripts/system_check.php [ARGS]

	Where [ARGS] can be:
		--system=[MATRIX_ROOT] The path to the matrix system
		--verbose Show more detailed errors
		--colours Use colours
		--stats Show statistics for this process
		--help Show this help screen


Check Indexes System Integrity script: Alter Table for incorrect primary keys
	Additional checking has been added to this script to verify that primary key constraints are named as expected. For example, "ast_pk" for the sq_ast table. Corrective database queries will be displayed during the script run which must be applied manually.


Additional Changes and Bug Fixes
-----------------------------------

Core
Fixed Bug #4075: System Maintenance: Trash Age Report JS Error
Fixed Bug #4082: Set Workflow Schema' Trigger Action 'Automatically cascade this schema to newly-linked children' setting won't update
Fixed Bug #4084: Remove self links functionality not working correctly
Fixed Bug #4086: Set value in this context always defaults
Fixed Bug #4091: Remap Manager: Remaps have no apparent sort order
Fixed Bug #4095: Email format: attribute edit params have no effect
Fixed Bug #4103: Keyword Modifiers: Not working within paint layouts
Fixed Bug #4108: "Active Locks" show all locks in the system
Fixed Bug #4111: Public user refreshes custom form with a file upload question will get form error
Fixed Bug #4115: Source code preview syntax error

Calendar
Fixed Bug #4073: Wrong time / date for the end date of an event
Fixed Bug #4101: Month view displaying wrong URLs for days
Fixed Bug #4104: Cloning multi-date calendar event assets removes the webpath of each event instance

CMS
Fixed Bug #3956: SQ_ prefixed HTTP GET variables cached as pagination links in Asset Listings
Fixed Bug #4088: Multiple exclude root nodes on an asset listing only applies first selection

Data
Fixed Bug #4065: Commit XML data source gives error "Fatal error: Argument 1 passed to Data_Source::setResultSet() must be an array..."
Fixed Bug #4078: Using non-default xml entities like &nbsp; &copy; in xml feed in XML Datasource throws error

Search
Fixed Bug #4074: Search keywords with silent characters doesn't returns result in Oracle
Fixed Bug #4090: Search Manager does not respect Asset Weight priority when indexing



VERSION 3.26.0 RC1

Featured Changes
-----------------------------------

Workflow Streams
	This functionality allows multiple sets of Workflow Steps per Workflow Schema, and allows Administrators to select which of these sets is to be used for any given Workflow process.

Please note that new and existing Workflow Schema steps will be moved under a "Default Stream" which resides under the related Workflow Schema. This Default Stream cannot be moved or deleted. 


Replace Keywords option in Set Value Trigger Action
	A checkbox "Replace keywords in the set value" is provided in the Set Metadata Value and Set Attribute Value Trigger Actions to indicate whether keywords supplied in these fields are to be replaced upon evaluation rather than being treated as literal text. This can be used with both asset-level and Global Keywords.


Public User Trigger Condition
	A Trigger Condition has been added to evaluate whether or not the user who caused the associated Trigger to fire was the Public User (ie; not logged in). 


Asset Lineage Design Area: Negative Start Level definition
	The attribute value for "start_at_level" can now be specified as a negative number to refer to direct parent assets of the current asset.
For example, -1 would refer to the direct parent, -n to the nth direct parent. Other positive numbers (0 = current asset, 1 direct child etc.) still continue to function as previously defined. 


Additional Asset Keyword Modifiers
	New Keyword Modifiers have been added, which are:

	- md5 (return the computed MD5 hash of the value)
	- sha1 (return the computed SHA1 hash of the value)
	- stripdecl (strips an XML declaration <?xml ... > from the value)
	- number_format (formats a number with grouped thousands and rounded to x significant digits, defaulting to 0)

Some examples:
	%asset_name^md5% (eg; fred becomes 08b622ddf7eb7c8e44cdb3bd6362f966)
	%asset_attribute_price^number_format:2% (eg; takes 1.235 and shows it as 1.24) 


PayPal Payment Gateway modifications
	The PayPal Payment Button asset now supports "Donate", "Add to Cart" and "View Cart" button types, in addition to "Buy Now". The options for each Button Type are available by toggling the Button Type from the "Details" screen and clicking "Commit".

	- Donate Button
	This button allows the name of the Organisation or purpose of the donation to be supplied, as well as the ability to specify a fixed amount.

    - Add To Cart and View Cart buttons
	This allows for cart-based transactions to be maintained by the PayPal environment. The "View Cart" button provides an option to open the cart contents either within the current browser window/tab or in a new window/tab.

	- PayPal IPN Receiver modifications
	This asset has been modified to accept the "Cart" transaction type and to populate the receipt of the generated PayPal Order. 


Move Assets Script enhancements
	The Create Links HIPO Job is now used in this script to perform "move" operations, rather than direct asset manipulation. 


System Update Lookups Script: Increased Verbosity
	The system_update_lookups.php script now supports an optional "--verbose" argument to display any errors which may occur as a result of updating lookups. The script can now be executed from the Matrix System Root directory as follows:

	php scripts/system_update_lookups.php . 123 --verbose


Globals Site Keywords performance enhancement
	Modifications have been made to the Matrix core to provide improvements in the evaluation speed of %globals_site_..% keywords and when site-based options are selected from the Parameter Map. 


Get Lineage performance enhancement
	Instead of loading each asset in the lineage to determine whether they are in Safe Edit, this is now only performed upon assets in the lineage which are in Safe Edit. This should show a slight improvement on the initial load on long lineages with many assets not in Safe Edit. 


Purge Trash HIPO performance enhancement
	A query has been optimised in the Purge Trash HIPO to return assets in "sort order". This modification removes the need to update the sort order of nearby assets, which may result in a performance increase when running this HIPO.
