SQUIZ MATRIX CHANGELOG



VERSION 4.14.7

Bug Fixes
=================================== 

Core

Fixed Bug #6495: Single Page A-Z Listing "Page Link Format" doesn't work.
Fixed Bug #6507: If asset is deep in the asset tree and also linked to many parents, one might run into ORA-01795 error.
Fixed Bug #6508: Send Submission Log Cron Job doesn't clean up.
Fixed Bug #6510: minor problem when cron job script is given path to Matrix as argument.
Fixed Bug #6512: Spell Checker removing links from the content.
Fixed Bug #6518: Rest resource asset won't pass additional GET var from nested content.
Fixed Bug #6526: viewing form with _nocache suffix would not submit.
Fixed Bug #6536: Metadata fields defaulting to %metadata_field_<name>% do not trigger update when referenced field updates.
Fixed Bug #6539: minor issue with Force Secure URL redirecting.
Fixed Bug #6541: Bodycopy div with type Image does not pick up caption for image variety.
Fixed Bug #6544: metadata in context cancelling "use default" on default context results DB errors duplicate key.
Fixed Bug #6548: Having \' in a matrix URL throws a DB error.
Fixed Bug #6549: Fatal Error when Redis cache connected to a slave.
Fixed Bug #6553: Custom form and safe editing do not play well.
Fixed Bug #6555: Global SQ_PAINT_LAYOUT_ID is not reset correctly.
Fixed Bug #6557: DB datasource connection using complete DSN to non pgsql data fail.
Fixed Bug #6560: %preview_url% not getting replaced in the default workflow start email.
Fixed Bug #6561: Preview screen not picking the correct URL for the dependant asset.
Fixed Bug #6564: Cannot set dynamic parameters value without setting the tag id in the Set Tag trigger action. 

CMS

Fixed Bug #6513: Send Submissions Cron Job attachment has no extension.
Fixed Bug #6550: Remote Content page nested in the login design throws fatal error.
Fixed Bug #6554: Single square bracket ([ or ]) in First Name or Last Name of System Administrator causes warnings on changing password.  

Calendar

Fixed Bug #6520: Upcoming events list gets lists single and recurring events in wrong order.
Fixed Bug #6538: Calendar Events Search Page not listing events in Safe Edit.
Fixed Bug #6543: Calendar instance keywords don't work properly with replace_keyword. 

Data

Fixed Bug #6558: RSS Data Source multiple fields reducing to single entity. 

Google Maps

Fixed Bug #6547: Google Maps not rendering basic keywords. 

Web Services

Fixed Bug #6505: REST resource option to 'Allow Keyword replacement' can stop all the keywords from replacing.


VERSION 4.14.6

Minor Enhancements and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6452: Asset Listing: Keyword Support for Link Value Filtering.
Minor Enhancement #6471: CSV Data Source Error Enhancement.
Minor Enhancement #6475: Asset Builder Page: CAPTCHA Enhancement.

Core

Fixed Bug #6313: Design Customisation no longer has independent status.
Fixed Bug #6396: Links Reports say HTTS URLs cannot be tested.
Fixed Bug #6440: HIPO Job getJob concurrency with load balanced read databases.
Fixed Bug #6445: Modifiers not run on metadata keywords in an Asset Listing.
Fixed Bug #6454: Check index script doesn't check rollback tables correctly.
Fixed Bug #6457: Cannot set the user's password on the Funnelback manager.
Fixed Bug #6460: Content-Disposition header of Matrix files has unquoted file name.
Fixed Bug #6461: Deja Vu issues and enhancements.
Fixed Bug #6462: Error checking for the as_asset keyword modifier can bombard error.log with warnings.
Fixed Bug #6463: Performance improvement to remove_form_submission.php script.
Fixed Bug #6465: Remote Content asset displays arbitrary URLs when no protocol set.
Fixed Bug #6467: The Clear Matrix Cache and Clear Squid Cache tools' Clear Now option doesn't work as expected.
Fixed Bug #6469: Zero(s) issue when exporting/importing assets.
Fixed Bug #6476: Replace keyword modifier strips regex characters.
Fixed Bug #6486: Uploading a pdf file with pdftohtml enabled shouldn't block content indexing if there is a minor error.

CMS

Fixed Bug #6443: After cloning a form sections need to be committed before displaying.

Data

Fixed Bug #6492: Data source JSON bypasses any proxy settings. 

Search

Fixed Bug #6964: Search and Replace tool can throw db error if replacing many assets.

Calendar

Fixed Bug #6451: Problem with cancelling a Recurring Calendar Event that occurs in the afternoon.
Fixed Bug #6488: Listing Calendar Events with the Event Search Page getting undefined object/function error.

Sharepoint

Fixed Bug #6491: Sharepoint CMIS issue when using a stored WSDL file.

Funnelback

Fixed Bug #6261: Funnelback REST Search Page passing parameters dot converted to underscore.


VERSION 4.14.5

Minor Enhancements and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6285: Bulk Import Tool: Alphabetical Server File Import List.
Minor Enhancement #6302: New Root Nodes Keyword Replacement for Calendar Assets.
Minor Enhancement #6389: New Error Codes Added for File Upload.
Minor Enhancement #6397: Inconsistent Workflow Script Usage Extended to Safe Edit Approved to Go Live Assets.
Minor Enhancement #6434: Absolute URL for href Actions on Form Assets.
Minor Enhancement #6442: Calendar Search Page: New Hide Unlinked Navigational Text Option. 

Core

Fixed Bug #6344: WYSIWYG background colour selector not working in IE.
Fixed Bug #6388: Image variety public url not picking up the correct base url.
Fixed Bug #6390: System config should check for the duplicate entries for "System Root URLs".
Fixed Bug #6391: Script "set_files_unrestricted.php" does not works in system with Deja Vu enabled.
Fixed Bug #6393: Issue with roles and workflow with LDAP group.
Fixed Bug #6395: confirm_field error on Funnelback Manager.
Fixed Bug #6401: Script system_integrity_inconsistent_workflow_status.php not working in Oracle systems.
Fixed Bug #6405: Ecom Delivery Method not picking up the correct Checkout.
Fixed Bug #6416: Deja_Vu causing intermittent failures with JS API when missconfigured.
Fixed Bug #6418: Single Calendar Event Create Form Layout does not work with %globals_get_var^as_asset:xxxx%.
Fixed Bug #6420: Context Configuration - Missing some Accept-Language request header for the Chrome.
Fixed Bug #6421: Public User Only for Root URLs to Send Cacheable Headers ignored.
Fixed Bug #6424: Custom Form "Send Submissions To Email" sending empty CSV.
Fixed Bug #6428: WYSIWYG insert table doesn't work as expected.
Fixed Bug #6432: Condtion "Server variable" throws error if string to match contains regex delimiter.
Fixed Bug #6435: Asset Listing Pages and NOTICE links.
Fixed Bug #6446: Asset map warning/error for JS to Applet calls affecting Use Me and Binocular function.

CMS

Fixed Bug #6392: Remote Content page, extra trailing & in url.
Fixed Bug #6417: Having a file upload field on the target content of Remote Content page can break. 

Calendar

Fixed Bug #6399: Calendar Page %up_link% keyword gets printed as keyword format where it should just print nothing.
Fixed Bug #6406: Calendar Page "Description Popups" setting prints descriptions on load.
Fixed Bug #6410: Issues when using modifiers on the asset_metadata keyword on Upcoming Events List page. 

E-Commerce

Fixed Bug #6038: 'Calculate Tax During Checkout' setting controls delivery fees calculation as well. 

Data

Fixed Bug #6422: Large CSV Data Sources displayed with an asset listing fail when _nocache or _recache is used. 

Web Services

Fixed Bug #6403: Incorrect links in the workflow email when using EES.
Fixed Bug #6414: REST Resource OAuth Session doesn't seem to return any errors.



VERSION 4.14.4

Minor Enhancements and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6183: SQ_PA_PASSWORD No Longer Emailed on Password Change.
Minor Enhancement #6233: Pre-Uploaded Files Listed in Alphabetical Order.
Minor Enhancement #6334: Modifier Support on Password Reset Page Error Keyword Replacement.
Minor Enhancement #6364: Dynamic URL for Downloaded TRIM Records.
Minor Enhancement #6373: Global Keyword Replacements on a Squiz Matrix Login Design.
Minor Enhancement #6387: Enhancements for Squiz Matrix on PHP 5.4. 

Core

Fixed Bug #6178: Special characters and registry-R.
Fixed Bug #6297: Special UTF-8 characters.
Fixed Bug #6311: No Write access on Details screen of Metadata Selection Field; CSV Upload option remain selectable.
Fixed Bug #6326: Remote content URL tunneling; PHP notices.
Fixed Bug #6338: Asset Builder Page: Wrong image error.
Fixed Bug #6340: Set Index Page trigger does not allow all asset types like a Site's Details screen does.
Fixed Bug #6351: Embedded YouTube videos are not adhering to their settings.
Fixed Bug #6352: sq_wysiwyg_* tags are making it to the front-end since fix for Bug #6256.
Fixed Bug #6360: Globals keyword stripping encoded URL parameter.
Fixed Bug #6361: Editing a Send Submission Log Cron Job; Time of Next Run selection forgotten.
Fixed Bug #6363: Icon in the top right for Matrix Admin interface doesn't appear on IE10.
Fixed Bug #6366: Visual aid plugin for WYSIWYG Editor not working on IE10.
Fixed Bug #6367: remove_form_submission.php fails if submission folder has notice links.
Fixed Bug #6369: Online Quiz: Question types Datetime and Password break User Details form.
Fixed Bug #6372: Parameter 1 to Condition_Edit_Fns::paintEditInterface() expected to be a reference; Value given. 
Fixed Bug #6378: REST Resource Trigger Action throws errors if triggered by running system script. 
Fixed Bug #6383: Password Confirm field not respected when setting password.

CMS

Fixed Bug #6345: Account Manager Page's cron job to remove the pending accounts can deadlock the cron manager.
Fixed Bug #6556: Keywords "maxwords" and "wordcount" consider number words like "52" differently.
Fixed Bug #6357: Unable to save Answer Destination for Decision Tree Select Question's answers.
Fixed Bug #6365: Nested content div with arbitrary paint layout throws warning. 

Calendar

Fixed Bug #6305: Text coding problem on Prev and Next links. 

Data

Fixed Bug #6349: Using MYSQL database on the 'Execute DB query' Trigger action may break after upgrade to 4.14.0. 

TRIM

Fixed Bug #6342: Required TRIM function parameter "Reserved" not sent by Matrix TRIM package.
Fixed Bug #6346: TRIM Saved Search does not refresh the "trim records" if no records are found in the TRIM.
Fixed Bug #6348: TRIM Saved Search throws error if search keyword contains "&" character.
Fixed Bug #6355: Record number in URL of TRIM downloaded file revert to URI. 

Web Services

Fixed Bug #6362: SOAP Data Source is not working if the response using soap; as envelope.



VERSION 4.14.3

Featured Changes
===================================

Custom Form: Allow Public Users to Save Form Submissions [ Feature Request #6306 ]
-----------------------------------------------------

Squiz Matrix's Custom Form allows logged-in users to Save and Exit their form submission, retaining the content of their incomplete submission, which they can return to finish at a later time.

Previously, however, this functionality was not available for public users. This feature extends the Save and Exit function to also include public users, allowing them to save the content of a form submission to complete later.

When a public user saves their submission and exits the form, they will be sent an email, containing a link to return to the form and a password, allowing them to access and complete their submission.

This feature can be enabled and configured via the new Public User Incomplete Submission section on the Form Contents screen of the Custom Form's Form Contents asset.

The settings available allow you to configure the format of the Submission Retrieval Email for a public user, as well as the Submission Retrieval Message (displayed when the user Saves their form content) and Password Verification Form (when returning to a previously saved form).


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6197: Performance Improvement to system_integrity_invalid_links.php.
Minor Enhancement #6310: Comma-Separated List of Addresses on Email Forms Within Matrix.
Minor Enhancement #6323: Save As XML Submission Form Action: Sort Submission Answers Option. 

Core

Fixed Bug #6299: Using a metadata field on the Set Future Status trigger action gives misleading results.
Fixed Bug #6300: Metadata relative date not saved.
Fixed Bug #6301: Redis cache can trigger a fatal error in transaction mode.
Fixed Bug #6308: YouTube videos embedded within Matrix assets will always auto-play.
Fixed Bug #6309: Purging trash with a requested purge root should fail if the root is not found.
Fixed Bug #6312: Circa option in the Date Form Question field is not working.
Fixed Bug #6314: The Test field's Max Char client-side validator not validating fully.
Fixed Bug #6315: Incorrect content type header breaking the front end page with WYSIWYG.
Fixed Bug #6317: Asset_Manager::getParents() throwing fatal db exception for a special scenario.
Fixed Bug #6325: Assets that use a Password field for sign-up throw undefined index: confirm_field error.
Fixed Bug #6332: Broken Links email are not getting sent.
Fixed Bug #6333: WYSIWYG editor doesn't work fully with IE10.
Fixed Bug #6336: Asset Map breaks when HTTP Only cookie option set.
Fixed Bug #6337: Script import_asset_csv_to_matrix.php sends regular output to STDERR. 

CMS

Fixed Bug #6318: Custom Form non-Accessible still shows required asterisk. 

Calendar

Fixed Bug #6327: Event assets don't print metadata in Upcoming Events page until any date value is printed. 

Import Tools

Fixed Bug #6328: Import Bulk File tool ignores some supported file extensions.

Web Services

Fixed Bug #6307: SetRole does not work with Group ID.


VERSION 4.14.2

Featured Changes
===================================

New SOAP Data Source Asset [ Feature Request #6079 ]
-----------------------------------------------------

A new data source asset has been added to Squiz Matrix to make a SOAP call to a remote SOAP service and generate the data record sets based on the returned SOAP response. You can use either HTTP Basic or WS Username Token Header authentication types to access the SOAP service.

Like other data source assets, the SOAP Data Source will include standard features such as record filtering, data source keywords and dynamic inputs.

REST Resource: HTTP Request Digest Auth Authentication Type [ Feature Request #6136 ]
-----------------------------------------------------

This feature introduces a new Digest Auth authentication type on the HTTP Request of Squiz Matrix's REST Resource assets.

Selecting this Authentication Type option will display new fields, allowing you to input the username and password for authentication.

E-Commerce: PayPal Payflo Pro Payment Gateway [ Feature Request #6208 ]
-----------------------------------------------------

Squiz Matrix's E-Commerce package contains a number of payment gateway options for your e-commerce setup, including the SecurePay eSec, Datacash, SagePay, DPS and uTransact payment gateways.

This feature introduces a new payment gateway for PayPal's Payflo Pro payment solution.

The Payflo Pro payment gateway differs from Matrix's existing PayPal payment gateway as, while the existing payment options redirect you to PayPal during the payment process, Payflow Pro is fully integrated into your site. This gives you complete control over the look, feel and functionality of the payment process.

Currently, the PayPal Payflo Pro payment gateway will support credit and debit card payment processing only. The settings of the payment gateway allow you to configure the accepted card types, as well as the currency to use for the transfer.

Accessible Custom Form [ Feature Request #6228 ]
-----------------------------------------------------

Squiz Matrix's Custom Form asset allows you to create and manage a form to collect data and other information from your users, for example, a Contact Us form or a custom survey.

Previously, this asset used table tags to structure the questions and answers of the form. This, however, could potentially cause accessibility issues on the form.

This feature addresses these issues by introducing a new option on the Custom Form asset to output form content as WCAG 2.0 accessible HTML content rather than the standard tabular format. 

The new Accessible Format option can be configured on the Form Contents screen of the Custom Form's Form Contents asset. By default, this option will be enabled on all newly created Custom Form assets. Any existing forms on a system will retain their original format, with this option disabled. 

This new option will present accessible HTML for the form and its questions in a semantic format, as well as the following additional accessibility features:

Improved default and Mollom CAPTCHA formats to meet accessibility standards.
Required questions are now marked in the label tag of the question.
Form question and CAPTCHA errors will now be displayed next to the corresponding fields. General form errors will continue to be displayed, by default, at the bottom of the form.
Tickbox Question: table format improved.
Date/Time Question: option to turn off JavaScript input assistance.
Password Question: configurable titles for Password and Confirm Password fields.
Semantic summary used for the default Thank You page rather than tabular summary. 

These accessibility features have also been extended to the eCommerce Form Page asset. 

REST Resource: Specify SSL Certificate and Key File Paths [ Feature Request #6238 ]
-----------------------------------------------------

This feature introduces a number of new fields on the HTTP request of Squiz Matrix's REST Resource assets, allowing you to specify SSL certificate and Key file paths to be used on the request. This allows the REST assets to connect to web services that require 2WAY or Mutual SSL authentication.

This feature also includes a new check-box to force requests to made using HTTP/1.0 rather than 1.1. This is useful in some advanced configurations with older proxy servers that do not fully support HTTP/1.1.

New Remove Permissions Script [ Feature Request #6239 ]
-----------------------------------------------------

Squiz Matrix's system_apply_permissions.php script is commonly used to apply permissions to a set of specified assets and their children, for example, granting Admin permissions. Previously, however, there was no script available to remove permissions in the same efficient manner.

This feature introduces the new remove_permissions.php script, allowing you to remove the permissions of assets under a specified root node. This script takes the following parameters:

--system=<SYSTEM_ROOT>: the root directory of your Squiz Matrix system.
--rootnode=<ROOTNODES> : the asset IDs of the root nodes to be processed.
--includeuser=<INCLUDE_USERIDS> : an optional parameter allowing you to only remove permissions for a set of specified users.
--excludeuser=<EXCLUDE_USERIDS> : an optional parameter allowing you to specify a set of users to not remove permissions for.
--type=<PERMISSION_TYPE>  an optional parameter allowing you to specify the permission types to remove (1 for Read, 2 for Write, 3 for Admin).

An example usage of this script is outlined below. This example will remove any Write permissions on assets #100, #130, #205 and all their children; permissions will not be removed for user #65.

$ php remove_permissions.php --system=. --rootnode=100,130,205 --excludeuser=65 --type=2  

New Trigger Action: Urban Airship Push Notification [ Feature Request #6245 ]
-----------------------------------------------------

Urban Airship is a push messing and marketing solution providing management of push notifications to both IOS and Android mobile devices.

This feature introduces a new trigger action, allowing Squiz Matrix to integrate with Urban Airship, sending a push notification to a mobile device application.  

The Urban Airship Push Notification trigger action allows you to input the details of your Urban Airship API, as well as the push notification, itself. This includes Badge number, notification Sound and Alert message options, all of which support Squiz Matrix keyword replacements.

When a trigger is fired, this action will send the configured push notification to a mobile application, as specified within the settings of your Urban Airship configuration. 

This new trigger action can be set up in conjunction with any trigger event. As a result, push notifications can be utilised to be sent for a variety of purposes, for example, when an asset is updated, when workflow approval is required on an asset or when the status of an asset is changed.

As mentioned earlier, this feature was kindly contributed by Nic Hubbard (http://www.zedsaid.com).   

New Trigger Event: Tagging Update [ Feature Request #6253 ]
-----------------------------------------------------

Trigger events within Squiz Matrix define the actions that a trigger is listening for before it is fired. So, for example, you can configure your triggers to fire when an asset is created in the system or when the status of an asset is changed. Once an event fires a trigger, the configured conditions are checked and, if approved, the specified actions on the trigger will be performed. 

This feature introduces a new trigger event that will fire a trigger when a tagging change is made to an asset, for example, when a tag is added, deleted or updated. The Asset Cloned trigger event can be selected when configuring the Details screen of a trigger.

Call REST Resource Submission Action: Response Validation Rule [ Feature Request #6264 ]
-----------------------------------------------------

This feature adds a new Validation Rule section to the Call REST Resource form submission action. These settings allow you to enable validation on the REST call response, checking the HTTP response code or body against set validation rules.

If a response fails the validation process, the submission of the form will be stopped and a custom error message will be displayed to the user (also logged within Matrix).

Custom Form: Validation Rule Conditions [ Feature Request #6275 ]
-----------------------------------------------------

For each question on a Custom Form page, validation rules can be configured to outline the requirements of a question. These can be Simple validation rules, such as, if an answer to the question is required, or Complex rules, such as, file type restrictions on a File Upload question.

This feature allows you to add Conditions to the validation rules you have configured on your form questions. These conditions give you the ability of only enabling a validation rule if a certain condition is met. 

For example, a restaurant booking form requires patrons to select a banquet option from the Set Menu question if a booking is made for groups of 8 or more people (specified in the No. of Guests question). This can be done using this new condition feature by configuring a validation rule on the Set Menu question to require a response if the response of the No. of Guests question is greater than seven (8 or more).


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6210: NOTICE Links for Asset Attribute Link and Redirect URL Global Keywords.
Minor Enhancement #6217: New Script to Rename a Thesaurus Term. 
Minor Enhancement #6246: TRIM Saved Search: Access a File Using its Record Number. 
Minor Enhancement #6268: purge_trash.php Silent When Running From Cron. 
Minor Enhancement #6274: Matrix Export Assets to XML Tool: Root Asset ID Included in Export File Name. 
Minor Enhancement #6277: Improvements to the current_url() Function. 
Minor Enhancement #6280: Enhancement to Matrix Log File Rotation Process. 
Minor Enhancement #6290: Custom Form: Accessible CAPTCHA.

Core

Fixed Bug #6179: Ignore incompatible statuses on cascade status change.
Fixed Bug #6219: Instructions to change import directory are wrong.
Fixed Bug #6229: TRIM Saved Search downloading the record's file even if record has not been updated.
Fixed Bug #6248: Form submissions from public users not being properly logged when confirmation page used.
Fixed Bug #6249: Height's unit set for WYSIWYG in global preference not respected by WYSIWYG attribute.
Fixed Bug #6251: add_remove_url.php script can cause duplicate urls.
Fixed Bug #6252: replace_url.php script can add some unnecessary entries in the asset lookup table.
Fixed Bug #6256: Large pages with an embedded YouTube or movie may break Matrix stripping of sq_wysiwyg_* tags.
Fixed Bug #6258: Performance Manager HTML Invalid.
Fixed Bug #6259: Insert Link WYSIWYG plugin shows empty interface when logged in as LDAP Simple Edit User.
Fixed Bug #6260: Trigger Conditions and Actions lists should be in ABC order.
Fixed Bug #6266: Performance Mode glitch query time.
Fixed Bug #6267: System Tools should be in ABC order.
Fixed Bug #6269: Keyword modifiers do not work on %globals_X% keywords in email submission action.
Fixed Bug #6278: Problem with Keyword Modifiers ^json_encode.
Fixed Bug #6281: Possibility of asset getting into invalid workflow status.
Fixed Bug #6282: PDF put into Apply for Approval status shows warning.
Fixed Bug #6291: Unable to remove memcache cache if assetid/url indexes are corrupted.
Fixed Bug #6292: test_message can cause deadlocks.
Fixed Bug #6293: system_integrity_fix_char_encoding.php false warning on already encoded character.  

CMS

Fixed Bug #6242: Bug fix #5993 breaks upgraded form_email assets.

LDAP

Fixed Bug #6257: LDAP Attribute Setup should be performing case-insensitive matches for attribute names.

Import Tools

Fixed Bug #6250: Import script broken; connection cannot be closed.

Data

Fixed Bug #6244: Using MYSQL database on the DB Data Source Asset may break after upgrade to 4.14.0.

TRIM

Fixed Bug #6231: TRIM Saved Search not serving the latest file attached to the given record.

Web Services

Fixed Bug #6240: Make SOAP Call trigger action doesn't show ticked image when trigger locked.
Fixed Bug #6254: Undefined index error on the http_request attribute.
Fixed Bug #6271: Call REST Resource trigger action does not replace global keywords correctly.
Fixed Bug #6289: JS API: Batching using the setMetadataAllFields function doesn't work.



VERSION 4.14.1

Featured Changes
===================================

SOAP API: New Function to Retrieve Available Keywords for a Paint Layout [ Feature Request #6171 ]
-----------------------------------------------------

Squiz Matrix's Paint Layout asset allows you to configure conditional keywords, to display a variety of content based on a number of configurable conditions (e.g. asset status or user type). 

The SOAP API's getAssetAvailableKeywords() function (which is used to return the keywords available for use on a specified asset or asset type), however, was not able to return these conditional keywords that had been configured on an Paint Layout asset.

This feature introduces a new function on the Squiz Matrix SOAP API's Asset Service, to retrieve the keywords of a Paint Layout asset, including any configured conditional keywords.

The getPaintLayoutAvailableKeywords() function takes the following parameters:

- AssetID: the asset ID of the Paint Layout to return available keywords of.
- TypeCode: an optional parameter to specify a customised asset type format to return the available keywords for. 

The format of the getPaintLayoutAvailableKeywords() function is as follows

<ns1:GetPaintLayoutAvailableKeywords>
<AssetID>123</AssetID>
<TypeCode>page_standard</TypeCode>
</ns1:GetPaintLayoutAvailableKeywords>

Bulkmail Subscribe Page: Custom Verification Email Subject Header [ Feature Request #6180 ]
-----------------------------------------------------

Squiz Matrix's Bulkmail Subscribe Page asset allows your users to subscribe and unsubscribe to bulkmail emails.

As part of this subscription process, an optional verification email can be configured, requiring users to confirm when subscribing or unsubscribing from bulkmail. Previously, however, the subject header for this verification email was unable to be manually configured; by default, the subject of the email was: Please confirm your subscription / unsubscription request.

This feature adds a new Verify Email Subject to the Details screen of the Bulkmail Subscribe Page, allowing you to configure a custom subject line for verification emails.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #6175: Enhancement to User Subscriptions for Bulkmail Users.
Minor Enhancement #6181: Link Asset: Relation Attribute is Indexed and Searchable.
Minor Enhancement #6193: Asset Listing: Enhancement to the Exclude Asset/Root Settings.
Minor Enhancement #6194: Redis Cache Storage: Improved Error Handling and Persistent Connection.
Minor Enhancement #6196: Calendar Package: Improved Performance for Base Query Generation.
Minor Enhancement #6205: Workflow Approval on the Editing of Metadata.
Minor Enhancement #6206: Sort Metadata Schemas Alphabetically on Metadata Screen. 
Minor Enhancement #6207: Show in Asset Map Icon to Highlight Current Asset Only. 

Core

Fixed Bug #6164: pdftohtml integration can cause Matrix to hang.
Fixed Bug #6176: Image variety URL charcount is always detected as > 0 if image has at least 1 image variety.
Fixed Bug #6177: rollback_management script throwing PHP errors when deleting file versioning entries.
Fixed Bug #6182: Design customisation isn't found when created outside of Designs Folder.
Fixed Bug #6189: Access History design area throws PHP/Matrix warnings.
Fixed Bug #6192: Old up for review workflows cause fatal error.
Fixed Bug #6211: Accessing "./?a" URL with an non-existent lineage can cause fatal error.
Fixed Bug #6215: Matrix permits site URLs with trailing spaces under certain conditions.
Fixed Bug #6220: Deleting a File asset in Safe Edit will display HIPO errors.

LDAP

Fixed Bug #6184: Ldap_Bridge->getChildren() does not returns members defined by the group.

Import Tools

Fixed Bug #6218: Downloading export.tgz twice should be possible.

TRIM

Fixed Bug #6185: Invalid XML returned by TRIM service can cause Matrix fatal error.
Fixed Bug #6188: Issues when accessing TRIM service over https using Matrix TRIM saved search. 
Fixed Bug #6226: "Container Title" for a record empty in Trim Saved Search using Trim 7.3. 

Web Services

Fixed Bug #6216: EAccelerator breaks API Documentation.



VERSION 4.14.0

Featured Changes
===================================

New CSS Safe Keyword Modifier [ Feature Request #5886 ]
-----------------------------------------------------

This feature introduces a new css_safe keyword modifier to return a keyword string that is suitable for use as an HTML class or ID. This in turn can then be used as a CSS selector.

Example usage of this new keyword modifier is as follows:

EXAMPLE : %asset_name^css_safe%

EFFECT  : 'Welcome to Squiz Matrix!' > 'Welcome_to_Squiz_Matrix' 

New SOAP API System Service to Display the Matrix Version Number [ Feature Request #6055 ]
-----------------------------------------------------

A new SOAP API System Service has been added to manage the system functions of Squiz Matrix's SOAP Server. This asset can be accessed via the Web Services menu within the asset creation menu and is enabled on the Details screen of the SOAP Server, in the same manner as the existing SOAP API services.

The SOAP API System Service currently manages the new getMatrixVersion() function, that will return the Squiz Matrix version number of the current system.

This function takes no parameters; it's usage is as follows:

<SOAP-ENV:Body>
 <ns1:GetMatrixVersion />
</SOAP-ENV:Body>

When run, this function will display the version number of your system within the SOAP response, like so:

<ns1:GetMatrixVersionResponse>
 <MatrixVersion>4.14.1</MatrixVersion>
</ns1:GetMatrixVersionResponse>

SOAP API: New Function to Retrieve the Thesaurus Tags of an Asset [ Feature Request #6072 ]
-----------------------------------------------------

Assets within Squiz Matrix can be tagged with user-created thesaurus terms to classify content within common categories. These tags can then be used in conjunction with other assets within the system, for example, on a Related Asset Listing Page to display assets associated with one another.

This feature introduces a new function on the Squiz Matrix SOAP API Asset Service, to retrieve the thesaurus terms that have been tagged on an asset.

The getTags() function takes the following parameters:

   AssetID: the ID of the asset to retrieve the tagged terms of.
   ThesaurusIDs: this optional parameter allows you to filter the returned tagged terms to a specific Thesaurus asset(s) (defined by asset ID). 

The format of the getTags() function is as follows:

<ns1:GetTags>
   <AssetID>86</AssetID>
   <ThesaurusID>132</ThesaurusID>
</ns1:GetTags>

A example response for this function is outlined below. The tags returned will display their tag ID, name, weight and link ID, as well as the ID of the Thesaurus the tagged term is under.

<ns1:GetTagsResponse>
 <GetTagsResult>
   <TagID>132:4</TagID>
   <TagName>News</TagName>
   <ThesaurusID>132</ThesaurusID>
   <Weight>1</Weight>
   <LinkID>290</LinkID>
 </GetTagsResult>
 <GetTagsResult>
   <TagID>132:9</TagID>
   <TagName>Australia</TagName>
   <ThesaurusID>132</ThesaurusID>
   <Weight>1</Weight>
   <LinkID>312</LinkID>
 </GetTagsResult>
</ns1:GetTagsResponse> 

Calendar Event Search Page: New Upcoming Events Fuzzy Option [ Feature Request #6127 ]
-----------------------------------------------------

The Events Date Filter Configuration settings on a Calendar Event Search Page allow you to set the date query fields for filtering event search results.

Whilst configuring these settings, you can choose to include a drop-down or checkbox field of pre-defined date values for users to input the date filter (Fuzzy Dropdown and Fuzzy Checkbox). Values available using these options include Today, Next Week, Previous Month and This Year etc.

This minor enhancements adds a new fuzzy option available in these fields: Upcoming Events. This option allows you to define an Event Horizon that users can select to filter the event search results (by default, 180 days).  

This enhancement has been added to allow you to configure a Calendar Event Search Page that will allow users to conveniently search for any upcoming events.

REST Resource JavaScript: Pre-Process Global Keywords [ Feature Request #6157 ]
-----------------------------------------------------

The REST Resource JavaScript asset is used by Squiz Matrix to communicate with web services exposing themselves using Representational State Transfer (REST) methods, using JavaScript processing of the REST response.

This feature introduces a new Pre-Process Matrix Global Keywords option on the JavaScript Processing settings of the REST Resource JavaScript asset, allowing global keyword (%globals_XXX%) to be evaluated prior to running JavaScript. By default, this option is disabled.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5950: Current Instance Keywords Listed on Recurring Event Format.
Minor Enhancement #6001: JavaScript API: %results_id_*% Keyword Replaced on All Arguments.
Minor Enhancement #6012: Performance Enhancement to url_manager.inc. 
Minor Enhancement #6041: LDAP Connection Timeout Enhancement.
Minor Enhancement #6083: Workflow System Notifies Users Involved in Current Stream. 
Minor Enhancement #6121: TRIM Saved Search: Additional Support for TRIM 7.3. 
Minor Enhancement #6129: Matrix Asset ID URL Translation at the Global Level. 
Minor Enhancement #6138: Sanitise Global GET/POST Variable Keywords when Using Modifiers. 
Minor Enhancement #6139: TRIM Saved Search: Additional Support for TRIM 7.3. 
Minor Enhancement #6147: JavaScript API batchRequest Function: Result Keywords Not Replaced on Page Load. 
Minor Enhancement #6152: PostgreSQL Standard Observed for PDO::quote() Function. 
Minor Enhancement #6155: New Script to Detect Assets with an Inconsistent Workflow Status.
Minor Enhancement #6168: Listing Assets: Modifier Support on all Keyword Replacements.
Minor Enhancement #6170: Enhancements to the export_to_xml.php Script. 

Core

Fixed Bug #6012: Performance Enhancement to the url_manager Script. 
Fixed Bug #6120: Wrong keywords matching.
Fixed Bug #6122: Broken HTML in http_request.inc.
Fixed Bug #6128: Select fields in custom forms don't show the "selected" attribute for the default option value.
Fixed Bug #6131: Purging an incorrectly configured data source asset can throw warnings.
Fixed Bug #6135: Files get served under the incorrect/random URL for logged in user
Fixed Bug #6141: Incorrect user identified in emails and logs when locks forcibly acquired.  
Fixed Bug #6150: EES creates asset with blank web path.
Fixed Bug #6156: %context_switcher% keyword not working in SEI.
Fixed Bug #6160: webPathsInUse() $return_alternatives, doesn't.
Fixed Bug #6162: test_message.php fails pg_stat_activity query in Postgres 9.2.
Fixed Bug #6163: Script remove_internal_message.php and rollback_management.php can throwing php warnings.
Fixed Bug #6166: Changing a content type in bodycopy div can create invalid rollback table entries. 

CMS

Fixed Bug #6154: Cannot remove layout defined for 'arbitrary Paint Layout' on Nest Content Content Type.
Fixed Bug #6159: Form contents outputted more than once does not prints the form questions.

Search

Fixed Bug #6132: Unable to create Search Page asset with default metadata field value (keywords) referencing the asset.
Fixed Bug #6148: Matrix doesn't follow the minimum word length rule for WYSIWYG metadata fields.
Fixed Bug #6151: Matrix Search will delete indexed data for Online Quiz Submission asset when re-indexing.

Calendar

Fixed Bug #6153: Calendar JS date chooser popup window position problem in IE.

Import Tools

Fixed Bug #6144: Import from XML HIPO should be able to import assets with parse files.
Fixed Bug #6145: Importing design assets with nest content customisations produces DB error.



VERSION 4.14.0 RC1

Featured Changes
===================================

IPv6 Support for User IP Condition Restrictions [ Feature Request #5915 ]
-----------------------------------------------------

The User IP Condition restriction can be used to specify an IP range rule on a user account to determine its user groups. Previously, this condition only supported Internet Protocol Version 4 (IPv6) IP addresses.

This feature adds support for IPv6 IP addresses when setting the User IP Condition on a user account.

New Script to Regenerate the Asset File Contents [ Feature Request #5939 ]
-----------------------------------------------------

A new script has been added to Squiz Matrix to regenerate the asset file contents within the system. This includes metadata files, design files and bodycopy content files.

The regenerate_file_systems.php script is found in the system's Scripts directory and takes the following parameters:

   --system=<SYSTEM_ROOT> : the root directory of your Squiz Matrix system.
   --rootnode=<ROOT_NODE> : the root node you wish to regenerate the file contents from.
   --designs : specifies to only regenerate design files.
   --metadata : specifies to only regenerate metadata files.
   --bodycopies : specifies to only regenerate bodycopy content files.
   --all : specifies to regenerate all file content (metadata, design and bodycopy content files).

Usage of this script is as follows:

$ php scripts/regenerate_file_system.php --system=<SYSTEM_ROOT> --rootnode=100 --all

Retrieving Asset Data                   [DONE]
Processing Designs                      [DONE]
Processing Metadata                     [DONE]
Processing Bodycopies                   [DONE]  

New Trigger Action: Clear Session Var [ Feature Request #6082 ]
-----------------------------------------------------

Trigger actions allow you to specify tasks that will be performed when a fired trigger meets a specified set of conditions. Squiz Matrix boasts an extensive array of trigger actions that are available, from creating new assets to updating your twitter status.

This feature introduces a brand new trigger action to clear Squiz Matrix sandbox session variables. 

The Clear Session Vars trigger action can be configured on the Details screen of a trigger and allows you to clear sandbox session variables on the system, or to identify particular session variable(s) to clear, specified by either name or prefix.

This new trigger action compliments and can be used in conjunction with the existing Set Session Var trigger action, to store a value in a session-level array temporarily, before removing the variable. 

Additionally, this action can be used to clear session variables created by form submission actions, such as the Make SOAP Call action, addressing an issue previously reported within Matrix (#6058).  

Redis Cache Storage [ Feature Request #6100 ]
-----------------------------------------------------

This feature introduces new Redis cache storage for Squiz Matrix. Redis (http://redis.io/) is a data structure store similar to memcache, but supports additional data structure types/operations and is extremely efficient.

Redis outperforms memcache cache storage when large numbers of cache objects are created for individual assets (e.g. by viewing different URLs). This is due to a limitation with existing memcache cache storage that introduces performance hits in such situations.

There is no known disadvantage of using Redis cache storage when compared with memcache.  

TRIM Saved Search: Convert Result Fields from URI to Full Title [ Feature Request #6107 ]
-----------------------------------------------------

The TRIM Saved Search asset allows you to configure a set of TRIM search criteria in Squiz Matrix, storing and updating the results of the search on the system.

Previously, search results returned on the TRIM Saved Search would return result fields (such as Author, Assignee and Creator) as URIs (TRIM's internal ID). This is, however, not ideal as these URIs would not make sense when displayed on the frontend.

This feature will automatically convert result fields to to their full titles. The fields covered are as followed: recCreatorLoc, recOwnerLoc, recAuthorLoc, recClientLoc, recCurrentLoc, recHomeLoc, recOtherLoc, recPrimaryContactLoc, recRepresentLoc, recAssignee.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5922: Fix Character Encoding Script Enhancements.
Minor Enhancement #6073: Import From XML Script: New Param to Force the Creation of Dependant Assets.
Minor Enhancement #6078: New Option to Disable the Password Confirmation Field for Password Asset Attributes.
Minor Enhancement #6097: Remove Internal Message Script: New Param to Remove by Asset ID.
Minor Enhancement #6102: Multi-Page Custom Form Performance Enhancement.
Minor Enhancement #6103: WYSIWYG Insert Link Plug-in: Populate Global Keywords When Linking Searched Asset.
Minor Enhancement #6111: Option to Set Empty Filter Value to Return all the Datasource Asset Records.

Core

Fixed Bug #6054: Cannot attach thumbnail to Data Record asset.
Fixed Bug #6069: Safe edit file assets are generating invalid /__data URLs on live pages. 
Fixed Bug #6070: Custom Form XML Export does not work with nested sections.
Fixed Bug #6076: Could not locate asset (#123).
Fixed Bug #6093: Calendar Event Search Page returns no results when a date field is not present on front-end.
Fixed Bug #6094: Script system_integrity_fix_char_encoding.php not handling the serialised data correctly.
Fixed Bug #6095: Cache CSS File option not working correctly for CSS File Customisation.
Fixed Bug #6099: Non-existent linkid scheduled to deleted by Future Lineage cron job will deadlock the Cron Manager.
Fixed Bug #6104: Asset manager getChildren() function not returning the correct children for Root Folder asset.
Fixed Bug #6105: Asset Counter report asset does works with shadow asset type code if no root node is specified.
Fixed Bug #6110: File in safe edit failed to display local Matrix URL for logged in user in some case.
Fixed Bug #6112: IE8 WYSIWYG select list item and insert link could cause popup warning.
Fixed Bug #6113: Set Metadata Value trigger action fails when setting default value.
Fixed Bug #6116: Create Image functionality of the WYSIWYG fails in IE. 
Fixed Bug #6117: system_integrity_orphaned_assets.php script will now run system wide.
Fixed Bug #6119: maxwords keyword modifier removes commas.

CMS

Fixed Bug #6090: Can't download/export Custom Form submission over HTTPS using IE7 and IE8. 

LDAP

Fixed Bug #6089: Error when running ldap_change_dn.php script in the Oracle db. 

Import Tools

Fixed Bug #6043: CDATA not escaped in hipo_job_export_assets_to_xml.
Fixed Bug #6048: hipo_job_export_assets_to_xml code path should export design parse files.
Fixed Bug #6056: hipo_job_export_assets_to_xml shouldn't export shadow links.
Fixed Bug #6057: hipo_job_export_assets_to_xml breaks on non utf-8 characters.
Fixed Bug #6075: Import from XML Tool reports erroneous XML if the XML content doesn't have proper line breaks.

Data

Fixed Bug #6068: Using DSN string in Form Action Run DB Query doesn't work for Oracle.
Fixed Bug #6081: Updating the Data Source asset's result set dynamically can output incorrect data Recordset items.

TRIM

Fixed Bug #6108: TRIM / Sharepoint Saved Search asset syncronise button issue.
Fixed Bug #6109: TRIM Saved Search search term grouping logic issue. 

Web Services

Fixed Bug #6115: REST Response trigger condition does not include the required file defining the base class.



VERSION 4.12.0 RC1

Featured Changes
===================================

New Custom Change Password Design [ Feature Request #5788 ]
-----------------------------------------------------

When a user account is placed up for review within Squiz Matrix, users will be prompted to change their current Squiz Matrix password on a Change Password screen.

Previously, the design of this screen was not configurable. This feature adds new functionality, allowing you to set a custom Change Password design.

The System Defined Password Change Design options can be found on the Settings screen of an asset. These tools work in a similar manner to the System Defined Login Design, enabling you to override the default design of the Change Password screen for the asset, automatically cascaded to any children. 

When users log on to the system and require a password change, the Change Password screen will use the custom design, specified in the System Defined Password Change Design settings.

This feature has been added to complement the other custom log-in designs within Squiz Matrix.

New Trigger Action to Schedule a Bulkmail Job [ Feature Request #5853 ]
-----------------------------------------------------

Along with the aforementioned Bulkmail Job Scheduling feature, a new trigger action has also been added to Squiz Matrix to schedule a Job to be run when a trigger is fired.

The Schedule Bulkmail Job trigger action can be configured to override the default settings of a selected Bulkmail Job, allowing you to instead send the asset that fired the trigger (or an asset of your selection), as well as selecting the recipients of the job.  

You are also able to enable the Subscription Filter on the selected Bulkmail Job, specifying whether to use the Bulkmail Job's set subscription filters or to override these filters. This is a new feature to the Bulkmail Package which is outlined in more detail below.

This feature has been added to provide users with additional implementation options for their Bulkmail set ups. 

Bulkmail Job: New Scheduling Settings Screen [ Feature Request #5854 ]
-----------------------------------------------------

Squiz Matrix's Bulkmail Job asset defines the content and recipients of a bulkmail configuration. Previously, for a Bulkmail Job to be run, users would have to manually change the asset's status or use the schedule_bulkmail_job.php script.

This feature adds new settings to the Bulkmail Job asset, allowing you to enable and configure automatic scheduling of your jobs.

The Bulkmail Job Scheduling screen allows you to enable scheduling for the job and provide a start date. You can then specify the frequency of how often the job should be run (either hourly, daily, weekly, monthly, yearly or not at all).  

Once enabled, the Bulkmail Job will be queued to run at the specified start date and time, and then continue to run subsequently at the specified frequency.

This feature has been added to provide users with effortless scheduling of the jobs within their bulkmail configurations.

Bulkmail Job: New User Subscription Screen [ Feature Request #5856 ]
-----------------------------------------------------

We have one more new screen that has now been added to the Bulkmail Job asset, this time allowing you to configure user subscriptions for the jobs within your bulkmail configuration.

The new User Subscriptions screen allows you to enable user subscriptions for your Bulkmail Job. When subscriptions are enabled, categories can be created, comprised of Asset Metadata Field rules to match a user asset's metadata against a specified value. 

User Subscriptions utilise the use of a Search Page asset to query a selection of assets using the matched subscription metadata value. Assets returned on these searches will then be sent (individually) to the users within the corresponding subscription category.

For example, you could create a location subscription category, matching metadata values such as Sydney and Melbourne. The Search Page would search these queries, and return a selection of articles for these users, sending them content appropriate to their location.

Call REST Resource Completion Action on E-Commerce Checkout Page [ Feature Request #5865 ]
-----------------------------------------------------

The Custom Form Page's Call REST Resource submission action is used to communicate with a web service exposing itself using Representational State Transfer (REST) methods, upon submission of a form.

This functionality has been extended to the E-Commerce package's Checkout Page asset via a new Call REST Resource completion action that will call a REST resource server after the checkout process has successfully been completed on an e-commerce order.  

The Call REST Resource action can be configured on a new Checkout Completion Actions screen of a Checkout Page asset. This screen is similar to the Submission Actions screen of a Custom Form.

Like the form submission action, the Call REST Resource allows you to configure the HTTP request to the REST web server, passing details of the e-commerce order within the request body content (incl. the order summary, the delivery form responses and the individual item details).

The completion action also allows you to set custom parameters for Product asset types on a new Order Array keyword, as well as configure the Error Response Notification Email for non-2xx responses from the REST server.

REST Resource JavaScript: V8 JS Engine [ Feature Request #5869 ]
-----------------------------------------------------

Current the REST Resource JavaScript asset only allows you to use the SpiderMonkey JS engine to execute JS commands. This feature introduces the option of using the V8 engine, if the PECL V8js extension installed.

Additional SAML Options for User Linking and Creation [ Feature Request #5873 ]
-----------------------------------------------------

In this month's releases of Matrix, we unveiled federated access management single sign-on and identity verification through our new SAML Account Manager asset. This feature adds further options to this asset, allowing you to set the linking settings for users (automated in current release), as well as allow Matrix to automatically create linked local users during the authentication process.

The Allow Linking to Existing Users and Automatic Creation options are available on the Details screen of the SAML Account Manager. 

By default, linking to existing users is enabled. This means that is a user is logged in to Squiz Matrix and their account is SAML authenticated, the SAML Account Manager will prompt the user to link their accounts, if they have not yet been. This linking allows for federated access to the system, automatically signing the user into their account as part of the SAML authentication process.

The Automatic Creation option handles the creation of linked local users when a user is not logged into Matrix. By default, this is a manual process, with users being allowed to create a new user account during SAML authentication. Enabling this option will automate this creation, skipping this manual process.

This feature has been added to provide users with more options for configuring SAML federated access management on their systems.

OAuth Session: Redirect to Authorise, Store Access Token [ Feature Request #5874 ]
-----------------------------------------------------

Squiz Matrix's REST Resource OAuth assets allow you to define the parameters for OAuth authentication when communicating with an OAuth secure REST web service. This feature introduces additional parameters, allowing you to redirect users to an external authorisation page and providing the option of permanently store the access token.

The Redirect to Authorise and Store Access Token options are available on the Details screen of REST Resource OAuth assets. 

By default, neither of these options will be enabled.

Enabling the Redirect to Authorise option will redirect a user to the service provider's authorisation page to authorise the request token instead of simply nesting the authorisation form within Squiz Matrix.

The Store Access Token option allows you to permanently store the access token. By default, this token is stored in the session, meaning that when a user logs out, the token will be lost. Permanently storing this token will prevent users from having to reauthorise in each user session. Disabling this option will remove any permanently stored tokens.

These features have been added to bring Squiz Matrix OAuth more in line with established authentication standards. 

New Keyword to Print the ID of a Paint Layout on an Asset [ Feature Request #5878 ]
-----------------------------------------------------

A new keyword replacement has been added to Squiz Matrix to print the asset ID of the paint layout on an asset.

%asset_paint_layout_id% 

This keyword will print the asset ID of the Paint layout applicable for the asset on the current URL, whether asset-based, URL-based or user-defined.

This keyword can be used in conjunction with the as_asset keyword modifier which dynamically supplies an asset ID (in this case, of a Paint Layout) on a set asset_keyword. This will allow users to expose the properties and attributes of a Paint Layout within an asset's content.

%asset_paint_layout_id^as_asset:asset_name% 

The above keyword format, for example, would print the name of the asset's Paint Layout.

New Context Functions on JavaScript API [ Feature Request #5891 ]
-----------------------------------------------------

Five new functions have been added to the JavaScript API for retrieving and setting context information.

	- getAlternateContext() : retrieves the alternate context applicable to current situation where Squiz Matrix will go through each context and evaluate based on the conditions defined in them.
	- getCurrentContext() : retrieves the current context active on the system.
	- getAllContexts() : retrieves all contexts defined in the system.
	- setContext() : sets a context via the API.
	- restoreContext() : restores the context to what it was previously set to. Should be used in conjunction with setContext().

Performance Mode Enhancements [ Feature Request #5910 ]
-----------------------------------------------------

The following enhancements have been made to Squiz Matrix's Performance Mode:

	- Performance mode will now display the time spent on queries, together with the number of queries.
	- Fixed issue where some queries (those called with getXX() style functions) were being repeatedly counted.


Additional Changes and Bug Fixes
=================================== 

Minor Enhancements

Minor Enhancement #5728: Improved Error Handling for Invalid Paths on Installation Step Scripts.
Minor Enhancement #5730: Rollback Truncation on Automatic System Upgrade.
Minor Enhancement #5845: Asset Builder Selectable Create Location Enhancements.
Minor Enhancement #5852: Memcache Session Handler Support on Site Network Assets.
Minor Enhancement #5861: Improved Error Handling for Malformed PDF Uploads.
Minor Enhancement #5875: Update Twitter Status Action Upgraded to Support Twitter API 1.1.
Minor Enhancement #5881: New Report Mode on the system_integrity_fix_char_encoding.php Script.
Minor Enhancement #5888: Remote Content Asset URL Tunnelling Option Warning.
Minor Enhancement #5889: New JS API Function to Return Metadata Schema Info. 
Minor Enhancement #5907: Enhancements to the system_integrity_fix_char_encoding.php Script. 
Minor Enhancement #5913: Interface to Configure the Related Metadata Field's is_contextable Option. 

Core

Fixed Bug #5828: The reindexSearchIndex.php script consumes too much memory. 
Fixed Bug #5833: Can't download File Assets over HTTPS using IE7 and IE8.
Fixed Bug #5844: matrixsqlclient breaks terminal. 
Fixed Bug #5871: Matrix emailing the workflow initiator from previous workflow process when asset pushed to Live.
Fixed Bug #5876: Issue with Metadata values when Deja Vu enabled. 
Fixed Bug #5894: import_file.php script errors.
Fixed Bug #5895: Cancel Safe Edit status / clone asset via JS API with filter frontend user option turned on does unnecessarily escape HTML to entities.  
Fixed Bug #5896: SQ_CONF_REDIRECT_URL_WITH_TRAILING_SLASH redirects infinitely for a ROOT URL which is not listed main.inc.
Fixed Bug #5897: Getting count of internal messages does an unnecessary join.
Fixed Bug #5898: Viewing an inbox - improvements.
Fixed Bug #5904: Custom Form current_page_content keyword doesn't do JS frontend validation.

CMS

Fixed Bug #5901: Setting Form Submission asset LIVE can result in loss of all the answers.

Search

Fixed Bug #5864: Using special characters in Oracle Search generates unescaped characters in file names.

LDAP

Fixed Bug #5882: Unable to acquire locks on 'Inbox' of LDAP user with \, in CN.

Calendar

Fixed Bug #5866: Events search not sorting when sorting by the asset attribute value.
Fixed Bug #5893: Run Level not restored failing to save the attributes of calendar event modification.

Data

Fixed Bug #5902: RSS Data Source timeout error for some feeds.

Web Services

Fixed Bug #5877: SOAP Server asset sends proper HTTP authentication header.
Fixed Bug #5883: Oath and POST REST call problem.
Fixed Bug #5884: JS API calls to getAttributes on div content assets that contain keywords get evaluated.
Fixed Bug #5890: JS API throws "Unable to get value of the property '0': object is null or undefined".




VERSION 4.8.0 RC1

Featured Changes
===================================


Cache Manager: Additional Send Cacheable Header Settings [ Feature Request #5409 ]
-----------------------------------------------------

Previously, Squiz Matrix did not send cacheable headers for SSL encrypted requests.

This feature addresses this issue by adding new settings to the Cache Manager's Send Cacheable Header screen, allowing you to specify the protocol when cacheable headers will be sent (HTTP, HTTPS or both). Additional options allow you to configure the cache-control level for both HTTP and HTTPS protocols.

Asset Logs Screen: Internal Messages Performance Enhancement[ Feature Request #5414 ]
-----------------------------------------------------

Previously, loading on the Asset Logs screen could be potentially slow on systems containing large numbers of internal messages. This feature refines the process of retrieving the list of valid asset types and the saving of internal messages, to improve the performance of the Asset Logs screen.

Online Quiz Interactive Mode [ Feature Request #5456 ]
-----------------------------------------------------

A new Interactive Mode has been added to the Online Quiz asset. This mode transforms the regular listed quiz format into a one question per page format, with the option of allowing users to retry incorrectly answered questions.

Interactive Mode is enabled via a new field on the Details screen of the Online Quiz asset.

Enabling Interactive Mode will display the Question Pooling settings. These settings allow you to select the root node(s) to extract the multiple-choice questions from, as well as set the number of retries available to users for each question.

Interactive Mode utilises a new feedback page on completion of each question. Response feedback can be specified for each response on the Details screen of an Online Quiz Multiple-Choice Question.

When a user answers a question on the form, the Online Quiz will display whether or not the user selected the correct answer and present any feedback that has been configured. If the user has given an incorrect answer, they will able to retry the question, with another selected from the question pool and presented to them.

Listing item classes are allocated for each option on the feedback form, as well as span tags for the response feedback. These can be used to stylise (CSS etc.) the feedback information and listed options, for example, a tick or cross for the option the user has selected.

New keyword replacements have been added to format the layout of the Online Quiz in Interactive Mode:

	- %interactive_question_number%
	- %interactive_question_note%
	- %interactive_question_text%
	- %interactive_question_response_form%
	- %interactive_button% 

In addition to these changes, a new scoring system has been implemented for the Online Quiz. Scores will now be stored in the submission assets of the Online Quiz.

You are also able to specify the format of the %quiz_score% keyword replacement, used in the submission logs, and the Thank You and Page Contents bodycopies. This format is configured on a new Score Format field on the Details screen of the Online Quiz asset. 

User IP Forwarding on http_request Attributes [ Feature Request #5479 ]
-----------------------------------------------------

This feature introduces the additional option of User IP forwarding on the HTTP request of REST Resource assets (incl. the Call REST Resource Trigger and Form Submission actions).

An additional "Append Query String to the Request URL" option is also available, allowing you to append the query variables passed to the Squiz Matrix URL on the HTTP request.

Brand New: Decision Tree Asset [ Feature Request #5494 ]
-----------------------------------------------------

A new Decision Tree asset has been developed for Squiz Matrix, leading users through a dynamic series of questions and displaying a final result based on the responses given. By engaging your users through an interactive decision process, the Decision Tree asset allows you to provide information and content that caters specifically on an individual user basis.

The Decision Tree asset is essentially comprised of:

	- Questions: the questions your users will answer on the decision tree. Questions can be formatted as either select or numeric question types and are similar in configuration to existing questions in form assets.
	- Results: result bodycopies are created to display to users based on their answers. 
	- Answer Destinations: response-based destinations for questions on your Decision Tree. An answer destination can be either another question or a result bodycopy. This allows you to cater the questions and results displayed specifically based on the responses your users give.

Decision Tree assets can also implement a points-based system where point values are accumulated based on the responses given. Response bodycopies can then be allocated a points range and are dynamically displayed based on the accumulation of points once users reach a question that does not have an allocated answer destination (ie. the end of the Decision Tree).

A number of new keyword replacements are available when formatting the content of the Decision Tree asset. These include:

Page Contents Bodycopy:

	- %decision_tree_contents%
	- %reset_button%

Decision Tree Question Bodycopy:

	- %question_title%
	- %question_field%
	- %question_note%
	- %accumulated_points%
	- %question_button% (numeric only)

Result Bodycopy:
	
	- %accumulated_points%

Additionally, question and result bodycopies on the Decision Tree are wrapped with division tags and classes for easy design implementation and CSS styling.

The introduction of this new Decision Tree asset aims to provide Matrix users with an alternative to complex graphs and diagrams which can be confusing to site users. The interactive decision process allows you to present information tailored specific to users in a simple and accessible manner.

2-Legged OAuth Authentication Available on REST Resource Assets [ Feature Request #5497 ]
-----------------------------------------------------

This feature introduces 2-legged OAuth authentication on the REST Resource assets, in addition to the existing 3-legged OAuth.

2-legged OAuth, allows users to simplify the authentication procedure by eliminating the user authorisation process of 3-legged OAuth, establishing a direct client-server scenario.

This new authentication method is available through a new "REST Resource OAuth 2 Legged" asset. The OAuth parameters available on this asset include the Consumer Key, Secret and Signature Method (HMAC-SHA1 or PLAINTEXT).

Update Link Trigger Action [ Feature Request #5511 ]
-----------------------------------------------------

Trigger actions allow you to specify tasks that will be performed when a fired trigger meets a specified set of conditions. Squiz Matrix boasts an extensive array of trigger actions that are available, from creating new assets to updating your status on twitter.

This feature introduces a brand new trigger action to update the type and value of a specified link. 

The Update Link trigger action allows you to update a single link. This link can be specified by link ID or, alternatively, you can identify attributes to match a link on the firing asset, including the link type and value, the side of the link to look on (parent or child) and the asset type of the linked asset.

This trigger action has been added to strengthen the functionality of the Squiz Matrix trigger system and expand on the trigger set-ups available to users.

Recurring Calendar Event Frequency Threshold Global Preference [ Feature Request #5515 ]
-----------------------------------------------------

A new Global Preference has been added to limit the frequency that Recurring Calendar Events appear on Upcoming Events List and Event Search Page assets.

This is configured by an Event Frequency Threshold option, that allows you to set a minimum threshold (in days) for Recurring Calendar Events. If the frequency of the Calendar Event falls within this threshold, the event will only appear once on the listing.

WYSIWYG Insert Link Tool: Direct Links to Asset External Target URLs [ Feature Request #5517 ]
-----------------------------------------------------

The WYSIWYG's Insert Link tool allows you to insert a hyperlink to an external site or an internal asset. Previously, however, this tool, when creating links to Link and Redirect Page assets, would create a link directly to that asset (e.g. "./?a=123").

This features introduces new functionality that allows you to link directly to the target URLs of Link and Redirect Page assets.

A new Asset Type field has been added to the Insert Link tool. This field allows you to specify whether the link is to a Link or Redirect Page asset or, if not, any other asset.

When a user selects ether the Link Asset or Redirect Page Asset options, only assets of those types will be able to be selected in the Select Asset field. Once an asset is selected, and a global keyword replacement will be automatically printed in the Link field, linking directly to the target URL of the asset, as follows: 

	- %globals_asset_attribute_link_url:123%
	- %globals_asset_attribute_redirect_url:123%  

This feature has been added to aid editors and simply the process of linking to external urls on Matrix assets.

Load Balancing "Read" Database Connection Support [ Feature Request #5541 ]
-----------------------------------------------------

This feature introduces load balancing when distributing connections to multiple database servers, enabling support of multiple 'read' databases.

Databases are configured in the system's db.inc file and can be specified weight and timeout values to des gnat when/how the system will make a connection to these servers. The use of multiple 'read' databases is expected to significantly improve performance on complex systems that experience issues with a single connection setup.

Please note that modification of the db.inc file should only be performed by a system administrator.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5401: 12 Hour Time Option on Custom Form's Date/Time Question Type.
Minor Enhancement #5408: Asset Content Keywords on Listed Bodycopy DIVs.
Minor Enhancement #5419: Clear Squid Cache Tool Won't Run When Not Correctly Configured.
Minor Enhancement #5434: Connection Status and Error Information on a DB Data Source.
Minor Enhancement #5483: Logs Screen: Select Multiple Log Types to View. 
Minor Enhancement #5488: Specify Triggers to Execute on the Trigger Manager's Batching Screen.
Minor Enhancement #5498: Remap Manager: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5503: Metadata Select Field: Option to Ignore Headers in Imported CSV Files.
Minor Enhancement #5504: Bulkmail Import User Tool: Option to Ignore Headers in Imported CSV.
Minor Enhancement #5514: Purge Trash Performance Enhancement.


Core

Fixed Bug #5051: WYSIWYG converts HTML/XML entities into characters.
Fixed Bug #5418: Combine curl/http_client requests into one library/function.
Fixed Bug #5461: Re-import content from data/files improvements.
Fixed Bug #5485: IE8 WYSIWYG quotation marks missing from attributes.
Fixed Bug #5486: Trigger Condition to check asset treeID fails with fatal error.
Fixed Bug #5499: Links Report CSV Export File Broken.
Fixed Bug #5501: Cannot save selected asset in Asset Finder in File Upload question; Link Manager.
Fixed Bug #5505: Resize of Image Insert window prompts asset tree pane resize to full window width.
Fixed Bug #5507: CSS Design File asset ignores permission.
Fixed Bug #5508: System design assets don't regenerate Design files.
Fixed Bug #5513: Javascript date picker in JS_Calendar class not working in Firefox.
Fixed Bug #5520: Paint Layout conditional keywords don't work as expected with Condition Keyword Regexp.
Fixed Bug #5530: Undefined index on Workflow screen.

CMS

Fixed Bug #5509: Account Manager User asset web path conflict.
Fixed Bug #5518: CAPTCHA settings conflict.

Calendar

Fixed Bug #5459: Upcoming Events list displays multiple results for Single Calendar Events that run for more than one day.

Web Services

Fixed Bug #5522: GetAsset method doesn't return valid XML on all Assets.
Fixed Bug #5536: SOAP API's GetMetadataFieldValues Function, if empty field names are passed, doesn't return all values.

LDAP

Fixed Bug #5519: LDAP User sorting under LDAP Groups not working.
Fixed Bug #5524: LDAP attributes missing on User Details screen.


VERSION 4.6.0 RC1

Featured Changes
===================================


Remove Trailing Slash Off Requested URLs and Redirect [ Feature Request #5138 ]
-----------------------------------------------------

Within Matrix, a URL with or without a trailing slash will render the same content. As the Cache Manager treats every URL uniquely, however, Matrix would previously end up caching both of these URLs, resulting in two separate cache entries for the same content.

This feature strips the trailing slash off such front-end requested URLs and redirect them, resulting in just one cache entry for the URL content.

Please note that this feature does not apply to root URLs due to the possibility of apache being configured to append the trailing slash. 

Global Preference to Restrict Assets Created Under Specified Sites as Type 2 Linked [ Feature Request #5161 ]
-----------------------------------------------------

The new 'Child Creation Type 2 Link Restriction' global preference allows users to specify site assets to restrict newly created children to TYPE 2 links only. This means that any newly created assets under these sites (at any depth) will only be able to be created as TYPE 2 linked assets.

The link type of these assets can still be changed after asset creation via the asset's Linking screen.


New Script to Evaluate and Fix Files in the Public Data Directory [ Feature Request #5171 ]
-----------------------------------------------------

Matrix's public data directory houses File assets on the Matrix system that are publicly accessible (live with public read access). However, in some cases this directory may be missing files or contain old or private files due to file system permission problems and other issues.

This feature introduces the system_integrity_fix_public_files.php script. When run, this script will update any out-of-date files on the public data directory, create any files that are missing from the directory and remove any files that are private and should not be in the directory.

Usage of this script is as follows:

$ php system_integrity_fix_public_files.php SYSTEM_ROOT ROOT_ID 

System Integrity Clean Invalid Links Script [ Feature Request #5175 ]
-----------------------------------------------------

Squiz Matrix's system_integrity_orphaned_assets.php script finds and links orphaned assets underneath a specified asset ID. It also takes care of invalid links, where the major ID in a link is a missing asset; it does not, however, cater for when the child minor ID is missing while the major ID still exists.

This feature introduces the system_integrity_invalid_links.php script. This script will remove significant links where one or both sides of a link does not exist. This script will also report on the number of orphaned assets in the system and may recommend running the system_integrity_orphaned_assets.php script, upon its completion.

New Keyword Modifier to Apply XSLT to XML Content [ Feature Request #5183 ]
-----------------------------------------------------

Keyword modifiers allow you to modify keyword replacements to further configure their returned values. This feature adds a new keyword modifier to apply XSLT (Extensible Stylesheet Language Transformations) to XML content returned on the keyword.

The format for this keyword modifier is as follows.

%keyword^xslt:<assetid>%
 
%asset_contents_raw^xslt:343% 

This modifier will take the XSLT of a file asset (specified by asset ID), apply it to XML returned on the asset and output the result.

This feature has been added to allow users to transform the XML of assets, providing greater control over the content of their sites.

New System Forking Scripts [ Feature Request #5294 ]
-----------------------------------------------------

This feature adds three forking scripts, aimed to increase the performance of these scripts and prevent memory leakage, especially on larger systems where memory usage is otherwise too high and/or performance of single-threaded scripts is too slow.

The scripts added are:

system_apply_permissions.php : takes a permission string in a specific format that allows you to run multiple permission operations on the specified asset and their children. This script forks and runs in batches to curb memory usage and also runs multiple threads in parallel to speed up the overall operation.

system_apply_metadata_schema.php : applies a metadata schema to the specified assets and their children (and generates the metadata for that asset). Runs in batches and multiple threads in parallel.

system_update_lookups.php : updates lookups for all assets under the specified root node. Forks and runs in batches to keep memory usage down.


%asset_contents_paint_X% on Paint Layout Bodycopy [ Feature Request #5323 ]
-----------------------------------------------------

The %asset_contents_paint_X% keyword replacement is used on an Asset Listing Page to print the content of an asset with a specified Paint Layout applied. For example, the keyword %asset_contents_paint_1234% would apply the layout of asset #1234 to the asset content.

This feature enables the use of this keyword replacement for use within a Paint Layout bodycopy. This can be useful, for example, when using Conditional Keywords, to print the asset content with other Paint Layouts applied, based on the conditions specified.

This feature has been added to aid in the implementation of Paint Layouts, providing users with more flexibility and control over their content. 

Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5197: Enhanced Performance on Asset Listing Pagination.
Minor Enhancement #5206: Backup Script to Move Database Dump into the data/ Directory.
Minor Enhancement #5207: Asset Manager: getLinkLineages Query Performance Improvements.
Minor Enhancement #5255: Performance Enhancement: Cascading Permissions on Permissions Screen.
Minor Enhancement #5270: Performance Enhancement: Global Search and Replace Reindex Altered Assets Only.
Minor Enhancement #5304: system_integrity_recover_file_versions.php Now Works for Image Varieties.
Minor Enhancement #5308: Metadata Field's Friendly Name Attribute Available as Keyword Replacement.
Minor Enhancement #5310: Search Button on the Quick Search Tool.
Minor Enhancement #5312: Custom Form Date field link issue.
Minor Enhancement #5313: Performance Improvement to createAssetLink() Function.
Minor Enhancement #5316: Remap Manager: Never Delete Mass Select / Deselect.
Minor Enhancement #5321: Alternative Proxy Config Allows Matches to Exclude Going Through Proxy
Minor Enhancement #5325: http_request Obeys Alternative Proxy Settings.

Core

Fixed Bug #5143: Committing from "archived/approved to go live" causes attributes to be cleared.
Fixed Bug #5299: Cron job added are of time stamp in past.
Fixed Bug #5300: Keyword modifiers not working properly on site map.
Fixed Bug #5301: Metadata date field not disabled when "Use default" selected.
Fixed Bug #5303: Trigger action set standard date, updates not search re-indexed.
Fixed Bug #5306: Asset map complains about the empty XML on PHP 5.3.
Fixed Bug #5307: Trigger condition "Status changes to" throws PHP notice.
Fixed Bug #5309: Manual asset id input processing and trimming.
Fixed Bug #5311: Show Diff preview incomplete highlights.
Fixed Bug #5314: Short form shadow asset links.
Fixed Bug #5315: Design CSS assets doesn't regenerate parse file for itself or children customisations. CSS changes can't be seen in front end.
Fixed Bug #5326: Trying to add an Alternative Proxy spits out PHP warnings.
Fixed Bug #5334: Workflow escalation custom message are have wrong subject.
Fixed Bug #5341: Filter Front End User Input - set to 'Filter input' breaking front end layout after parse file commit.
Fixed Bug #5342: PHP 5.3 E_DEPRECATED warning in installation scripts.
Fixed Bug #5148: br tag created in the WYSIWYG as soon as it's created.
Fixed Bug #5327: Linking to image varieties requires a dollar $ sign to work.

Search

Fixed Bug #5319: Search Manager Asset Tree and Global Weights screen error. 
Fixed Bug #5324: Metadata Weightings in Search Manager Asset Tree Weights screen does not work. 

LDAP

Fixed Bug #5305: LDAP authentication ignores bridge asset-map position.
Fixed Bug #5347: LDAP Bridge not expanding for some User/User Groups LDAP entries

Web Services

Fixed Bug #5140: JS API importAssetsFromXML() only imports the first Asset. 
Fixed Bug #5318: JS API causing syntax error if the ajax response is "undefined" or "null". 
Fixed Bug #5328: JS API setAttribute will show success even on error. 



VERSION 4.4.0 RC1

Featured Changes
===================================


Logout Due to IP Change Logged in System Logs [ Feature Request #4604 ]
-----------------------------------------------------

Previously, when a user was logged out of Squiz Matrix because their IP changed and SQ_CONF_ALLOW_IP_CHANGE was set to true, neither an error or a system.security.* message would be sent. This meant that the only way to figure out why users were intermittently losing their session was to have prior knowledge of this setting.

This feature had been added so that Matrix will log logouts due to IP changing in the system logs. For example:

[2011-05-23 15:11:23][12:Root User][1024:mysource notice][ ] [system.security.logout.ip_change - remote_addr:192.168.1.1;sessionid:;] (User Automatically Logged Out) - User "Root User" was logged out since their IP address changed from 192.168.2.1 to 192.168.1.1.

Enhancements to the import_files_from_bridge.php Script [ Feature Request #5033 ]
-----------------------------------------------------

Squiz Matrix's import_files_from_bridge.php script imports files exposed through a File Bridge asset into Matrix. Previously, this script would import these files as File type assets; however, files will now be imported as corresponding Matrix file assets, when available. For example, an image will now be imported as an Image type asset. 

This feature also introduces the option of importing folders containing an index.html file as a Standard Page asset with the content of the index file. This option can be enabled by setting a parameter on the script.

The new usage of the import_files_from_bridge.php script is as follows:

php import_files_from_bridge.php <MATRIX_ROOT> <BRIDGE_ROOT_NODE_ASSETID> <PARENT_ASSETID> <RECURSIVE> <HANDLE_INDEX_FILE>
 
php import_files_from_bridge.php path/to/matrix 100 150 y y

Make SOAP Call Step Action For Multi-Page Forms [ Feature Request #5089 ]
-----------------------------------------------------

Currently, Squiz Matrix's Custom Form asset allows you to make a SOAP call on submission. This new feature extends the functionality of submission actions to the individual steps (or pages) of a multi-page Custom Form, allowing your form to make a SOAP call on each page submission.

Step actions can be configured on the new Step Actions screen for form sections.

The set up of the Make SOAP Call step action is similar to the Make SOAP Call submission action, allowing you to specify the connection to the SOAP server and specify the request message.

On the front end of the form, when a user clicks the Next Page button, Squiz Matrix will make the SOAP call, as configured on the Step Actions screen for that step.

The Make SOAP Call step action also utilises the new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

SharePoint CMIS Bridge [ Feature Request #5090 ]
-----------------------------------------------------

This new feature introduces the CMIS Bridge asset, a connection bridge for retrieving files from a CMIS enabled SharePoint repository (currently supports Microsoft SharePoint 2010).

This asset retrieves SharePoint documents in a similar manner to the SharePoint Saved Search; however, files imported over the CMIS Bridge will be imported as fully functional system assets within Squiz Matrix (such as Images, Text Files etc.). These assets can be edited, linked and moved around the system just like any other asset, allowing you greater control over your SharePoint repositories within Matrix. 

Files are stored under the CMIS Bridge asset in the asset map when initially synchronised with the connected CMIS enabled SharePoint repository. Further synchronisation will update these files, trashing any old files, modifying files that have been altered and creating new assets for new files on the repository.

Synchronisation is also controlled via a new Sync CMIS Bridges Cron Job. This cron job is set to run daily - its run time and frequency can be configured on its Details screen.

CMIS properties (e.g. Author, Objectid, Modified, Created) can be mapped to the metadata fields of a schema applied to the CMIS Bridge. Additional custom fields created for the document library will dynamically be made available for metadata mapping.

The addition of this asset enhances the SharePoint package within Squiz Matrix, allowing you to manage your SharePoint documents within Matrix with more control than ever before.

Search Page: Specify Data Sources on Exclude Fields [ Feature Request #5094 ]
-----------------------------------------------------

Previously, Matrix's Search Page only allowed you to configure data sources for search fields. The data sources allowed you to specify which fields on an asset to search. This feature extends this functionality to exclude fields, allowing you to specify which fields to exclude on.

Like a search field, exclude fields allow the following data source types:

Include All: searches all standard fields, attribute fields and metadata fields of assets.
Standard Asset Field: searches a specified standard asset field (e.g. the name of a page or its asset ID).
Asset Attribute: searches a specified attribute field (e.g. the title of a file of a MS Word Document asset).
Asset Metadata Field: searches a specified metadata field.

You can select multiple data sources to search for each exclude field that you add, specifying the word logic to use for your data sources (all words or any word).

Please note that existing exclude fields will default to the Include All data source type, returning the same results as they would previously had.

On the Search Page, the exclude field will only search the fields specified in its data sources. For example, say you configure the exclude field to search the Keywords metadata field of assets - if a user searches for the query News in the exclude field, the Search Page will exclude assets contain the query News in their Keywords metadata from the search results.

This enhancement to the Search Page's exclude fields allows you to tweak your Search Page, allowing your users to return more accurate results, specific to their searching queries.

Specifiying the Cron Deadlock Email Notification Receivers [ Feature Request #5103 ]
-----------------------------------------------------

Squiz Matrix's Cron Manager handles the cron process within a system, managing and running the cron jobs that have been scheduled. Occasionally, a cron job may stall, causing the Cron Manager to deadlock. When this occurs, Matrix will send out email notifications, informing users of these errors.

Previously, Matrix would send these deadlock email notifications to all users under the System Administrators Folder, as well as the email addresses configured in the system's main.inc file. These automated email notifications would be resent to these users each subsequent run of the Cron Manager, until the issue was resolved. This could cause large numbers of emails sent to many users, potentially causing inconvenience and even spam filtering issues with users' mail clients.

This feature adds a new option to the Cron Manager, allowing you to specify the users that will receive cron deadlock emails. This option is configured via a new Emailing Options section on the Options screen of the Cron Manager.

The Cron Deadlock Email Receivers field allows you to select users, user groups and roles to specify which users should receive email notifications from the Cron Manager. By default, the system's Root User and the email addresses configured in the system's main.inc file will automatically also receive these emails.

By allowing you to specify the users to receive cron deadlock emails, this feature allows you to more efficiently identify and manage any potential issues with the Cron Manager in your system.

A-Z Listing: Defining the Layout of Individual Letters on the Navigation List [ Feature Request #5124 ]
-----------------------------------------------------

On a multiple page A-Z asset listing, the navigation character list displays links to the different alphabetised pages on the listing. This feature adds the ability to format the individual letters on this list.

This feature utilises the asset listing's existing Page Link and Current Link formats, which were not previously used on an A-Z asset listing.

On an A-Z listing, the Page Link Format will now define the layout of each individual letter on the linked character list, while the Current Page Format will define the layout of letters that contain no results.

These formats use the existing %page_link% and %page_number% keyword replacements. For example, you could format the letters on the list so that letters with results will be in bold, while letters with no results will be struck out.

The feature gives users greater control over the layout of their A-Z listings, in line with the options available on a regular asset listing.

Make SOAP Call on Submit Submission Action: Array Data in SOAP Response [ Feature Request #5127 ]
-----------------------------------------------------

Previously, the Custom Form's Make SOAP Call on Submit form submission action could not handle array data in the SOAP response. This feature adds support for array data in the SOAP response, populating array data into global keywords using index numbers.

For example:

%globals_session_[FOMR_ASSETID]_array_field0_value%, %globals_session_[FOMR_ASSETID]_array_field2_value%, %globals_session_[FOMR_ASSETID]_array_field3_value%

This feature also adds a TEST SOAP option to printout the sample SOAP request and response in the backend, for testing purposes.

Make SOAP Call on Submit Submission Action: Check SOAP Response [ Feature Request #5128 ]
-----------------------------------------------------

This features introduces data validation on the SOAP request of the Make SOAP Call on Submit form submission action of a Custom Form. If incorrect data is found in the request, Matrix will respond with a suggestion of specific error message, while if no incorrect data is found, will process the request, as normal.  

This feature is implemented through a new Check Response function. This function will check specified fields on the SOAP response, printing an error message if a value is returned (non-empty). Field keywords are also available for use, allowing you to print any error messages returned on the SOAP response.

Returned errors are displayed to a user via the %form_errors% keyword replacement and the user will not progress to the next page of the form. If no errors are retrieved, the user will be able to continue their form submission. 

JSON Data Source
-----------------------------------------------------

This new JSON Data Source asset is an alternative to the existing XML Data Source, facilitating server-side data exchange with web applications.

Clean Old Shadow Links Script
-----------------------------------------------------

A new script has been added to the Matrix database to clean links to shadow assets that are no longer valid. This is usually because the assets have since been removed from the data source, e.g. An LDAP backend user is linked under the System Administrators folder but is later removed from the LDAP Directory.

Additional reasons a shadow link may no longer be valid is if the connection between Matrix and the data source goes down or if the configuration of the connection bridge is altered for testing purposes. Because of these reasons, when the clean_old_shadow_links.php script is first run, it will only return a list of shadow links for review. You can then decided whether or not to delete the shadow links in the system.


Additional Changes and Bug Fixes
=================================== 


Minor Enhancements

Minor Enhancement #5041: Enhancement: Matrix clear expired cache query sometime is too large for oracle
Minor Enhancement #5044: Performance Enhancement: When Send Cacheable header, and Matrix responds 304 Not Modified, there is a useless call to printFrontEnd() 
Minor Enhancement #5045: Add a favicon to the Admin interface.
Minor Enhancement #5078: Error message on eSec Payment Gateway when Matrix is unable to connect to the service.
Minor Enhancement #5079: Support vertical resizing for the asset map.  
Minor Enhancement #5082: eSec Payment Gateway respects the proxy settings in Matrix's system configuration.
Minor Enhancement #5087: Add logging for pdftohtml failures.
Minor Enhancement #5096: Improved performance when dealing with large sq_internal_messages table.
Minor Enhancement #5109: Video File Asset: Add webm format.
Minor Enhancement #5116: Clear cache cron job enhancement (default storage).
Minor Enhancement #5122: Issue with PHP function mime_type_content().
Minor Enhancement #5123: Metadata Manager default value functions performance enhancement.

Core

Fixed Bug #5050: LDAP Users not getting correct permissions if the user is under a subgroup.
Fixed Bug #5055: Nested content DIVs don't save properly across contexts.
Fixed Bug #5061: Fatal error when viewing the Details screen of a form submission when a section of the form has been deleted.
Fixed Bug #5064: HIPO pop-up windows lose focus in Internet Explorer.
Fixed Bug #5069: Hierarchy metadata field default value displays incorrectly.
Fixed Bug #5072: Trashed file assets still accessible via public data URL.
Fixed Bug #5080: condition user agent can not use regular expression operator '|'.
Fixed Bug #5083: Metadata Fields Inaccessible.
Fixed Bug #5084: Changed file name in Safe Edit causes multiple issues.
Fixed Bug #5085: IE 8 and IE 9 wont let user commit changes on WYSIWYG screen.
Fixed Bug #5086: Error when editing image varieties after cancelling Safe Edit.
Fixed Bug #5092: Asset Builder's insert link via WYSIWYG tool removes the dot (.) before  /?a= .
Fixed Bug #5093: Customised classes not appearing in EES WYSIWYG.
Fixed Bug #5097: Shadow links (shadow assets linked under a real asset) always appear red-crossed in Asset Map for non-admin users.
Fixed Bug #5099: [cron_job] Metadata triggers causing Cron deadlock.
Fixed Bug #5104: Triggering asset intermittently getting lost when using the send email trigger action.
Fixed Bug #5106: Contains keyword modifier fails on string with a slash (/).
Fixed Bug #5108: Selectable create location link type bug with account manager page.
Fixed Bug #5114: PHP 5.3 remote content page complaining "Assigning the return value of new by reference is deprecated".
Fixed Bug #5117: Dependants only will not check in Set permission trigger action.
Fixed Bug #5118: Role screen doesn't not validates role and user asset IDs.
Fixed Bug #5119: Asset listing grouping by parent results in mysource warnings when the parent asset is a user asset.
Fixed Bug #5120: System config screen, Enable HTTP Authentication option has cosmetic problem when lock is acquired.

CMS

Fixed Bug #5098: [cron_job] manage_pending_accounts causing Cron deadlock.
Fixed Bug #5102: Matrix will throw warnings is the nested asset is deleted.
Fixed Bug #5125: Forms answers getting unnecessarily encoded in Submission Logs screen. 

Search

Fixed Bug #5105: PHP Notices on Search Fields screen (Undefined Asset Type).

Web Services

Fixed Bug #4934: Committing from "approved to go live" causes attributes on REST assets to be cleared.




VERSION 4.2.0 RC1

Featured Changes
===================================


Version numbers in __data URLs [ Feature Request #4808 ]
-----------------------------------------------------

It's difficult to manage cache expiration of statically served content, since this content is served blind by apache.

That is, you can edit a file, or CSS asset for example, but until the browser forces the request of a new version (further compounded by reverse proxies), the old version will continue to be served.

A common pattern for dealing with this is to add version numbers to the URL for the static file. Often, this is simply added as a query string for simplicity.

The effect being, when the file is updated and you bust the cache on the page, the URL for the file is different (since it's versioned), and so the browser gets the fresh version of the asset.

This can be a huge boost in caching strategies, allowing people to be more aggressive with their cache policy and empowering them to bust the 'perceived' cache on static files more easily.

TRIM Feature Request for Cron Job [ Feature Request #4875 ]
-----------------------------------------------------

Added ability to modify the (when) attribute of the saved search cron job through the details interface.

Also added a custom field in saved search to allow the result set to contain a text version of a records container called (Container Title)

	Remap Manager: Never Delete Enhancements [ Feature Request #4890 ]
	-----------------------------------------------------

	The Remap Manager's Never Delete option allows you to lock specific remaps from being deleted. This new feature improves this existing functionality by adding a variety of enhancements.

	A new option has been added to the Remap Manager to purge all remaps in the system except those marked as Never Delete. This option is enabled through a new field on the Details screen of the Remap Manager.

	Setting this field to Yes and clicking Commit will purge all remaps in the system that are not marked as Never Delete.

	The Web Paths screen of an asset would previously list its remaps but would provide no indication of whether the remap was marked as Never Delete or not. A new column has now been added for remaps on the Web Paths screen to display whether the remap is marked as Never Delete.

	Previously, delete fields were available to all remaps listed in the Remap Manager or on the Web Paths screens of assets. These fields were ineffective when used on remaps marked as Never Delete, however they were still accessible. These delete fields will now only be enabled for use on remaps not marked as Never Delete. The delete field will be disabled on remaps marked as Never Delete, as shown in the figure above.

	The Remap Manager's Never Delete Added Remaps? field will now be disabled by default, meaning that users must manually enable this option. This field was previously enabled by default; Existing installations using the previous default will retain their settings when being updating.

	Slight performance improvement in rebuilding cache [ Feature Request #4925 ]
	-----------------------------------------------------

	A slight performance improvement can be achieved by testing if the asset has no urls first up and finishing, since a url is needed to be indexed by funnelback.

	Improved permissions in Squiz Search [ Feature Request #4926 ]
	-----------------------------------------------------

	Improved permissions in Squiz Search will be handled by adding the systemid to all but the public key when retrieving the sitemap.


	Additional Changes and Bug Fixes
	=================================== 

	Minor Enhancements
	Minor Enhancement #4804: HTTP Request Header Acknowledges System Proxy Settings.
	Minor Enhancement #4869: Exporting Asset Attributes with CDATA Values.
	Minor Enhancement #4891: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4894: Asset::readAccess Makes Unnecessary Calls to the Workflow Manager.
	Minor Enhancement #4895: Don't Add Remap Option on the Add Web Path Trigger Action.
	Minor Enhancement #4912: Improved Performance of the Workflow Screen.
	Minor Enhancement #4913: Asset Manager: getAttributeValuesByName Enhancements.
	Minor Enhancement #4916: System Asset Links Locked by Default.
	Minor Enhancement #4923: Enhancement: When Painting 404 not found Page and Sending Cacheable Header is Enabled, Expiry header is Not Set.

	Core
	Fixed Bug #4856: Replace Text 'selected text only' not working in IE7+8.
	Fixed Bug #4881: Date/Time form output.
	Fixed Bug #4885: Daily cron jobs run twice.
	Fixed Bug #4886: "Update lookups" HIPO Job in File::saveAttributes() creating issue.
	Fixed Bug #4889: Incorrect default when attribute on Sync Product cron job.
	Fixed Bug #4896: Trigger action "Set Metadata Value" fails when using parameter map.
	Fixed Bug #4903: Online Quiz List Format field description lists unavailable formats.
	Fixed Bug #4904: Typo on design_area_asset_lineage screen.
	Fixed Bug #4905: Quotation button in WYSIWYG view, unquote results in escaped html.
	Fixed Bug #4906: 'AssetStatusUpdate' event broadcasted but onAssetStatusUpdate() never executed.
	Fixed Bug #4907: Error when changing content type in a non default context.
	Fixed Bug #4910: When an asset is linked to a big number of parents, you will easily get Oracle error ORA-01795: maximum number of expressions in a list is 1000.
	Fixed Bug #4915: Metadata value trigger condition does not consider keywords.
	Fixed Bug #4924: DB error when a design asset is notice linked to too many assets.
	Fixed Bug #4930: Global Search and Replace doesn't replace metadata.

	CMS
	Fixed Bug #4878: ORA-01795 on Site Map asset.
	Fixed Bug #4880: Insert image doesn't remember location of last image variety uploaded.
	Fixed Bug #4892: Small typos in Remote Content asset Details screen.
	Fixed Bug #4901: Using a nested asset in simple edit layout which has an arbitrary paint layout set, will throw PHP notices.

	Calendar
	Fixed Bug #4899: Recurring calendar event instance date keyword bugs.

	Web Services
	Fixed Bug #4877: JS API Fails on https only domains.
	Fixed Bug #4909: JS API setAssetStatus permission denied for user with write permissions.
	Fixed Bug #4920: JS API not escaping metadata correctly.
	Fixed Bug #4922: JS API returns invalid JSON.

	Funnelback Package
	Fixed Bug #4911: Contextual Navigation links not working with Funnelback Server Search.
	Fixed Bug #4921: The Sitemap XML generated by Matrix is not escaping nbsp chars.

